[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tecnologias Blockchain e suas Aplicações",
    "section": "",
    "text": "Bem-vindo\nEste livro reune o material das práticas da disciplina PPGCC17 - Tópicos em Redes de Computadores e Cibersegurança, no tema Tecnologias Blockchain.",
    "crumbs": [
      "Bem-vindo"
    ]
  },
  {
    "objectID": "index.html#licença",
    "href": "index.html#licença",
    "title": "Tecnologias Blockchain e suas Aplicações",
    "section": "Licença",
    "text": "Licença\nEste material é livre para o uso e está sobre a licença Creative Commons Attribution-NonCommercial-NoDerivs 4.0.",
    "crumbs": [
      "Bem-vindo"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "",
    "text": "1.1 Objetivos\nApresentação de uma Visão Geral sobre o Ecossistema de Tecnologias relacionadas a Blockchain. Surgimento e contexto histórico vinculado ao Bitcoin. Mas o foco principal está na rede Ethereum e componentes do seu Ecossistema. Falaremos um pouco sobre a Ethereum Virtual Machine (EVM) e Contratos Inteligentes. Além disso, uma perspectiva do usuário é apresentada, mostrando a estrutura dos blocos do blockchain da Ethereum, Wallets e softwares clientes, nós e mineradores, ferramentas e APIs, protocolos e Linguagens de Programação Suportados.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#objetivos",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#objetivos",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "",
    "text": "Ideia Geral da Disciplina",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#interesse-no-termo-blockchain-ao-longo-do-tempo",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#interesse-no-termo-blockchain-ao-longo-do-tempo",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "1.2 Interesse no termo “blockchain” ao longo do tempo",
    "text": "1.2 Interesse no termo “blockchain” ao longo do tempo\n\n\n\nPesquisas sobre o termo “blockchain” Fonte: Google Trends",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#como-um-blockchain-funciona",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#como-um-blockchain-funciona",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "1.3 Como um Blockchain funciona",
    "text": "1.3 Como um Blockchain funciona\n\n\n\nFuncionamento de um Blockchain",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#definição-de-blockchain",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#definição-de-blockchain",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "1.4 Definição de Blockchain",
    "text": "1.4 Definição de Blockchain\n[alertblock]{Definição de Gosh}\nA blockchain is a digital distributed ledger, where transactions are stored in blocks linked to each other with a singly linked list. A block contains a link pointing to its predecessor. New blocks can be appended to the head of a blockchain. Existing blocks cannot be modified or deleted.\n[/alertblock]\n[alertblock]{Definição de Layman}\nBlockchain is an ever-growing, secure, shared recordkeeping system in which each user of the data holds a copy of the records, which can only be updated if all parties involved in a transaction agree to update.\n\n[/alertblock]\n[alertblock]{Definição Técnica}\nBlockchain is a peer-to-peer distributed ledger that is cryptographically-secure, append-only, immutable (extremely hard to change), and updateable only via consensus or agreement among peers.\n\n[/alertblock]\n[framebreak]\n\nPeer-to-peer\nDistributed Ledger (livro-razão distribuído)\nCriptograficamente Seguro\nAppend Only (Permitido somente anexar novos blocos)\nAtualizável via consenso dos pares.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#como-a-tecnologia-blockchain-foi-desenvolvida",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#como-a-tecnologia-blockchain-foi-desenvolvida",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "1.5 Como a Tecnologia Blockchain foi desenvolvida",
    "text": "1.5 Como a Tecnologia Blockchain foi desenvolvida\n\n\n1950s – Hash functions\n1970s – Merkle trees - hashes in a tree structure\n1970s continued – Research in distributed systems, consensus, state machine replication\n1980s – Hash chains for secure logins\n1990s – e-Cash for e-payments\n\n\n\n1991 – Secure timestamping of digital documents.\n1992 – Hashcash idea to combat junk emails\n1994 – S/KEY application for Unix login.\n1997/2002 – Hashcash\n2008/2009 – Bitcoin (the first blockchain)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#visão-arquitetural-de-um-blockchain",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#visão-arquitetural-de-um-blockchain",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "1.6 Visão Arquitetural de um Blockchain",
    "text": "1.6 Visão Arquitetural de um Blockchain",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#estrutura-genérica-de-um-blockchain",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#estrutura-genérica-de-um-blockchain",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "1.7 Estrutura Genérica de um Blockchain",
    "text": "1.7 Estrutura Genérica de um Blockchain\n\n\n\nEstrutura Genérica de um Blockchain\n\n\n\n\n\nOrganização Blockchain\n\n\n\nPara evitar overhead, os registros são agrupados em blocos. Os registros em um bloco são organizados em uma estrutura de árvore chamada de Merkle tree [Merkle 1989] para acesso mais rápido.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#estrutura-genérica-de-um-bloco",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#estrutura-genérica-de-um-bloco",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "1.8 Estrutura Genérica de um bloco",
    "text": "1.8 Estrutura Genérica de um bloco\n\n\n\nEstrutura de um Bloco",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#benefícios-e-limitações-de-um-blockchain",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#benefícios-e-limitações-de-um-blockchain",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "1.9 Benefícios e Limitações de um Blockchain",
    "text": "1.9 Benefícios e Limitações de um Blockchain\n[columns]\n[column=0.5]\nBenefícios\nDescentralização\nTransparência\nConfiança\nImutabilidade\nAlta disponibilidade\nAltamente Seguro\nSimplificação de paradigmas atuais\nTransações rápidas\n\n[column=0.5]\nLimitações\nEscalabilidade\nAdaptabilidade\nRegulação\nTecnologia Relativamente Imatura (Ainda)\nPrivacidade\n[/columns]",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#características-principais",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#características-principais",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "1.10 Características Principais",
    "text": "1.10 Características Principais\n\nConsenso Distribuído\nVerificação de Transações\nPlataforma para smart contracts\nTransferência de valores entre pares\nGeneração de criptomoedas\nProvedor de Segurança\nImutabilidade\nUnicidade ou singularidade (Uniqueness)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#bitcoin-1",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#bitcoin-1",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.1 Bitcoin",
    "text": "2.1 Bitcoin\n\nSurgiu em \\(2008/2009\\), sendo a primeira rede Blockchain.\nRede voltada para a Criptomoeda – Bitcoin (BTC).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#bitcoin-na-perspectiva-de-usuário",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#bitcoin-na-perspectiva-de-usuário",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.2 Bitcoin na perspectiva de usuário ",
    "text": "2.2 Bitcoin na perspectiva de usuário \n\nPassos de como enviar e receber pagamentos:\n\nA transação começa com um remetente assinando a transação com sua chave privada. \nA transação é serializada para que possa ser transmitida pela rede.\nA transação é transmitida para a rede.\nMineradores que escutam transações pegam a transação.\nA transação é verificada quanto à sua legitimidade pelos mineradores.\nA transação é adicionada ao bloco candidato/proposto para mineração.\nUma vez minerado, o resultado é transmitido para todos os nós da rede Bitcoin.\nNormalmente, neste momento, os usuários aguardam até seis confirmações para serem recebidas antes que uma transação seja considerada final; no entanto, uma transação pode ser considerada final na etapa anterior.\nAs confirmações servem como um mecanismo adicional para garantir que haja probabilidade muito baixa de uma transação ser revertida, mas, caso contrário, uma vez que um bloco minerado seja finalizado e anunciado, as transações dentro desse bloco serão finais nesse ponto.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#chaves-criptográficas",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#chaves-criptográficas",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.3 Chaves Criptográficas ",
    "text": "2.3 Chaves Criptográficas \n[columns]\n[column=0.5]\n\nPrivate keys na rede Bitcoin\n\nPrivate keys são usadas para assinar digitalmente transações, comprovando a propriedade dos bitcoins.\n\nPublic keys na rede Bitcoin \n\nAs chaves públicas são usadas pelos nós para verificar se a transação foi realmente assinada com a chave privada correspondente.\n\nEndereços na rede Bitcoin\n\nUm endereço Bitcoin é criado pegando a chave pública correspondente de uma chave privada e fazendo hash duas vezes, primeiro com o algoritmo SHA256 e depois com RIPEMD160.\n\nEndereços Bitcoin são codificados usando Base58Check.\n\n[column=0.5]\n\n[/columns]",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#não-perder-as-chaves-é-importante",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#não-perder-as-chaves-é-importante",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.4 Não perder as chaves é importante",
    "text": "2.4 Não perder as chaves é importante\n[columns]\n[column=0.5]\n\n[column=0.5]\n\n[/columns]\nO Bitcoin Enterrado: A Caça ao Tesouro de James Howells na Vida Real",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#script",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#script",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.5 Script",
    "text": "2.5 Script\n\nLinguagem simples baseada em pilha usada para descrever como os bitcoins podem ser gastos ou transferidos.\nAvaliada da esquerda para a direita usando uma pilha Last in, First Out (LIFO).\nComposta por dois componentes: elementos e operações.\nScripts usam vários opcodes para definir suas operações.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#opcodes",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#opcodes",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.6 Opcodes",
    "text": "2.6 Opcodes\n\nAqui estão alguns exemplos de alguns opcodes úteis usados ​​na linguagem Script no blockchain do Bitcoin.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#uma-visualização-da-blockchain-do-bitcoin",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#uma-visualização-da-blockchain-do-bitcoin",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.7 Uma Visualização da Blockchain do Bitcoin",
    "text": "2.7 Uma Visualização da Blockchain do Bitcoin",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#bloco-genesis",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#bloco-genesis",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.8 Bloco Genesis",
    "text": "2.8 Bloco Genesis\n[alertblock]{Bloco Genesis}\nO Bloco Genesis ou bloco \\(\\#0\\) foi hardcoded (codificado) por suas características especiais: ele é o único que não aponta para nenhum bloco anterior. No seu hash foi encriptado o bloco junto com a mensagem “The Times 03/Jan/2009 Chancellor on brink of second bailout for banks”, manchete do jornal naquele dia. Além de servir como prova datada, a manchete escolhida representa justamente uma crítica ao sistema bancário.\n[/alertblock]\n[framebreak]\n[columns]\n[column=0.5]\n\n[column=0.5]\n\nFonte: https://github.com/bitcoin/bitcoin/blob/master/src/chainparams.cpp\n[/columns]\n[framebreak]\n/**\n * Build the genesis block. Note that the output of its generation\n * transaction cannot be spent since it did not originally exist in the\n * database.\n *\n * CBlock(hash=000000000019d6, ver=1, hashPrevBlock=00000000000000, hashMerkleRoot=4a5e1e, nTime=1231006505, nBits=1d00ffff, nNonce=2083236893, vtx=1)\n *   CTransaction(hash=4a5e1e, ver=1, vin.size=1, vout.size=1, nLockTime=0)\n *     CTxIn(COutPoint(000000, -1), coinbase 04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73)\n *     CTxOut(nValue=50.00000000, scriptPubKey=0x5F1DF16B2B704C8A578D0B)\n *   vMerkleTree: 4a5e1e\n */\nstatic CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, \nconst CAmount& genesisReward)\n{\n  const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n  const CScript genesisOutputScript = CScript() &lt;&lt; ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") &lt;&lt; OP_CHECKSIG;\n  return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n}\n[framebreak]",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#a-carteira-de-satoshi",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#a-carteira-de-satoshi",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.9 A carteira de Satoshi",
    "text": "2.9 A carteira de Satoshi\n\nCarteira: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n\n\n\n\n1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n\n\n\nEssa primeira transação foi incluída no bloco #0, sob o hash 4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b.\n\n\n\n\n4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\n\n\n\n\n\n4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\n\n\n\n\n\n1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n\n\n[framebreak]\n\nDetalhes da Transação:\n\n\n\n\n4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\n\n\n[framebreak]\n\n\n\n\nSaldo em 21/11/2023\n\n\n\n\n\nSaldo em 13/08/2024\n\n\n\n\n\nSaldo em 21/11/2023 Fonte: blockchain.com\n\n\n\n\n\nSaldo em 13/08/2024 Fonte: blockchain.com\n\n\n\n\n\nSaldo em 16/06/2025 Fonte: blockchain.com",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#quem-é-satoshi-nakamoto",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#quem-é-satoshi-nakamoto",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "3.1 Quem é Satoshi Nakamoto?",
    "text": "3.1 Quem é Satoshi Nakamoto?\n\n\n\nElon Musk Fonte: CanalTech\n\n\n\n\n\nDorian Nakamoto Fonte: Livecoins\n\n\n\n\n\nLinus Torvalds Fonte: Livecoins\n\n\n\n\n\nLinus Torvalds Fonte: cointelegraph\n\n\n\n\n\nSteve Jobs Fonte: Exame 10/04/2023\n\n\n\n\n\nCraig Wright Fonte: BBC 19/12/2024\n\n\n[columns]\n[column=0.5]\n\n\n\nVídeo\n\n\n[column=0.5]\n\n\n\nVídeo\n\n\n[/columns]\nLista de suspeitos no decorrer da história: https://www.infomoney.com.br/perfil/satoshi-nakamoto/",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#tamanho-do-blockchain-do-bitcoin",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#tamanho-do-blockchain-do-bitcoin",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "3.2 Tamanho do Blockchain do Bitcoin",
    "text": "3.2 Tamanho do Blockchain do Bitcoin\n\nO Blockchain do Bitcoin tinha em October 29, 2017, aproximadamente: \\(139GB\\)\n\n\n[framebreak]\n\nA figura mostra a evolução de Aug 2017 para Jul 2020. Aproximandamente, \\(286 GB\\).\n\n\n[framebreak]\n\nA figura mostra a evolução de Jan 2009 para Set 2022. Aproximandamente, \\(426.7 GB\\).\n\n\n\nFonte: https://www.blockchain.com/charts/blocks-size\nTamanho em 14/04/2023: \\(472.9 GB\\)\n\n\n\n\nTamanho em 14/04/2023 Fonte: ycharts\n\n\n\nTamanho em 09/08/2023: \\(502.06 GB\\)\n\n\n\n\nTamanho em 09/08/2023 Fonte: ycharts\n\n\n\nTamanho em 21/11/2023: \\(527.47 GB\\)\n\n\n\n\nTamanho em 21/11/2023 Fonte: ycharts\n\n\n\nTamanho em 13/08/2024: \\(592.72 GB\\)\n\n\n\n\nTamanho em 13/08/2024 Fonte: ycharts\n\n\n\nTamanho em 16/12/2024: \\(622.77 GB\\)\n\n\n\n\nTamanho em 16/12/2024 Fonte: ycharts\n\n\n[framebreak]\n\nTamanho em 16/06/2025: \\(665.07 GB\\)\n\n\n\n\nTamanho em 16/06/2025 Fonte: ycharts",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#consumo-de-energia",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#consumo-de-energia",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "3.3 Consumo de Energia",
    "text": "3.3 Consumo de Energia\n\nPico em Janeiro de 2022: \\(204.5~TWh\\) por ano.\n\n\n\n\nConsumo de Energia Fonte: digiconomist\n\n\n\nEm 21/11/2023: \\(137.68~TWh\\) por ano.\n\n\n\n\nConsumo de Energia Fonte: digiconomist\n\n\n[framebreak]\n\nEm 13/08/2024: \\(172.26~TWh\\) por ano.\n\n\n\n\nConsumo de Energia Fonte: digiconomist\n\n\n\nEm 16/12/2024: \\(175.87~TWh\\) por ano.\n\n\n\n\nConsumo de Energia Fonte: digiconomist\n\n\n\nEm 16/06/2025: \\(175.87~TWh\\) por ano.\n\n\n\n\nConsumo de Energia Fonte: digiconomist\n\n\nArtigo: “Cryptocurrencies on the road to sustainability: Ethereum paving the way for Bitcoin” (December 2022); Bitcoin’s biggest competitor, Ethereum, has reduced its electrical energy requirement by at least 99.84% by changing its method of production.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#leitura-recomendada",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#leitura-recomendada",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "3.4 Leitura Recomendada",
    "text": "3.4 Leitura Recomendada\n[alertblock]{Leitura Recomendada}\nCapítulo 5/6: Introduction Bitcoin: IMRAN BASHIR. Mastering Blockchain : Distributed Ledger Technology, Decentralization, and Smart Contracts Explained, 2nd Edition.\n[/alertblock]",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#projetos-de-pesquisa",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#projetos-de-pesquisa",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "3.5 Projetos de Pesquisa",
    "text": "3.5 Projetos de Pesquisa\nTítulo: Estudo Exploratório De Técnicas E Mecanismos Para Paralelização Automática E Offloading De Código Em Sistemas Heterogêneos (Pa-Code-Offload).\n\n\nPesquisa em Computação Paralela.\n\n\nTítulo: Investigação sobre Infraestrutura e Suporte ao Desenvolvimento de Aplicações utilizando Tecnologias Blockchain (PRO-BLOCKCHAIN).\n\n\nPesquisa em Tecnologias Blockchain.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#projetos-de-extensão",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#projetos-de-extensão",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "3.6 Projetos de Extensão",
    "text": "3.6 Projetos de Extensão\nTítulo: Escola de Computação Paralela (ECP 2024).\n\n\nPreparar e ministrar minicursos em temas de Computação Paralela.\n\n\nTítulo: Academia Blockchain.\n\n\nPreparar e ministrar minicursos relacionados às Tecnologias Blockchain.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#grupo-estudos",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#grupo-estudos",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "3.7 Grupo Estudos",
    "text": "3.7 Grupo Estudos\nGEDVAC: Grupo de Estudos sobre Desempenho, máquinas Virtuais, Arquitetura de computadores e Compiladores da UTFPR-CM.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#word-cloud",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#word-cloud",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "4.1 Word Cloud",
    "text": "4.1 Word Cloud",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#referências-1",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#referências-1",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "4.2 Referências",
    "text": "4.2 Referências\n\n\nGrigg, Ian. 2001. “Financial Cryptography in 7 Layers.” In\nFinancial Cryptography, edited by Yair Frankel, 332–48. Berlin,\nHeidelberg: Springer Berlin Heidelberg.\n\n\nImran, Bashir. 2018. Mastering Blockchain : Distributed Ledger\nTechnology, Decentralization, and Smart Contracts Explained, 2nd\nEdition. Packt Publishing. https://search.ebscohost.com/login.aspx?direct=true&db=e000xww&AN=1789486&lang=pt-br&site=eds-live&scope=site.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html",
    "title": "2  Aula 02 - Ethereum",
    "section": "",
    "text": "3 Introdução",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#objetivos",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#objetivos",
    "title": "2  Aula 02 - Ethereum",
    "section": "3.1 Objetivos",
    "text": "3.1 Objetivos\n\nApresentação de uma Visão Geral sobre rede Ethereum, componentes do Ecossistema Ethereum, a Ethereum Virtual Machine (EVM) e Contratos Nativos. Além disso, uma perspectiva do usuário é apresentada, mostrando a estrutura dos blocos do blockchain da Ethereum, Wallets e softwares clientes, nós e mineradores, ferramentas e APIs, protocolos e Linguagens de Programação Suportados.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#ethereum-overview",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#ethereum-overview",
    "title": "2  Aula 02 - Ethereum",
    "section": "5.1 Ethereum – Overview",
    "text": "5.1 Ethereum – Overview\n\nVitalik Buterin conceitualizou Ethereum em Novembro de 2013.\nA ideia central proposta foi o desenvolvimento de uma linguagem Turing-completa para permitir o desenvolvimento de programas arbitrários (contratos inteligentes) para blockchain e Aplicações Descentralizados (DApps).\nEste conceito difere do Bitcoin, onde a linguagem de script é limitada e permite apenas as operações necessárias.\n\n\n\n\nO Ethereum Yellow Paper1\n\n\n[framebreak]\n\nO Ethereum Yellow Paper foi escrito por Dr. Gavin Wood, o fundador do Ethereum e da Parity (http://gavwood.com), e serve como uma especificação formal do protocolo da Ethereum.\nAs implementações de clientes Ethereum seguem as especificações de protocolo definidas no artigo.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#ethereum-releases",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#ethereum-releases",
    "title": "2  Aula 02 - Ethereum",
    "section": "5.2 Ethereum Releases",
    "text": "5.2 Ethereum Releases\n\nA primeira versão da Ethereum, denominada Olympic, foi liberada em Maio de 2015.\nDois meses mais tarde, a versão chamada de Frontier foi liberada em Julho.\nOutra versão, a Homestead com várias melhorias foi liberada em Março de 2016.\nA release chamada de Muir Glacier, que atrasou a difficulty bomb (https://eips.ethereum.org/EIPS/eip-2384).\nUm grande lançamento antes disso foi Istambul, que incluiu mudanças em torno de privacidade e dimensionamento capacidades.\nUma lista completa com todas as releases anunciadas é mantida em https://github.com/ethereum/go-ethereum/releases.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#a-blockchain-ethereum-1",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#a-blockchain-ethereum-1",
    "title": "2  Aula 02 - Ethereum",
    "section": "6.1 A Blockchain Ethereum",
    "text": "6.1 A Blockchain Ethereum\n\nO Ethereum, assim como qualquer outro blockchain, pode ser visualizado como uma máquina de estado baseada em transações.\n\n\n\nA ideia principal da blockchain da Ethereum: um estado gênese é transformado em um estado final executando transações de forma incremental.\nA transformação final é então aceita como a versão absoluta e indiscutível do estado.\nA função de transição de estado Ethereum é mostrada, onde a execução de uma transação resultou em uma transição de estado.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#ethereum-perspectiva-do-usuário",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#ethereum-perspectiva-do-usuário",
    "title": "2  Aula 02 - Ethereum",
    "section": "6.2 Ethereum – Perspectiva do usuário ",
    "text": "6.2 Ethereum – Perspectiva do usuário \n\nO caso de uso mais comum do rede Ethereum é o envio e o recebimento de pagamentos.\nPara isso, o usuário assina a transação e a envia, que se propaga na rede, momento em que os mineradores a pegam, verificam e iniciam a Prova de Trabalho (PoW).\nCom a atualização Merge, a PoW foi substituída por Proof of Stake PoS.\nSe a verificação for bem sucedida, o bloco com a transação é finalizado e propagado, e um novo bloco é adicionado à cadeia.\nPara enviar e receber transações, um software de carteira pode ser usado, por exemplo, carteiras são usadas em dispositivos móveis. como aplicativos.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#arquitetura-de-alto-nível-da-ethereum",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#arquitetura-de-alto-nível-da-ethereum",
    "title": "2  Aula 02 - Ethereum",
    "section": "6.3 Arquitetura de Alto Nível da Ethereum",
    "text": "6.3 Arquitetura de Alto Nível da Ethereum",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#rede-ethereum-mainnet",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#rede-ethereum-mainnet",
    "title": "2  Aula 02 - Ethereum",
    "section": "7.1 Rede Ethereum: mainnet",
    "text": "7.1 Rede Ethereum: mainnet\nA rede Ethereum é uma rede peer-to-peer onde os nós participantes mantem a blockchain e contribuem para o mecanismo de consenso. As redes podem ser divididas em três tipos, com base nos requisitos e uso.\n[block]{A mainnet}\nA mainnet é a atual rede Ethereum. Seu ID de rede é \\(1\\) e seu ID de cadeia (chain) é também \\(1\\). Os IDs de rede e de cadeia são usados para identificar a rede. Um explorador de blocos que mostra informações detalhadas sobre blocos e outras métricas relevantes está disponível em https://etherscan.io, que pode ser usado para explorar a blockchain Ethereum.\n[/block]",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#redes-de-testes",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#redes-de-testes",
    "title": "2  Aula 02 - Ethereum",
    "section": "7.2 Redes de Testes",
    "text": "7.2 Redes de Testes\n[alertblock]{Testnets}\nExistem um número de redes de testes (testnets) disponíveis para Ethereum. Elas tem como objetivo fornecer um ambiente de testes para contratos inteligentes e DApps antes de serem implantados para produção na rede blockchain. Além disso, sendo redes de teste, elas permitem experimentos e pesquisa. Umas das principais redes de testes que existiu foi Ropsten, que contém todas as características de outras redes de propósito especial menores que foram criados para fins específicos. Por exemplo, outras redes de teste incluem Kovan e Rinkeby, que foram desenvolvidos para testar as versões do Byzantium. As mudanças que foram implementados nessas redes de teste menores também foram implementados em Ropsten, fazendo com que a rede Ropsten tivesse todas as propriedades de Kovan e Rinkeby.\n[/alertblock]\n[framebreak]\n[alertblock]{Testnets}\nEm 16/06/2025, as três testsnets públicas para desenvolvimento que eram mantidas Sepolia, Hoodi e a Holesky, (que será depreciada em setembro de 2025).\nA rede Sepolia é uma rede para desenvolvedores testarem seus contratos e aplicações. A rede Goerli permitia que os desenvolvedores de protocolo testassem atualizações de rede e permitia que os interessados ​​testassem validadores em execução. A Goerli foi depreciada em \\(2023\\), dando lugar a Holešky.\nA Sepolia é recomendada como padrão para desenvolvimento de aplicações.\nAtualmente, (14/08/2025) as redes de teste podem ser vistas em: https://ethereum.org/pt/developers/docs/networks/\n[/alertblock]",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#redes-privadas",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#redes-privadas",
    "title": "2  Aula 02 - Ethereum",
    "section": "7.3 Redes Privadas",
    "text": "7.3 Redes Privadas\n[exampleblock]{Redes Privadas}\nAs private nets são redes privadas que podem ser criadas gerando-se um novo genesis block. Este é geralmente o caso em redes blockchain privadas, onde um grupo privado de entidades iniciam sua rede blockchain e a usam como uma blockchain autorizada ou de consórcio.\nUma lista de redes pode ser vista em https://chainlist.org/.\nMais informações sobre Redes Privadas.\n[/exampleblock]",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#elementos-do-ecossistema-ethereum",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#elementos-do-ecossistema-ethereum",
    "title": "2  Aula 02 - Ethereum",
    "section": "7.4 Elementos do Ecossistema Ethereum",
    "text": "7.4 Elementos do Ecossistema Ethereum\n\nChaves e Endereços\nContas\nTransações e mensagens\nCriptomoeda/Tokens Ether\nA Ethereum Virtual Machine (EVM) \nSmart contracts e contratos nativos.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#tipos-de-contas",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#tipos-de-contas",
    "title": "2  Aula 02 - Ethereum",
    "section": "8.1 Tipos de contas",
    "text": "8.1 Tipos de contas\n\nEOAs: Externally Owned Accounts. Contas de usuários representadas por um endereço.\nCAs: Contract accounts. Criadas como resultado do deployment de um contrato inteligente, também representado por um endereço.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#externally-owned-accounts-eoa",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#externally-owned-accounts-eoa",
    "title": "2  Aula 02 - Ethereum",
    "section": "8.2 Externally Owned Accounts (EOA)",
    "text": "8.2 Externally Owned Accounts (EOA)\n\nUma Externally Owned Account (EOA) é uma conta controla por um par de chaves privadas, que pode ser mantida por uma pessoa ou por um servidor externo. Essas contas não podem conter código EVM. As características de um EOA incluem o seguinte:\n\nContém um saldo (balance) de Ether\nCapaz de enviar transações\nControlada pelas chaves privadas da conta\nNão tem nenhum código associado a ela.\nUm banco de dados de chave/valor contido em cada conta, onde chaves e os valores são strings de 32 bytes.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#contract-accounts-ca",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#contract-accounts-ca",
    "title": "2  Aula 02 - Ethereum",
    "section": "8.3 Contract Accounts (CA)",
    "text": "8.3 Contract Accounts (CA)\n\nContract accounts não são controladas por humanos. Elas armazenam instruções de contratos inteligentes e são ativadas por contas externas ou por outros contratos.\nContract accounts tem as seguintes características:\n\nTem um saldo de Ether\nMantem algum código de contrato na memória.\nPode ser acionado por humanos (enviando uma transação) ou outro contratos enviando uma mensagem.\nQuando executado, pode executar operações complexas.\nTêm seu próprio estado persistente e podem chamar outros contratos.\nNão ter dono após ser liberado para o EVM.\nUm banco de dados de chave/valor contido em cada conta, onde chaves e os valores são strings de 32 bytes.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#transações-e-árvore-de-transações-trie",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#transações-e-árvore-de-transações-trie",
    "title": "2  Aula 02 - Ethereum",
    "section": "9.1 Transações e Árvore de Transações (trie)",
    "text": "9.1 Transações e Árvore de Transações (trie)\n[alertblock]{Transações}\nUma transação no Ethereum consiste em vários campos, como mostrado aqui, junto com a transaction trie. O diagrama também mostra a relação entre a tentativa de transação e o cabeçalho do bloco.\n[/alertblock]",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#tipos-de-transações",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#tipos-de-transações",
    "title": "2  Aula 02 - Ethereum",
    "section": "9.2 Tipos de Transações",
    "text": "9.2 Tipos de Transações\n[columns]\n[column=0.5]\n\nExistem três tipo de transações:\n\nCriação de Contrato [Contract Creation]\nInvocação de Contrato [Contract Call]\nTransferência de Valor.\n\n\n[column=0.5]\n\n[/columns]\nO diagrama mostra a criação do contrato e as transações de chamada, com campos obrigatórios.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#estado-da-conta-e-armazenamento-na-trie",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#estado-da-conta-e-armazenamento-na-trie",
    "title": "2  Aula 02 - Ethereum",
    "section": "9.3 Estado da conta e armazenamento na trie",
    "text": "9.3 Estado da conta e armazenamento na trie\nO diagrama mostra os campos contidos no estado da conta e como os vários elementos estão contidos no world state trie: * World state trie\n\nState root\nAccount state\nAccount storage trie",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#recibos-de-transações-1",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#recibos-de-transações-1",
    "title": "2  Aula 02 - Ethereum",
    "section": "10.1 Recibos de Transações",
    "text": "10.1 Recibos de Transações\n[columns]\n[column=0.5]\n\nRecibos de Transações (transaction receipts) são gerados como resultado da execução de transações.\nLogs também são atualizados em conformidade.\nAmbas as estruturas de dados contêm vários campos.\n\n[column=0.5]\n\n[/columns]",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#blocks-e-blockchain",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#blocks-e-blockchain",
    "title": "2  Aula 02 - Ethereum",
    "section": "10.2 Blocks e Blockchain",
    "text": "10.2 Blocks e Blockchain\n[columns]\n[column=0.5]\nUm bloco Ethereum consiste em vários campos, conforme diagrama. State root, transaction root e receipts root são root hashes de suas respectivas árvores.\n[column=0.5]\n\n[/columns]",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#a-ethereum-virtual-machine-evm",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#a-ethereum-virtual-machine-evm",
    "title": "2  Aula 02 - Ethereum",
    "section": "11.1 A Ethereum Virtual Machine (EVM)",
    "text": "11.1 A Ethereum Virtual Machine (EVM)\n\nStack size based on LIFO queue: Last In, First Out.\nLimite de profundidade de pilha \\(1024\\)\nTuring complete mas limitada por gas, fazendo ela ser quasi-Turing complete.\nProjeto Big-endian.\nArmazenamento disponível na EVM:\n\nMemory \nStorage\nStack",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#evm-operation-design",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#evm-operation-design",
    "title": "2  Aula 02 - Ethereum",
    "section": "11.2 EVM operation design",
    "text": "11.2 EVM operation design",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#ambiente-de-execução",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#ambiente-de-execução",
    "title": "2  Aula 02 - Ethereum",
    "section": "11.3 Ambiente de Execução",
    "text": "11.3 Ambiente de Execução\n[columns]\n[column=0.5]\nO ambiente de execução do Ethereum consiste em vários elementos, como mostrado:\n[column=0.5]\n\n[/columns]",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#machine-state",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#machine-state",
    "title": "2  Aula 02 - Ethereum",
    "section": "11.4 Machine State",
    "text": "11.4 Machine State\n[columns]\n[column=0.5]\nUma Máquina de Estado ou Machine state é uma tupla compreendendo vários campos, como mostrado em:\n[column=0.5]\n\n[/columns]",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#nós-e-mineradores",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#nós-e-mineradores",
    "title": "2  Aula 02 - Ethereum",
    "section": "12.1 Nós e Mineradores ",
    "text": "12.1 Nós e Mineradores \n\nA mineração é o processo pelo qual novos blocos são selecionados por meio de um mecanismo de consenso e adicionados ao blockchain.\nO processo segue os seguintes passos:\nFicam ouvindo as transações transmitidas na rede Ethereum e determina as transações a serem processadas. \nDeterminam quais blocos são válidos e os obsoletos.\nAtualiza a conta (account balance) com a recompensa ganha pela mineração bem sucedida de um bloco.\nFinalmente, um novo estado válido é computado e o bloco é finalizado.\nEthash é o nome do algoritmo de Proof of Work (PoW) que era usado na Ethereum.\nCasper é o algoritmo de consenso Proof of Stake (PoS) da Ethereum.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#wallets-e-software-clientes",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#wallets-e-software-clientes",
    "title": "2  Aula 02 - Ethereum",
    "section": "13.1 Wallets e Software Clientes ",
    "text": "13.1 Wallets e Software Clientes \n\nWallets (Carteiras)\nLight clients (softwares clientes)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#tipos-de-sincronização-de-clientes",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#tipos-de-sincronização-de-clientes",
    "title": "2  Aula 02 - Ethereum",
    "section": "13.2 Tipos de sincronização de clientes",
    "text": "13.2 Tipos de sincronização de clientes\n\nFull: Os nós completos mantêm apenas uma cópia local dos dados relativamente recentes (normalmente os 128 blocos mais recentes), permitindo que os dados mais antigos sejam excluídos para economizar espaço em disco. Dados mais antigos podem ser regenerados quando necessário.\nArchive: Nesse modo de sincronização, o cliente Geth faz um download completo da blockchain para o nó local. Isso significa que ele obtém todos os cabeçalhos e corpos dos blocos e valida todas as transações e blocos desde o bloco genesis.\nFast: Neste modo é feito o download completo, mas somente recupera e verifica somente os \\(64\\) blocos anteriores ao bloco corrente. Depois disso, ele verifica os novos blocos na íntegra. Não reproduz e verifica todas as transações históricas desde o bloco genesis, em vez disso, ele só faz os downloads de estado. Isso também reduz significativamente o tamanho do disco do banco de dados blockchain. Este é o modo padrão de sincronização do cliente Geth.\nLight: Este é o modo mais rápido e apenas baixa e armazena o estado atual. Nesse modo, o cliente não baixa nenhum bloco histórico e processa apenas os blocos mais novos.\n\nMais informações: Nodes and clients",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#requisitos-full-node-vs-archive-node",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#requisitos-full-node-vs-archive-node",
    "title": "2  Aula 02 - Ethereum",
    "section": "13.3 Requisitos: Full Node vs Archive Node",
    "text": "13.3 Requisitos: Full Node vs Archive Node\nFull Node: últimos 128 mais recentes blocos.\n\n\n\nFull Node\n\n\nArchive Node: Todos os blocos desde o Genesis block. O armazenamento varia conforme o cliente (em março de 2023, o archive mode no Geth usava ~13.5 TB, e Erigon utilizava ~2 TB (3 TB era o recomendado)).\n\n\n\nArchive Node\n\n\n\n\n\nVídeo",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#tamanho-dos-dados-do-blockchain-da-ethereum",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#tamanho-dos-dados-do-blockchain-da-ethereum",
    "title": "2  Aula 02 - Ethereum",
    "section": "14.1 Tamanho dos dados do Blockchain da Ethereum",
    "text": "14.1 Tamanho dos dados do Blockchain da Ethereum\n\nNo início de 2020, o tamanho do blockchain Ethereum era de aproximadamente \\(210GB\\), baixar e manter isso pode ser um problema.\nEm 18 de outubro de 2022 o tamanho chegava a \\(966.06GB\\), segundo ycharts.\n\n[framebreak]\n\nEm 16 de abril de 2023 o tamanho estava em \\(914.81 GB\\).\n\n\n\n\nEthereum chain full sync data size Fonte: ycharts\n\n\n[framebreak]\n\nEm 10 de Agosto de 2023 o tamanho estava em \\(1138.91 GB\\).\n\n\n\n\nEthereum chain full sync data size Fonte: ycharts\n\n\n[framebreak]\n\nEm 21 de novembro de 2023 o tamanho estava em \\(1351.56 GB\\).\n\n\n\n\nEthereum chain full sync data size Fonte: ycharts\n\n\n[framebreak]\n\nEm 13 de agosto de 2024 o tamanho estava em \\(1137.17 GB\\).\n\n\n\n\nEthereum chain full sync data size Fonte: ycharts\n\n\n[framebreak]\n\nEm 16 de dezembro de 2024 o tamanho estava em \\(1203.89 GB\\).\n\n\n\n\nEthereum chain full sync data size Fonte: ycharts\n\n\n[framebreak]\n\nEm 16 de junho de 2025 o tamanho estava em \\(1328.17 GB\\).\n\n\n\n\nEthereum chain full sync data size Fonte: ycharts\n\n\n[framebreak]\n\nEm 14 de agosto de 2025 o tamanho está em \\(1373.84 GB\\).\n\n\n\n\nEthereum chain full sync data size Fonte: ycharts\n\n\n[framebreak]\n\nPanorama de \\(5\\) anos:\n\n\n\n\nEthereum chain full sync data size Fonte: ycharts",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#consumo-de-energia",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#consumo-de-energia",
    "title": "2  Aula 02 - Ethereum",
    "section": "14.2 Consumo de Energia",
    "text": "14.2 Consumo de Energia\n\nCom a última atualização Merge que trocaram a Proof of Work (PoW) pela Proof of Stake (PoS) tendo como uma das motivações a questão ambiental. Houve um grande impacto no consumo de energia.\n\n\n\n\nEthereum Energy Consumption\n\n\n\nEm 13/08/2024:\n\n\n\n\nEthereum Energy Consumption\n\n\n\nEm 16/12/2024:\n\n\n\n\nEthereum Energy Consumption\n\n\n\nEm 16/06/2025:\n\n\n\n\nEthereum Energy Consumption\n\n\n\nEm 14/08/2025:\n\n\n\n\nEthereum Energy Consumption",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#contratos-ricardianos",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#contratos-ricardianos",
    "title": "2  Aula 02 - Ethereum",
    "section": "15.1 Contratos Ricardianos",
    "text": "15.1 Contratos Ricardianos\n\nContratos Ricardianos foram introduzidos no Financial Cryptography in 7 Layers, por Ian Grigg, no final dos anos 1990s (10.1007/3-540-45472-1_23?) \n\n[columns]\n[column=0.5]\nOs contratos ricardianos podem registrar um documento como um contrato legal, e vinculá-lo com segurança a outros Sistemas.\n\nUsam hashes criptográficos para identificação\nIncluem conteúdo jurídico legível por humanos e código de máquina.\n\n[column=0.5]\n\n\n\nContratos Ricardianos\n\n\n[/columns]",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#contratos-inteligentes-1",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#contratos-inteligentes-1",
    "title": "2  Aula 02 - Ethereum",
    "section": "15.2 Contratos Inteligentes",
    "text": "15.2 Contratos Inteligentes\n\nUm Smart Contract é um programa de computador que é seguro e não interrompível representando um acordo que é executado automaticamente:\n\nSeguro\nDeterminístico\nSemanticamente correto\nNão interrompível. Uma vez executado, o contrato inteligente não pode ser interrompido e uma vez implantado geralmente não pode ser alterado.\n\nNick Szabo cunhou o termo “contrato inteligente”. Em 1994, ele escreveu uma introdução ao conceito e, em 1996, uma análise sobre o que os contratos inteligentes poderiam fazer).\nUma introdução sobre Contratos Inteligentes link",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#ecossistema-de-componentes-de-desenvolvimento-ethereum",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#ecossistema-de-componentes-de-desenvolvimento-ethereum",
    "title": "2  Aula 02 - Ethereum",
    "section": "16.1 Ecossistema de Componentes de Desenvolvimento Ethereum",
    "text": "16.1 Ecossistema de Componentes de Desenvolvimento Ethereum",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#linguagem-solidity",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#linguagem-solidity",
    "title": "2  Aula 02 - Ethereum",
    "section": "16.2 Linguagem Solidity",
    "text": "16.2 Linguagem Solidity\n\nÉ uma linguagem orientada a objetos de alto nível para implementar smart contracts. Tem se tornado a linguagem padrão para escrever contratos para Ethereum. O código precisa ser compilado e transformado em bytecode, é necessário utilizar o compilador solc.\nLeia mais sobre Solidity e Recursos de Desenvolvimento de DApps em DAPP DEVELOPMENT FRAMEWORKS2",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#compilador-solc",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#compilador-solc",
    "title": "2  Aula 02 - Ethereum",
    "section": "16.3 Compilador solc",
    "text": "16.3 Compilador solc\n\nO compilador para a linguagem Solidity é o solc.\nCompilador usado para compilar código de contratos inteligentes e converter eles para bytecode da EVM.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#ferramentas-e-bibliotecas",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#ferramentas-e-bibliotecas",
    "title": "2  Aula 02 - Ethereum",
    "section": "16.4 Ferramentas e Bibliotecas",
    "text": "16.4 Ferramentas e Bibliotecas\n\nGanache\n\nSimula um blockchain Ethereum local com uma interface com usuário (UI). É comumente usado no desenvolvimento e testes.\n\nGanache-cli\n\nVersão linha de comando do Ganache tem como pre-requisito NodeJS.\n\nNa aula anterior instalamos o Ganache e o Metamask.\n\n\n\n\nInterface do Ganache UI\n\n\n\n\n\nInterface do Ganache UI",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#frameworks",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#frameworks",
    "title": "2  Aula 02 - Ethereum",
    "section": "16.5 Frameworks",
    "text": "16.5 Frameworks\n\nTruffle: Framework de desenvolvimento para Ethereum com recursos para implantação, depuração e testes de contratos inteligentes. Automatiza as tarefas de compilação e deploy.\n\n\n\n\nTruffle\n\n\n[framebreak]\n\nHardhat\n\n[columns]\n[column=0.5]\n\n\n\nHardhat\n\n\n[column=0.5]\n\n\n\nHardhat\n\n\n[/columns]",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#desenvolvimento-e-implantação",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#desenvolvimento-e-implantação",
    "title": "2  Aula 02 - Ethereum",
    "section": "16.6 Desenvolvimento e Implantação",
    "text": "16.6 Desenvolvimento e Implantação\n\nA escrita de contratos inteligentes é basicamente a escrita de código fonte do contrato em Solidity em um editor de texto.\nExistem vários plugins e extensões disponíveis para os editores mais comuns, tais como Vim, Atom, VSCode:JuanBlanco.solidity, que fornecem syntax highlighting e formatadores para código fonte Solidity.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#formato-de-um-arquivo-fonte-de-solidity2",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#formato-de-um-arquivo-fonte-de-solidity2",
    "title": "2  Aula 02 - Ethereum",
    "section": "16.7 Formato de um arquivo fonte de Solidity3",
    "text": "16.7 Formato de um arquivo fonte de Solidity3\n\n\n\nFormato de Arquivo",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#remix-ide",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#remix-ide",
    "title": "2  Aula 02 - Ethereum",
    "section": "16.8 Remix IDE",
    "text": "16.8 Remix IDE\n\nA Remix IDE pode ser utilizada para edição, compilação, teste e deploy.\n\n\n\n\nEditando o contrato no Remix IDE\n\n\n\n\n\nCriando o Contrato\n\n\n\n\n\nAdicionando a cadeia UTFPR\n\n\n\n\n\nVerificando se a cadeia diferente UFTPR está armazenada",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#hyperledger-1",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#hyperledger-1",
    "title": "2  Aula 02 - Ethereum",
    "section": "17.1 Hyperledger",
    "text": "17.1 Hyperledger\n\n\n\nHyperledger Projects\n\n\nA Blockchain Platform for the Enterprise\n\n\n\nLinux Foundation\n\n\n\n\n\nHyperledger Projects\n\n\n\n\n\nHyperledger Projects",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#leitura-recomendada",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#leitura-recomendada",
    "title": "2  Aula 02 - Ethereum",
    "section": "17.2 Leitura Recomendada",
    "text": "17.2 Leitura Recomendada\n[alertblock]{Leitura Recomendada}\nCapítulo 11: Ethereum 101\nLivro: IMRAN BASHIR. Mastering Blockchain : Distributed Ledger Technology, Decentralization, and Smart Contracts Explained, 2nd Edition.\nCapítulo 12: Futher Ethereum\nLivro: IMRAN BASHIR. Mastering Blockchain : Distributed Ledger Technology, Decentralization, and Smart Contracts Explained, 2nd Edition.\n[/alertblock]",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#word-cloud",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#word-cloud",
    "title": "2  Aula 02 - Ethereum",
    "section": "17.3 Word Cloud",
    "text": "17.3 Word Cloud",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#referências-1",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#referências-1",
    "title": "2  Aula 02 - Ethereum",
    "section": "18.1 Referências",
    "text": "18.1 Referências",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#footnotes",
    "href": "aula-02-visao-geral-ethereum/aula-02-visao-geral-ethereum.html#footnotes",
    "title": "2  Aula 02 - Ethereum",
    "section": "",
    "text": "http://ethdocs.org/en/latest/contracts-and-transactions/developer-tools.html#developer-tools↩︎\nhttp://ethdocs.org/en/latest/contracts-and-transactions/developer-tools.html#developer-tools↩︎\nFormato de Arquivo na documentação do Solidity↩︎",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 02 - Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html",
    "title": "3  Prática: Explorando a Ethereum Virtual Machine (EVM)",
    "section": "",
    "text": "3.1 Introdução\nFaça a leitura do Capítulo 13: The Ethereum Virtual Machine\nA proposta desta prática é vermos o funcionamento da EVM.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Prática: Explorando a _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#sec:instalando:evm",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#sec:instalando:evm",
    "title": "3  Prática: Explorando a Ethereum Virtual Machine (EVM)",
    "section": "3.2 Instalando o evm",
    "text": "3.2 Instalando o evm\nNesta etapa, você instalará o cliente padrão de camada de execução (geth) e outras ferramentas. Iremos utilizar o evm, que é uma interface por linha de comando para a Ethereum Virtual Machine. Baixe e execute o a última versão 64-bit estável do Geth and Tools para seu Sistema Operacional do site Geth downloads page. Para Linux, baixe o arquivo Geth and Tools ou escolha nas guias a versão do seu Sistema Operacional.\nO geth e as outras ferramentas podem ser instaladas em sistemas derivados do Debian e Ubuntu com o pacote ethereum:\n$ sudo apt-get install -y software-properties-common\n$ sudo add-apt-repository -y ppa:ethereum/ethereum\n$ sudo apt-get update\n$ sudo apt-get install -y ethereum\nEm outros Sistemas como o Manjaro Linux:\n$ sudo pacaur -Ss ethereum\n$ sudo pacaur -Ss go-ethereum\nextra/go-ethereum 1.14.8-1 [instalado]\n    Official Go implementation of the Ethereum protocol\n$ pacaur -S go-ethereum\natencao: go-ethereum-1.14.8-1 está atualizado -- reinstalando\nresolvendo dependencias...\nprocurando pacotes conflitantes...\n\nPacotes (1) go-ethereum-1.14.8-1\n\nTamanho total instalado:  249,48 MiB\nAlteracao no tamanho:       0,00 MiB\n\n:: Continuar a instalacao? [S/n]\nImagens docker são mantidas no DockerHub para usuários que preferem rodar em um ambiente com container. As seguintes imagens estão disponíveis com todas as ferramentas:\n\nethereum/client-go:alltools-latest última versão de desenvolvimento.\nethereum/client-go:alltools-stable última versão estável.\nethereum/client-go:alltools-{version} versão estável com número de versão específica.\nethereum/client-go:alltools-release-{version} última versão estável com um família de versões específica.\n\nInstalação via docker pode ser feita com o comando:\n$ docker pull ethereum/client-go:alltools-stable\nalltools-stable: Pulling from ethereum/client-go\n9ad3caf28a48: Pull complete \n9824c27679d3: Pull complete \nb8a14d1aed66: Pull complete \nDigest: sha256:9b722323bf4a6c147f55fb162b78f54b3a074445e658b1259dee088c382cac51\nStatus: Downloaded newer image for ethereum/client-go:alltools-stable\ndocker.io/ethereum/client-go:alltools-stable\nA execução pode ser feita com o comando docker run e os parâmetros:\n$ docker run -it -p 30303:30303 ethereum/client-go:alltools-stable\n/ # geth --version\ngeth version 1.16.2-stable-dd1ebac1\n/ # \nA imagem irá expor as seguintes portas:\n8545 TCP, usado pela API HTTP baseada em JSON RPC\n8546 TCP, usado pela API WebSocket baseada em JSON RPC\n8547 TCP, usado pela API GraphQL\n30303 TCP e UDP, usado pelo protocolo P2P para rodar a rede.\nNota: se você estiver executando um cliente dentro de um container docker, você deveria montar um volume de dados com um diretório de dados do cliente na pasta /root/.ethereum dentro do container para que ter certeza que os dados baixados serão preservados entre uma reinicialização e outra do container.\nNa minha máquina montei o diretório /run/media/rag/DADOS/ethereum no diretório virtual /root/.ethereum, as sincronizações e comandos executados na imagem docker seriam refletidos na base de dados do diretório externo.\n$ docker run -it -p 30303:30303 -v /run/media/rag/DADOS/ethereum:/root/.ethereum  -w /root/.ethereum ethereum/client-go:alltools-latest\nPara atualizar as ferramentas para a última versão, basta parar o container e fazer um pull da última versão:\n$ docker stop ethereum/client-go:alltools-stable\n$ docker pull ethereum/client-go:alltools-latest\n$ docker run -it -p 30303:30303 ethereum/client-go:alltools-latest\nExistem quatro versões diferentes via imagem docker, a última versão de desenvolvimento, a última versão estável ou versões estáveis específicas:\n\nethereum/client-go: mais recente versão de desenvolvimento (padrão).\nethereum/client-go: última versão estável.\nethereum/client-go:{version}: é a versão estável para um número de versão específico.\nethereum/client-go:release-{version}: é a última versão estável do geth para uma versão específica.\n\nA execução da última versão seria pelo comando:\n$ docker run -it -p 30303:30303 ethereum/client-go:alltools-latest\nInstruções para outros Sistemas Operacionais podem ser encontradas no site oficial da documentação do Ethereum, artigo Installing Geth.\nVerifique se a versão mais nova já não foi instalada. O link Sprouted Seed Vial (v1.16.2) lista as versões.\nNa minha máquina está instalada a versão 1.16.2-stable-dd1ebac1, você pode verificar a sua com geth --version ou geth version ou evm --version:\n$ evm --version\nevm version 1.16.2-stable-dd1ebac1\n$ geth --version\ngeth version 1.16.2-stable-dd1ebac1\n$ geth version\nGeth\nVersion: 1.16.2-stable\nGit Commit: dd1ebac11757484575ee779381af32f29ce3fbe4\nGit Commit Date: 20250804\nArchitecture: amd64\nGo Version: go1.24.5\nOperating System: linux\nGOPATH=\nGOROOT=\n$ \nPara a execução de uma versão específica como a 1.14.12, versão instalada no laboratório, utilize o comando docker, substituindo em {version} com v1.14.12:\n$ docker run -it -p 30303:30303 ethereum/client-go:alltools-v1.14.12\nPara que a evm tenha suporte aos opcodes da versão Shangai. Crie um arquivo genesis.json com o conteúdo:\n{\n  \"config\": {\n    \"chainId\": 9599,\n    \"homesteadBlock\": 0,\n    \"eip150Block\": 0,\n    \"eip155Block\": 0,\n    \"eip158Block\": 0,\n    \"byzantiumBlock\": 0,\n    \"constantinopleBlock\": 0,\n    \"petersburgBlock\": 0,\n    \"istanbulBlock\": 0,\n    \"berlinBlock\": 0,\n    \"londonBlock\": 0,\n    \"shanghaiBlock\": 0,\n    \"shanghaiTime\":0\n  },\n  \"alloc\": {\n    \"0x1c7cd2d37ffd63856a5bd56a9af1643f2bcf545f\": {\n      \"balance\": \"0xffffffffffffffffffffffffffffffffffffffff\"\n    }\n  },\n  \"coinbase\": \"0x000000000000000000000000000000000000abcd\",\n  \"difficulty\": \"0x0\",\n  \"extraData\": \"\",\n  \"gasLimit\": \"0xffffff\",\n  \"nonce\": \"0x0000000000000042\",\n  \"mixhash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n  \"parentHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n  \"timestamp\": \"0x00\"\n}",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Prática: Explorando a _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#atividade-1-somando-dois-valores-na-pilha-da-evm",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#atividade-1-somando-dois-valores-na-pilha-da-evm",
    "title": "3  Prática: Explorando a Ethereum Virtual Machine (EVM)",
    "section": "3.3 Atividade 1: Somando dois valores na Pilha da EVM",
    "text": "3.3 Atividade 1: Somando dois valores na Pilha da EVM\n\nCrie um arquivo exemplo-001.asm com as instruções:\n\nPUSH 0x01\nPUSH 0x02\nADD\nSTOP\nO exemplod e código empilha dos valores \\(1\\) e \\(2\\) e faz um ADD, deixando o valor \\(3\\) no topo da pilha.\n\nExecute o comando:\n\n$ evm --debug --gas 0xffffff --nomemory=false --input 9ceee80c --prestate ./genesis.json run exemplo-001.asm\nSerá produzido um resultado semelhante a esse:\nINFO [08-29|14:46:00.855] Persisted trie from memory database      nodes=1 size=160.00B time=\"3.352us\" gcnodes=0 gcsize=0.00B gctime=0s livenodes=0 livesize=0.00B\n\n#\\#\\#\\# TRACE \\#\\#\\#\\#\nPUSH1           pc=00000000 gas=16777215 cost=3\n\nPUSH1           pc=00000002 gas=16777212 cost=3\nStack:\n00000000  0x1\n\nADD             pc=00000004 gas=16777209 cost=3\nStack:\n00000000  0x2\n00000001  0x1\n\nSTOP            pc=00000005 gas=16777206 cost=0\nStack:\n00000000  0x3\n\n#\\#\\#\\# LOGS \\#\\#\\#\\#\nNote o conteúdo da Pilha (Stack) sendo modificado com a inserção dos valores \\(0x01\\) e \\(0x02\\) e finalizando com a soma \\(0x03\\).\nUma outra forma de executar é compilando o código:\n$ evm compile exemplo-001.asm \n600160020100\nE executando o binário passado diretamente por parâmetro na opção --code 600160020100.\n$ evm --debug --gas 0xffffff --nomemory=false --input 9ceee80c --prestate ./genesis.json run --code 600160020100\nTemos o mesmo resultado:\nINFO [08-29|15:17:42.526] Persisted trie from memory database      nodes=1 size=160.00B time=\"4.26us\" gcnodes=0 gcsize=0.00B gctime=0s livenodes=0 livesize=0.00B\n\n#\\#\\#\\# TRACE \\#\\#\\#\\#\nPUSH1           pc=00000000 gas=16777215 cost=3\n\nPUSH1           pc=00000002 gas=16777212 cost=3\nStack:\n00000000  0x1\n\nADD             pc=00000004 gas=16777209 cost=3\nStack:\n00000000  0x2\n00000001  0x1\n\nSTOP            pc=00000005 gas=16777206 cost=0\nStack:\n00000000  0x3\n\n#\\#\\#\\# LOGS \\#\\#\\#\\#\n$",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Prática: Explorando a _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#atividade-2-executando-código-de-um-contrato",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#atividade-2-executando-código-de-um-contrato",
    "title": "3  Prática: Explorando a Ethereum Virtual Machine (EVM)",
    "section": "3.4 Atividade 2: Executando código de um contrato",
    "text": "3.4 Atividade 2: Executando código de um contrato\nIremos baixar e executar o código de um contrato. Para isso precisaremos recuperar o bytecode de um contrato. Acesse os detalhes da transação 0x8b42fe608875d106ca3a010766c53a449da92076e 2e46e38861090f508cf1504 no etherscan.io.\n\n\n\nDetalhes da Transação\n\n\nCopie o código binário do contrato (0x353755fa4c3d8e73ca5190d86894866e9bd6abb8) armazenado, conteúdo do campo Input Data para o arquivo transacao-0x8b42fe608875d106ca3a010766c53a449da9207 6e2e46e38861090f508cf1504-contrato-0x353755fa4c3d8e73ca5190d86894866e9bd6abb8.bin.\nExecute a evm com o código do contrato 0x353755fa4c3d8e73ca5190d86894866e9bd6abb8 passando o arquivo com o código binário através da opção --codefile.\nevm --debug --gas 0xffffff --nomemory=false --input 9ceee80c --prestate ./genesis.json run --codefile transacao-0x8b42fe608875d106ca3a010766c53a449da92076e2e46e38861090f508cf1504-contrato- 0x353755fa4c3d8e73ca5190d86894866e9bd6abb8.bin\nObserve as alterações do conteúdo de cada estrutura.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Prática: Explorando a _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#atividade-3-outras-operações",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#atividade-3-outras-operações",
    "title": "3  Prática: Explorando a Ethereum Virtual Machine (EVM)",
    "section": "3.5 Atividade 3: Outras Operações",
    "text": "3.5 Atividade 3: Outras Operações\nUtilize a referência de comandos da EVM para estender o exemplo-001.asm da Atividade \\(1\\) com operações de escrita e leitura em memória, no storage e outras operações lógicas e aritméticas.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Prática: Explorando a _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#relatório",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#relatório",
    "title": "3  Prática: Explorando a Ethereum Virtual Machine (EVM)",
    "section": "3.6 Relatório",
    "text": "3.6 Relatório\nEscreva um relatório sobre a Prática. Formato: Um arquivo PDF com sua identificação.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Prática: Explorando a _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#leitura-recomendada",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#leitura-recomendada",
    "title": "3  Prática: Explorando a Ethereum Virtual Machine (EVM)",
    "section": "3.7 Leitura Recomendada",
    "text": "3.7 Leitura Recomendada\n[alertblock]{Leitura Recomendada}\nCapítulo 13: The Ethereum Virtual Machine\nLivro: Antonopoulos, A. M., and G. Wood. 2018. Mastering Ethereum: Building Smart Contracts and DApps. O’Reilly Media, Incorporated.\n[/alertblock]",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Prática: Explorando a _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#sec-vet-consid-finais",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#sec-vet-consid-finais",
    "title": "3  Prática: Explorando a Ethereum Virtual Machine (EVM)",
    "section": "3.8 Considerações Finais",
    "text": "3.8 Considerações Finais",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Prática: Explorando a _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#próximas-aulas",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#próximas-aulas",
    "title": "3  Prática: Explorando a Ethereum Virtual Machine (EVM)",
    "section": "3.9 Próximas Aulas",
    "text": "3.9 Próximas Aulas\n\nInstalando o Cliente Ethereum: Geth.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Prática: Explorando a _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#word-cloud",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#word-cloud",
    "title": "3  Prática: Explorando a Ethereum Virtual Machine (EVM)",
    "section": "4.1 Word Cloud",
    "text": "4.1 Word Cloud",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Prática: Explorando a _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#referências-1",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#referências-1",
    "title": "3  Prática: Explorando a Ethereum Virtual Machine (EVM)",
    "section": "4.2 Referências",
    "text": "4.2 Referências",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Prática: Explorando a _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "",
    "text": "4.1 Introdução\nComo o desenvolvimento da Ethereum está em constante evolução, existem muitos componentes, clientes, e ferramentas que foram desenvolvidas e introduzidas nos últimos anos. Carteiras (wallets) e clientes de software.\nWallets são programas que podem armazenar as chaves privadas e baseado nos endereços armazenados podem calcular o saldo (balance) de ether associado a esses endereços, consultando a blockchain. O saldo pode ser utilizado para fazer o deploy de contratos inteligentes.\nClientes são softwares que acessam a rede, podendo fazer sincronizações e interagir com a rede:\nA Figura 4.I apresenta os percentuais de domínio dos clientes em uso, sendo sincronizados com a rede.\nDiagramas atualizados podem ser vistos no ethernodes.org e no clientdiversity.org. E alguma documentação de como migrar de um clinte para outro pode ser encontrada no link.\nLight clients são clientes Simple Payment Verification (SPV), fazem download somente de uma pequena parte do blockchain. Isto permite dispositivos com recursos limitados, tais como dispositivos móveis, dispositivos embarcados, tablets ou dispositivos capazes de verificar transações.\nUma cópia completa da blockchain da Ethereum não é necessária para esses SPV clients, que também podem validar transações.\nA diferença entre clients e wallets é que clientes são implementações completas do protocolo Ethereum, que suportam mineração e gerenciamento de contas e funções de wallets.\nCarteiras somente armazenam as chaves públicas e privadas para fornecer gerenciamento essential de contas e interagem com o blockchain para propósitos de pagamentos, transferências de fundos.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#introdução",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#introdução",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "",
    "text": "Geth: É a implementação oficial do Ethereum Client na linguagem Go. É um cliente de execução Ethereum, capaz de lidar com transações, implantação e execução de contratos inteligentes e traz uma máquina virtual embutida conhecida como Ethereum Virtual Machine (EVM). Ao executar o clietne Geth junto com um cliente de consenso transforma um computador em um nó da rede Ethereum. A última versão está disponível em https://geth.ethereum.org/downloads/.\nNethermind: É uma implementação feita em .NET que roda em GNU/Linux, Windows e macOS. Suporta Clique, Aura, e Ethash. Com boa velocidade de sincronização e suporte para plugins externos, ele fornece acesso confiável a dados on-chain por uma interface JSON-RPC e monitoramento de integridade de nós com Grafana e Seq. Detalhes de Instalação em https://docs.nethermind.io/get-started/installing-nethermind.\nErigon: É um fork do Geth, que tem sido reescrito com foco em velocidade e para poupar armazenamento. O cliente Erigon pode completar a sincronização em modo full archive em menos do que três dias e ocupando menos que \\(2TB\\) de armazenamento. Suporta várias blockchains compatíveis com EVM e testnets. Disponível em https://erigon.gitbook.io/erigon\nBesu: Hyperledger Besu é um cliente Ethereum projetado para ser amigável a empresas para casos de uso de rede pública e privada permissionada. Ele também pode ser executado com redes de teste como Sepolia e Görli. O Hyperledger Besu inclui vários algoritmos de consenso, incluindo Proof of Stake, Proof of Work e Proof of Authority (IBFT 2.0, QBFT e Clique). Disponível em https://besu.hyperledger.org/private-networks/get-started/install.\nEth: Implementação do Ethereum Client em C++. O Eth está disponível no repositório do GitHub: https://github.com/ethereum/aleth.\nParity: Esta implementação é feita usando Rust e desenvolvida pela Parity Technologies. Parity pode ser baixada do link: https://www.parity.io/. Note que Parity tornou-se o OpenEthereum.\nOpenEthereum: O cliente OpenEthereum está descontinuado desde \\(2022\\).\nTrinity: Trinity é a implementação do protocolo Ethereum, escrito em Python. Trinity pode ser baixada do link https://github.com/ethereum/trinity. O site oficial é https://trinity.ethereum.org. Descontinuado, github apresenta a mensagem “This repository has been archived by the owner on Jul 1, 2021. It is now read-only.”\n\n\n\n\n\n\n\n\nFigure 4.I- Percentual de Clientes em 21/08/2025. Fonte: ethernodes",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#sec-instalando:geth",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#sec-instalando:geth",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "5.1 Instalando o Geth",
    "text": "5.1 Instalando o Geth\nNesta etapa, você instalará o cliente padrão de camada de execução (geth) e outras ferramentas. Baixe e execute o a última versão 64-bit estável do Geth installer para seu Sistema Operacional do site Geth downloads page. Ou baixe e execute o a última versão 64-bit estável do Geth and Tools para seu Sistema Operacional do site Geth downloads page. Para Linux, baixe o arquivo Geth and Tools ou escolha nas guias a versão do seu Sistema Operacional.\nO geth e as outras ferramentas podem ser instaladas em sistemas derivados do Debian e Ubuntu com o pacote ethereum:\nO geth pode ser instalado em sistemas derivados do Debian e Ubuntu com o pacote ethereum:\n$ sudo apt-get install -y software-properties-common\n$ sudo add-apt-repository -y ppa:ethereum/ethereum\n$ sudo apt-get update\n$ sudo apt-get install -y ethereum\nEm outros Sistemas como os derivados de Arch Linux:\n$ sudo pacaur -Ss ethereum\n$ sudo pacaur -Ss go-ethereum\nextra/go-ethereum 1.14.8-1 [instalado]\n    Official Go implementation of the Ethereum protocol\n$ pacaur -S go-ethereum\natencao: go-ethereum-1.14.8-1 está atualizado -- reinstalando\nresolvendo dependencias...\nprocurando pacotes conflitantes...\n\nPacotes (1) go-ethereum-1.14.8-1\n\nTamanho total instalado:  249,48 MiB\nAlteracao no tamanho:       0,00 MiB\n\n:: Continuar a instalacao? [S/n]\nImagens docker são mantidas no DockerHub para usuários que preferem rodar em um ambiente com container. As seguintes imagens estão disponíveis com todas as ferramentas:\nethereum/client-go:alltools-latest última versão de desenvolvimento.\nethereum/client-go:alltools-stable última versão estável.\nethereum/client-go:alltools-{version} versão estável com número de versão específica.\nethereum/client-go:alltools-release-{version} última versão estável com um família de versões específica.\nInstalação via docker pode ser feita com os comandos:\n$ docker pull ethereum/client-go:alltools-stable\n$ docker run -it -p 30303:30303 ethereum/client-go:alltools-stable\nA imagem irá expor as seguintes portas:\n8545 TCP, usado pela API HTTP baseada em JSON RPC\n8546 TCP, usado pela API WebSocket baseada em JSON RPC\n8547 TCP, usado pela API GraphQL\n30303 TCP e UDP, usado pelo protocolo P2P para rodar a rede.\nNota: se você estiver executando um cliente dentro de um container docker, você deveria montar um volume de dados com um diretório de dados do cliente na pasta /root/.ethereum dentro do container para que ter certeza que os dados baixados serão preservados entre uma reinicialização e outra do container.\nNa minha máquina montaria o diretório /run/media/rogerio/DADOS/ethereum no diretório virtual /root/.ethereum, as sincronizações e comandos executados na imagem docker seriam refletidos na base de dados do diretório externo.\n$ docker run -it -p 30303:30303 -v /run/media/rogerio/DADOS/ethereum:/root/.ethereum  -w /root/.ethereum ethereum/client-go:alltools-latest\nPara atualizar as ferramentas para a última versão, basta parar o container e fazer um pull da última versão:\n$ docker stop ethereum/client-go:alltools-stable\n$ docker pull ethereum/client-go:alltools-latest\n$ docker run -it -p 30303:30303 ethereum/client-go:alltools-latest\nA execução da última versão seria pelo comando:\n$ docker run -it -p 30303:30303 ethereum/client-go:alltools-latest\nInstruções para outros Sistemas Operacionais podem ser encontradas no site oficial da documentação do Ethereum, artigo Installing Geth.\nVerifique se a versão mais nova já não foi instalada. O link Rayingri (v1.14.8) lista as versões.\nNa minha máquina está instalada a versão 1.14.8-stable-a9523b64, você pode verificar a sua com geth --version ou geth version ou evm --version:\n$ evm --version\nevm version 1.14.8-stable-a9523b64\n$ geth --version\ngeth version 1.14.8-stable-a9523b64\n$ geth version\nGeth\nVersion: 1.14.8-stable\nGit Commit: a9523b6428238a762e1a1e55e46ead47630c3a23\nGit Commit Date: 20240812\nArchitecture: amd64\nGo Version: go1.22.6\nOperating System: linux\nGOPATH=\nGOROOT=\n$",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-o-geth",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-o-geth",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "5.2 Executando o Geth",
    "text": "5.2 Executando o Geth\nExecutando o Geth diretamente ele irá sincronizar com a rede principal (mainnet) do Ethereum. Os dados serão sincronizados com o diretório do Ethereum que será criado em:\n\n~/.ethereum no GNU/Linux\n~/Library/Ethereum no OS X\n~/AppData/Roaming/Ethereum no Windows\n\nNestes diretórios:\n\n.ethereum/geth/chaindata/: blockchain da rede principal.\n.ethereum/sepolia/geth/chaindata: blockchain da rede de teste Sepolia.\n.ethereum/keystore: Chaves das contas criadas.\n\n[~]$ geth\nINFO [10-20|21:07:12.911] Starting Geth on Ethereum mainnet... \nINFO [10-20|21:07:12.912] Bumping default cache on mainnet         provided=1024 updated=4096\nINFO [10-20|21:07:12.914] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [10-20|21:07:12.915] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [10-20|21:07:12.920] Set global gas cap                       cap=50,000,000\nINFO [10-20|21:07:12.922] Allocated trie memory caches             clean=614.00MiB dirty=1024.00MiB\nINFO [10-20|21:07:12.923] Allocated cache and file handles         database=/home/rag/.ethereum/geth/chaindata cache=2.00GiB handles=262,144\nINFO [10-20|21:07:12.946] Opened ancient database                  database=/home/rag/.ethereum/geth/chaindata/ancient/chain readonly=false\nINFO [10-20|21:07:12.950]  \nINFO [10-20|21:07:12.950] -----------------------------------------------------------------------------------\nINFO [10-20|21:07:12.950] Chain ID:  1 (mainnet) \nINFO [10-20|21:07:12.950] Consensus: Beacon (proof-of-stake), merged from Ethash (proof-of-work) \nINFO [10-20|21:07:12.950]  \nINFO [10-20|21:07:12.950] Pre-Merge hard forks: \nINFO [10-20|21:07:12.950]  - Homestead:                   1150000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/homestead.md) \nINFO [10-20|21:07:12.950]  - DAO Fork:                    1920000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/dao-fork.md) \nINFO [10-20|21:07:12.950]  - Tangerine Whistle (EIP 150): 2463000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/tangerine-whistle.md) \nINFO [10-20|21:07:12.950]  - Spurious Dragon/1 (EIP 155): 2675000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/spurious-dragon.md) \nINFO [10-20|21:07:12.950]  - Spurious Dragon/2 (EIP 158): 2675000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/spurious-dragon.md) \nINFO [10-20|21:07:12.950]  - Byzantium:                   4370000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/byzantium.md) \nINFO [10-20|21:07:12.950]  - Constantinople:              7280000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/constantinople.md) \nINFO [10-20|21:07:12.950]  - Petersburg:                  7280000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/petersburg.md) \nINFO [10-20|21:07:12.950]  - Istanbul:                    9069000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/istanbul.md) \nINFO [10-20|21:07:12.950]  - Muir Glacier:                9200000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/muir-glacier.md) \nINFO [10-20|21:07:12.950]  - Berlin:                      12244000 (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/berlin.md) \nINFO [10-20|21:07:12.950]  - London:                      12965000 (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/london.md) \nINFO [10-20|21:07:12.950]  - Arrow Glacier:               13773000 (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/arrow-glacier.md) \nINFO [10-20|21:07:12.950]  - Gray Glacier:                15050000 (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/gray-glacier.md) \nINFO [10-20|21:07:12.950]  \nINFO [10-20|21:07:12.950] Merge configured: \nINFO [10-20|21:07:12.950]  - Hard-fork specification:    https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/paris.md \nINFO [10-20|21:07:12.950]  - Network known to be merged: true \nINFO [10-20|21:07:12.950]  - Total terminal difficulty:  58750000000000000000000 \nINFO [10-20|21:07:12.950]  - Merge netsplit block:       &lt;nil&gt; \nINFO [10-20|21:07:12.950] --------------------------------------------------------------------------------------\nINFO [10-20|21:07:12.950]  \nINFO [10-20|21:07:12.952] Disk storage enabled for ethash caches   dir=/home/rag/.ethereum/geth/ethash count=3\nINFO [10-20|21:07:12.952] Disk storage enabled for ethash DAGs     dir=/home/rag/.ethash               count=2\nINFO [10-20|21:07:12.952] Initialising Ethereum protocol           network=1 dbversion=8\nINFO [10-20|21:07:12.963] Loaded most recent local header          number=0 hash=d4e567..cb8fa3 td=17,179,869,184 age=53y6mo3w\nINFO [10-20|21:07:12.963] Loaded most recent local full block      number=0 hash=d4e567..cb8fa3 td=17,179,869,184 age=53y6mo3w\nINFO [10-20|21:07:12.963] Loaded most recent local fast block      number=0 hash=d4e567..cb8fa3 td=17,179,869,184 age=53y6mo3w\nINFO [10-20|21:07:12.964] Loaded local transaction journal         transactions=0 dropped=0\nINFO [10-20|21:07:12.964] Regenerated local transaction journal    transactions=0 accounts=0\nINFO [10-20|21:07:12.965] Chain post-merge, sync via beacon client \nINFO [10-20|21:07:12.965] Gasprice oracle is ignoring threshold set threshold=2\nWARN [10-20|21:07:12.965] Engine API enabled                       protocol=eth\nINFO [10-20|21:07:12.966] Starting peer-to-peer node               instance=Geth/v1.10.25-stable-69568c55/linux-amd64/go1.19.1\nINFO [10-20|21:07:12.991] New local node record                    seq=1,665,519,113,919 id=da440578e33a2ce7 ip=127.0.0.1 udp=30303 tcp=30303\nINFO [10-20|21:07:12.992] Started P2P networking                   self=enode://9ae8fcdad4a7243d1bd2308a159c5800ec170e588862be110152627c9ed3fa67376ef8c75 26d7a56e9bb72da729cf792c7bef86c095471995cc352f9e353acfc@127.0.0.1:30303\nINFO [10-20|21:07:12.993] IPC endpoint opened                      url=/home/rag/.ethereum/geth.ipc\nINFO [10-20|21:07:12.993] Loaded JWT secret file                   path=/home/rag/.ethereum/geth/jwtsecret crc32=0xdeccafe4\nINFO [10-20|21:07:12.994] WebSocket enabled                        url=ws://127.0.0.1:8551\nINFO [10-20|21:07:12.994] HTTP server started                      endpoint=127.0.0.1:8551 auth=true prefix= cors=localhost vhosts=localhost\nINFO [10-20|21:07:16.251] New local node record                    seq=1,665,519,113,920 id=da440578e33a2ce7 ip=187.95.110.26 udp=2770  tcp=30303\nINFO [10-20|21:07:22.992] Looking for peers                        peercount=0 tried=2 static=0\nINFO [10-20|21:07:32.994] Looking for peers                        peercount=0 tried=3 static=0\nINFO [10-20|21:07:43.205] Looking for peers                        peercount=0 tried=9 static=0\nWARN [10-20|21:07:47.967] Post-merge network, but no beacon client seen. Please launch one to follow the chain! \nINFO [10-20|21:07:53.281] Looking for peers                        peercount=0 tried=13 static=0\nINFO [10-20|21:08:03.346] Looking for peers                        peercount=0 tried=9  static=0\nO que vai levar um certo tempo para fazer toda a sincronização da rede completa.\n\nHoje, \\(21/08/2025\\) o tamanho da blockchain está em \\(1380.34 GB\\).",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#redes-de-teste",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#redes-de-teste",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "5.3 Redes de Teste",
    "text": "5.3 Redes de Teste\nVimos as redes Ethereum disponíveis, uma lista completa pode ser encontrada em https://ethereum.org/en/developers/docs/networks/.\nA evolução das Redes de Teste pode ser vista nesse artigo The Evolution of Ethereum Testnets.\n\n\n\nRede\nId\nParâmetro\nDescrição\nRecursos\n\n\n\n\nMainnet\n\\(1\\)\n--mainnet\nRede principal, rede de produção. Quando as pessoas e as bolsas discutem os preços da ETH, estão falando sobre a Mainnet ETH. \n\n\n\ntestnet\n\n--testnet\nHá algumas versões anteriores, para acessar as redes de teste deveríamos utilizar parâmetro --testnet e fornecer o nome da rede, como --testnet rinkeby, por padrão era a rede ropsten. Nas versões mais atuais estão previstos parâmetros específicos para cada uma das redes.\n\n\n\nropsten\n\n--ropsten\nRopsten network: pré-configurada Proof-of-Work test network \n\n\n\nrinkeby\n\n--rinkeby\nRinkeby network: pré-configurada Proof-of-Authority test network\n\n\n\ngoerli\n\\(5\\)\n--goerli\nGörli network: pré-configurada Proof-of-Authority test network. Goerli testnet será descontinuada e substituída pela Holesovice em 2023. Please consider migrating your applications to Sepolia.\nWebsite GitHub Etherscan\n\n\nkiln\n\\(1337802\\)\n--kiln\nKiln network: pré-configurada proof-of-work to proof-of-stake test network\n\n\n\nSepolia\n\\(11155111\\)\n--sepolia\nSepolia network: pré-configurada proof-of-authority test network. Criado em outubro de 2021 pelo desenvolvedores do core do Ethereum e mantida desde então. Depois que a rede Ropsten atingiu uma dificuldade total de terminal (TTD) de 5000000000000000, as redes de teste Sepolia e Goerli fizeram a transição para um mecanismo de consenso proof-of-stake para imitar a rede principal Ethereum.\nWebsite GitHub Otterscan Etherscan\n\n\n\nA Figura 5.I apresenta um resumo no formato de timeline das redes de testes.\n\n\n\n\n\n\nFigure 5.I- Timeline das Redes de Teste Fonte: Etherwold",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-o-geth-com-uma-rede-de-teste",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-o-geth-com-uma-rede-de-teste",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "5.4 Executando o Geth com uma Rede de Teste",
    "text": "5.4 Executando o Geth com uma Rede de Teste\nAo executar o geth com algum das redes de teste será criado um diretório dentro do diretório padrão ~/.ethereum/ para cada rede de teste. Por exemplo, ~/.ethereum/goerli para --goerli e ~/.ethereum/sepolia para o --sepolia.\nIremos executar o cliente com a rede Sepolia que é recomendada como testnet padrão, uma vez que Goerli será descontinuada em \\(2023\\), sendo substituída pela Holesovice. É recomendado migrar sua aplicação para Sepolia.\nA rede Sepolia usa um conjunto validador permissionado. É uma rede nova, o que significa que seu estado e seu histórico são pequenos, o que deixa sua sincronização mais rápida e exige menos armazenamento. Características importantes para usuários que querem rapidamente montar um nó da rede e interagir com a rede diretamente.\n[rogerio@ryzen-nitro execution]$ geth --sepolia --syncmode full --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin\" --keystore ~/.ethereum/sepolia/keystore\nINFO [04-16|21:27:45.640] Starting Geth on Sepolia testnet... \nINFO [04-16|21:27:45.641] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [04-16|21:27:45.643] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [04-16|21:27:45.646] Set global gas cap                       cap=50,000,000\nINFO [04-16|21:27:45.649] Allocated trie memory caches             clean=154.00MiB dirty=256.00MiB\nINFO [04-16|21:27:45.649] Using leveldb as the backing database \nINFO [04-16|21:27:45.649] Allocated cache and file handles         database=/home/rogerio/.ethereum/sepolia/geth/chaindata cache=512.00MiB handles=262,144\nINFO [04-16|21:27:45.660] Using LevelDB as the backing database \nINFO [04-16|21:27:45.663] Opened ancient database                  database=/home/rogerio/.ethereum/sepolia/geth/chaindata/ancient/chain readonly=false\nINFO [04-16|21:27:45.664] Disk storage enabled for ethash caches   dir=/home/rogerio/.ethereum/sepolia/geth/ethash count=3\nINFO [04-16|21:27:45.664] Disk storage enabled for ethash DAGs     dir=/home/rogerio/.ethash count=2\nINFO [04-16|21:27:45.664] Initialising Ethereum protocol           network=11,155,111 dbversion=8\nINFO [04-16|21:27:45.667]  \nINFO [04-16|21:27:45.667] ------------------------------------------------------------------------------------ \nINFO [04-16|21:27:45.667] Chain ID:  11155111 (sepolia) \nINFO [04-16|21:27:45.667] Consensus: Beacon (proof-of-stake), merged from Ethash (proof-of-work) \nINFO [04-16|21:27:45.667]  \nINFO [04-16|21:27:45.667] Pre-Merge hard forks (block based): \nINFO [04-16|21:27:45.667]  - Homestead:                   #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/homestead.md) \nINFO [04-16|21:27:45.667]  - Tangerine Whistle (EIP 150): #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/tangerine-whistle.md) \nINFO [04-16|21:27:45.667]  - Spurious Dragon/1 (EIP 155): #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/spurious-dragon.md) \nINFO [04-16|21:27:45.667]  - Spurious Dragon/2 (EIP 158): #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/spurious-dragon.md) \nINFO [04-16|21:27:45.667]  - Byzantium:                   #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/byzantium.md) \nINFO [04-16|21:27:45.667]  - Constantinople:              #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/constantinople.md) \nINFO [04-16|21:27:45.667]  - Petersburg:                  #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/petersburg.md) \nINFO [04-16|21:27:45.667]  - Istanbul:                    #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/istanbul.md) \nINFO [04-16|21:27:45.667]  - Muir Glacier:                #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/muir-glacier.md) \nINFO [04-16|21:27:45.667]  - Berlin:                      #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/berlin.md) \nINFO [04-16|21:27:45.667]  - London:                      #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/london.md) \nINFO [04-16|21:27:45.667]  \nINFO [04-16|21:27:45.667] Merge configured: \nINFO [04-16|21:27:45.667]  - Hard-fork specification:    https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/paris.md \nINFO [04-16|21:27:45.667]  - Network known to be merged: true \nINFO [04-16|21:27:45.667]  - Total terminal difficulty:  17000000000000000 \nINFO [04-16|21:27:45.667]  - Merge netsplit block:       #1735371  \nINFO [04-16|21:27:45.667]  \nINFO [04-16|21:27:45.667] Post-Merge hard forks (timestamp based): \nINFO [04-16|21:27:45.667]  - Shanghai:                    @1677557088 (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/shanghai.md) \nINFO [04-16|21:27:45.667]  \nINFO [04-16|21:27:45.667] ------------------------------------------------------------------------------------\nINFO [04-16|21:27:45.667]  \nINFO [04-16|21:27:45.668] Loaded most recent local block           number=0 hash=25a5cc..3e6dd9 td=131,072 age=1y6mo2w\nINFO [04-16|21:27:45.668] Loaded local transaction journal         transactions=0 dropped=0\nINFO [04-16|21:27:45.668] Regenerated local transaction journal    transactions=0 accounts=0\nINFO [04-16|21:27:45.668] Chain post-merge, sync via beacon client \nINFO [04-16|21:27:45.669] Gasprice oracle is ignoring threshold set threshold=2\nWARN [04-16|21:27:45.669] Engine API enabled                       protocol=eth\nINFO [04-16|21:27:45.670] Starting peer-to-peer node               instance=Geth/v1.11.5-stable-a38f4108/linux-amd64/go1.20.2\nINFO [04-16|21:27:45.681] New local node record                    seq=1,681,600,532,512 id=05b2a1f369961544 ip=127.0.0.1 udp=30303 tcp=30303\nINFO [04-16|21:27:45.682] Started P2P networking                   self=enode://69520d55cffdc600a5a46f15c8255ad6831dbe9cb11f73b6aef0847a5e048b99043950dae de9c4a374a37c7b93e57dc1b1d936f9946e1a98cde26b3e1e53f58c@127.0.0.1:30303\nINFO [04-16|21:27:45.682] IPC endpoint opened                      url=/home/rogerio/.ethereum/sepolia/geth.ipc\nINFO [04-16|21:27:45.683] Loaded JWT secret file                   path=/home/rogerio/.ethereum/sepolia/geth/jwtsecret crc32=0xa99ff4fd\nINFO [04-16|21:27:45.683] HTTP server started                      endpoint=127.0.0.1:8559 auth=false prefix= cors= vhosts=localhost\nINFO [04-16|21:27:45.686] WebSocket enabled                        url=ws://127.0.0.1:8551\nINFO [04-16|21:27:45.686] HTTP server started                      endpoint=127.0.0.1:8551 auth=true  prefix= cors=localhost vhosts=localhost\nWARN [04-16|21:27:55.489] System clock seems off by -25.06956443s, which can prevent network connectivity \nWARN [04-16|21:27:55.490] Please enable network time synchronisation in system settings. \nWARN [04-16|21:28:20.672] Post-merge network, but no beacon client seen. Please launch one to follow the chain! \nNote que está sendo gerada uma mensagem de aviso:\nWARN [04-16|21:28:20.672] Post-merge network, but no beacon client seen. Please launch one to follow the chain!\nPesquisando na Internet por “Post-merge network, but no beacon client seen. Please launch one to follow the chain!”, encontramos essa solução: Github:go-ethereum, issue-25791.\nA documentação do Ethereum sobre Consensus Clients, mostra que geth deve ser iniciado, com conexão RPC autenticada usando um arquivo jwtsecret. Por padrão esse arquivo está em ~/.ethereum/geth/jwtsecret. Para as redes de teste o caminho terá o diretório da respectiva rede, como por exemplo ~/.ethereum/sepolia/geth/jwtsecret para a rede Sepolia.\n[rogerio@ryzen-nitro execution]$ geth --sepolia --syncmode full --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin\" --keystore ~/.ethereum/sepolia/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.ethereum/sepolia/geth/jwtsecret\nINFO [04-16|21:27:45.640] Starting Geth on Sepolia testnet... \n\nNote que estou executando na rede de testes --sepolia, opção na minha versão do geth é diferente do livro. No livro ele diz para usar o parâmetro --testnet que por padrão usa a rede de testes Ropsten, indicando --testnet sepolia. Na minha instalação não suporta mais o parâmetro --testnet, tem o --mainnet e cada rede de teste disponível tem o seu parâmetro correspondente, como --sepolia.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#criando-contas-na-rede",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#criando-contas-na-rede",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "5.5 Criando Contas na Rede",
    "text": "5.5 Criando Contas na Rede\nO comando geth account new cria uma nova conta na rede principal. Indicaremos que a conta é para ser criada na rede de teste --sepolia.\n[rogerio@ryzen-nitro execution]$ geth --sepolia account new\nINFO [04-16|21:50:49.343] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [04-16|21:50:49.344] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nYour new account is locked with a password. Please give a password. Do not forget this password.\nPassword: \nRepeat password: \n\nYour new key was generated\n\nPublic address of the key:   0xa9e98368B44b371ceC7d205F9fE2b074b6134C95\nPath of the secret key file: /home/rogerio/.ethereum/sepolia/keystore/UTC--2023-04-17T00-51-24.036052785Z--a9e9836 8b44b371cec7d205f9fe2b074b6134c95\n\n- You can share your public address with anyone. Others need it to interact with you.\n- You must NEVER share the secret key with anyone! The key controls access to your funds!\n- You must BACKUP your key file! Without the key, it's impossible to access account funds!\n- You must REMEMBER your password! Without the password, it's impossible to decrypt the key!\nA conta com a chave pública 0xa9e98368B44b371ceC7d205F9fE2b074b6134C95 foi criada. Iremos criar uma segunda conta.\n[rogerio@ryzen-nitro execution]$ geth --sepolia account new\nINFO [04-16|21:52:58.948] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [04-16|21:52:58.948] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nYour new account is locked with a password. Please give a password. Do not forget this password.\nPassword: \nRepeat password: \n\nYour new key was generated\n\nPublic address of the key:   0xc061b852A26BEdeC5Bd457b88c031c46a622f4ab\nPath of the secret key file: /home/rogerio/.ethereum/sepolia/keystore/UTC--2023-04-17T00-53-06.379873395Z--c061b85 2a26bedec5bd457b88c031c46a622f4ab\n\n- You can share your public address with anyone. Others need it to interact with you.\n- You must NEVER share the secret key with anyone! The key controls access to your funds!\n- You must BACKUP your key file! Without the key, it's impossible to access account funds!\n- You must REMEMBER your password! Without the password, it's impossible to decrypt the key!\n\n[rogerio@ryzen-nitro execution]$ \nÉ para termos as duas contas 0xa9e98368B44b371ceC7d205F9fE2b074b6134C95 e 0xc061b852A26BEdeC5Bd457b88c031c46a622f4ab criadas com seus arquivos em .ethereum/sepolia/keystore/, com o prefixo UTC--2023-04-17T00-53-06.379873395Z--*.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#listando-as-contas",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#listando-as-contas",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "5.6 Listando as Contas",
    "text": "5.6 Listando as Contas\nAs contas existentes ou que foram criadas podem ser listadas com o comando geth account list. Utilizaremos novamente o parâmetro que indica a rede de teste --sepolia.\n[rogerio@ryzen-nitro execution]$ geth --sepolia account list\nINFO [04-16|21:56:11.129] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [04-16|21:56:11.130] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [04-16|21:56:11.130] Set global gas cap                       cap=50,000,000\nAccount #0: {a9e98368b44b371cec7d205f9fe2b074b6134c95} keystore:///home/rogerio/.ethereum/sepolia/keystore/UTC--2023-04-17T00-51-24.03605278 5Z--a9e98368b44b371cec7d205f9fe2b074b6134c95\nAccount #1: {c061b852a26bedec5bd457b88c031c46a622f4ab} keystore:///home/rogerio/.ethereum/sepolia/keystore/UTC--2023-04-17T00-53-06.37987339 5Z--c061b85 2a26bedec5bd457b88c031c46a622f4ab\n[rogerio@ryzen-nitro execution]$\nA documentação do geth, bem como comandos e parâmetros podem ser acessados em https://geth.ethereum.org/docs.\nExecutando com opção de responder a comandos via RPC. A documentação desta parte está disponível em https://geth.ethereum.org/docs/rpc/server.\n[rogerio@ryzen-nitro execution]$ geth --sepolia --syncmode full --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin\" --keystore ~/.ethereum/sepolia/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.ethereum/sepolia/geth/jwtsecret --nodiscover --maxpeers 15",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#clientes-de-consenso",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#clientes-de-consenso",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "5.7 Clientes de Consenso",
    "text": "5.7 Clientes de Consenso\nPara terminar a configuração é necessário instalar algum cliente de consenso. Existem atualmente cinco clientes de consenso que podem ser executado em conjunto com o Geth:\n\nLighthouse: escrito em Rust.\nNimbus: escrito em Nim.\nPrysm: escrito em Go.\nTeku: escrito em Java.\nLodestar: escrito em Typescript.\n\nPor ser escrito na linguagem Go, assim como geth, testaremos o Prysm. O Prysm é uma implementação da especificação do consenso proof-of-stake do Ethereum.\nA configuração do Prism pode ser feita conforme descrito no material https://docs.prylabs.network/docs/install/install-with-script.\nO material ensina a usar o Prysm para executar um nó Ethereum, portanto resolver o problema apresentado após a atualização do Merge e opcionalmente como um validador (validator).",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#instalando-o-cliente-de-consenso-prysmlinkprysm",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#instalando-o-cliente-de-consenso-prysmlinkprysm",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "5.8 Instalando o cliente de consenso Prysm1",
    "text": "5.8 Instalando o cliente de consenso Prysm1\nPara a instalação do Prysm, crie no diretório ~/.ethereum/&lt;rede&gt;, duas subpastas: consensus e execution. Acesse o diretório consensus e execute o comando para baixar o cliente Prysm e transformá-lo em executável:\n$ mkdir prysm && cd prysm\n$ curl https://raw.githubusercontent.com/prysmaticlabs/prysm/master/prysm.sh --output prysm.sh && chmod +x prysm.sh",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#gerando-um-arquivo-jwt-secret",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#gerando-um-arquivo-jwt-secret",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "5.9 Gerando um arquivo JWT Secret",
    "text": "5.9 Gerando um arquivo JWT Secret\n\nA conexão HTTP entre seu nó beacon e seu nó de execução precisa ser autenticada usando um token JWT. Existem diversas formas de gerar este token:\n\nUsando um gerado on line como este. Copie e cole o valor gerado dentro do arquivo jwt.hex.\nUsando OpenSSL para criar o token via comando: openssl rand -hex 32 | tr -d \"\\n\" &gt; \"jwt.hex\".\nUsar o que foi gerado pelo cliente de execução geth: ~/.ethereum/sepolia/geth/jwtsecret.\nUsar o próprio Prysm para gerar o jwt.hex:\n\n\n#\\# Optional. This command is necessary only if you've previously configured USE\\_PRYSM\\_VERSION\nUSE_PRYSM_VERSION=v4.0.0\n\n#\\# Required.\n./prysm.sh beacon-chain generate-auth-secret\nNesta opção o Prysm irá mostrar o caminho onde o arquivo jwt.hex foi gerado.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-um-cliente-de-execuçãolinkprysmexec",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-um-cliente-de-execuçãolinkprysmexec",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "5.10 Executando um Cliente de Execução2",
    "text": "5.10 Executando um Cliente de Execução2\nNesta etapa, executaremos o cliente de camada de execução (geth), se ainda não instalou veja os passos de instalação na Seção 5.1 e o nó beacon do Prysm que se conectará ao cliente em execução.\nNote que iremos adicionar o parâmetro ao comando de execução com o arquivo com o token --authrpc.jwtsecret ~/.ethereum/sepolia/geth/jwtsecret.\n\nO comando de execução do `Geth` atualizado:\n\n```bash\n[rogerio@ryzen-nitro execution]$ geth --sepolia --syncmode full --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin\" --keystore ~/.ethereum/sepolia/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.ethereum/sepolia/geth/jwtsecret --nodiscover --maxpeers 15\nVeja as Opções de linha de comando do Geth para a definição de parâmetros.\nDependendo das opções a Sincronização pode levar um longo tempo, de horas até dias. Enquanto sincroniza, pode ir fazendo o próximo passo.\n[alertblock]{Parabéns}\nVocê está agora executando um nó de execução na camada de execução da Ethereum.\n[/alertblock]",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-um-nó-beacon-usando-prysmlinknobeacon",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-um-nó-beacon-usando-prysmlinknobeacon",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "5.11 Executando um nó beacon usando Prysm3",
    "text": "5.11 Executando um nó beacon usando Prysm3\nAltere o comando para iniciar um nó beacon que conecta no seu nó de execução local, necessário colocar o hash de uma das contas criadas. Por padrão, aqui estou utilizando a primeira conta criada, meu caso a 0xa9e98368b44b371cec7d205f9fe2b074b6134c95.\n./prysm.sh beacon-chain --execution-endpoint=http://localhost:8551 --jwt-secret=~/.ethereum/geth/jwtsecret --suggested-fee-recipient=&lt;&lt;hash da conta principal&gt;&gt;\nAlterei o comando padrão para o conter o hash de uma das minhas contas e para o tipo de rede de teste --sepolia. A rede Sepolia precisa de um estado inicial (genesis state) de onde começar a sincronização. O arquivo pode ser baixado de https://github.com/eth-clients/merge-testnets/blob/main/sepolia/genesis.ssz e deve ser colocado no diretório sepolia/consensus/prysm.\n[rogerio@ryzen-nitro prysm]$ wget https://github.com/eth-clients/merge-testnets/raw/main/sepolia/genesis.ssz -O genesis.ssz\nEntão o comando pode ser utilizado para iniciar um nó beacon que conecta seu nó de execução local.\n[rogerio@ryzen-nitro prysm]$ ./prysm.sh beacon-chain --execution-endpoint=http://localhost:8551 --sepolia --jwt-secret=~/.ethereum/sepolia/geth/jwtsecret --genesis-state=genesis.ssz --suggested-fee-recipient=0xa9e98368b44b371cec7d205f9fe2b074b6134c95\n[rogerio@ryzen-nitro prysm]$ ./prysm.sh beacon-chain --execution-endpoint=http://localhost:8551 --sepolia --jwt-secret=~/.ethereum/sepolia/geth/jwtsecret --genesis-state=genesis.ssz --suggested-fee-recipient=0xa9e98368b44b371cec7d205f9fe2b074b6134c95 --checkpoint-sync-url=https://sepolia.beaconstate.info --genesis-beacon-api-url=https://sepolia.beaconstate.info\nNo terminal onde o cliente de execução apareceu um novo warning: \"WARN [04-19|13:07:28.462] Served miner_start reqid=14 duration=\"233.485us\" err=\"etherbase missing: etherbase must be explicitly specified\".",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-o-console-javascript",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-o-console-javascript",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "5.12 Executando o Console JavaScript",
    "text": "5.12 Executando o Console JavaScript\nO console javascript pode também ser conectado ao nó Geth usando IPC. Quando o Geth é iniciado, um arquivo geth.ipc é criado automaticamente e salvo no diretório de dados. Este arquivo ou um caminho customizado para um arquivo IPC pode ser passado para o Geth usando o parâmetro attach:\n[rogerio@ryzen-nitro ~]$ geth attach /home/rogerio/.ethereum/sepolia/geth.ipc \nWelcome to the Geth JavaScript console!\n\ninstance: Geth/v1.11.5-stable-a38f4108/linux-amd64/go1.20.2\nat block: 0 (Sun Oct 03 2021 10:24:41 GMT-0300 (-03))\n datadir: /home/rogerio/.ethereum/sepolia\n modules: admin:1.0 debug:1.0 engine:1.0 eth:1.0 ethash:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt;",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#verificação-do-funcionamento-da-rede",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#verificação-do-funcionamento-da-rede",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "5.13 Verificação do Funcionamento da Rede",
    "text": "5.13 Verificação do Funcionamento da Rede\nPara verificar o funcionamento da rede, utilize o comando net.listing:\n[rogerio@ryzen-nitro ~]$ geth attach /home/rogerio/.ethereum/sepolia/geth.ipc \nWelcome to the Geth JavaScript console!\n\ninstance: Geth/v1.11.5-stable-a38f4108/linux-amd64/go1.20.2\nat block: 0 (Sun Oct 03 2021 10:24:41 GMT-0300 (-03))\n datadir: /home/rogerio/.ethereum/sepolia\n modules: admin:1.0 debug:1.0 engine:1.0 eth:1.0 ethash:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt; net.listening\ntrue\n&gt; \nA mesma verificação pode ser feita via API JSON RPC no terminal do sistema:\n\n[rogerio@ryzen-nitro ~]$ curl -X POST --insecure --header \"Content-Type: application/json\" --data '{\"jsonrpc\":\"2.0\", \"method\":\"net_listening\",\"params\":[], \"id\":64}' --location http://localhost:8559\n{\"jsonrpc\":\"2.0\",\"id\":64,\"result\":true}",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#listando-as-contas-pelo-console",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#listando-as-contas-pelo-console",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "5.14 Listando as Contas pelo Console",
    "text": "5.14 Listando as Contas pelo Console\n\nA lista de contas pode ser recuperada através dos comandos no console eth.accounts e por RPC {\"method\": \"eth_accounts\", \"params\": []}. Em versões anteriores do geth era possível utilizar personal.listAccounts, mas personal foi depreciado.\n[rogerio@ryzen-nitro ~]$ geth attach /home/rogerio/.ethereum/sepolia/geth.ipc \nWelcome to the Geth JavaScript console!\n\ninstance: Geth/v1.11.5-stable-a38f4108/linux-amd64/go1.20.2\nat block: 0 (Sun Oct 03 2021 10:24:41 GMT-0300 (-03))\n datadir: /home/rogerio/.ethereum/sepolia\n modules: admin:1.0 debug:1.0 engine:1.0 eth:1.0 ethash:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt; net.listening\ntrue\n&gt; personal.listAccounts\nReferenceError: personal is not defined\n        at &lt;eval&gt;:1:1(0)\n\n&gt; eth.accounts\n[\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\"]\nO mesmo resultado pode ser obtido via comando curl no terminal para listar as contas usando RPC:\n[rogerio@ryzen-nitro execution]$ curl -X POST --insecure --header \"Content-Type: application/json\" --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_accounts\",\"params\":[], \"id\":64}' --location http://localhost:8559\n{\"jsonrpc\":\"2.0\",\"id\":64,\"result\":[\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\"]}\nOutros comandos podem ser executados da mesma maneira via Console JavaScript ou invocação RPC através do curl. Uma lista completa de comandos da API RPCestão disponíveis em JSON-RPC API.\nComo por exemplo, recuperar a versão do cliente geth:\n[rogerio@ryzen-nitro execution]$ curl -X POST --insecure  --header \"Content-Type: application/json\" --data '{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\":[],\"id\":67}' --location http://localhost:8559\n{\"jsonrpc\":\"2.0\",\"id\":67,\"result\":\"Geth/v1.11.5-stable-a38f4108/linux-amd64/go1.20.2\"}\nOu a versão da Rede:\n[rogerio@ryzen-nitro execution]$ curl -X POST --header \"Content-Type: application/json\"  --data '{\"jsonrpc\":\"2.0\",\"method\":\"net_version\",\"params\":[],\"id\":67}' --location http://localhost:8559\n{\"jsonrpc\":\"2.0\",\"id\":67,\"result\":\"11155111\"}\nO valor \\(11155111\\) em result indica que estamos executando sobre a rede Sepolia. Uma lista completa com os IDs das redes está disponível em https://chainlist.org. Os mais comuns são \\(1\\): Ethereum Mainnet, \\(2\\): Morden testnet (depreciado), \\(3\\): Ropsten testnet, \\(4\\): Rinkeby testnet, \\(5\\): Goerli testnet (será depreciada em 2023).\n\n\n\nLista de IDs Fonte: chainlist",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#teste-de-transferência-de-valores-entre-carteiras",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#teste-de-transferência-de-valores-entre-carteiras",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "5.15 Teste de Transferência de Valores entre Carteiras",
    "text": "5.15 Teste de Transferência de Valores entre Carteiras\nPodemos testar uma transferência de valores. As duas formas de se conseguir valores é minerando ou solicitando valores para Faucets da rede, como por exemplo o https://faucet.sepolia.dev/.\nOs valores de cada conta/carteira pode ser verificado com o comando eth.getBalance(hash), passando como parâmetro a cadeia hash de identificação da conta ou indicando na lista de contas eth.getBalance(eth.accounts[0]).\n[rogerio@ryzen-nitro ~]$ geth attach /home/rogerio/.ethereum/sepolia/geth.ipc \nWelcome to the Geth JavaScript console!\n\ninstance: Geth/v1.11.5-stable-a38f4108/linux-amd64/go1.20.2\nat block: 0 (Sun Oct 03 2021 10:24:41 GMT-0300 (-03))\n datadir: /home/rogerio/.ethereum/sepolia\n modules: admin:1.0 debug:1.0 engine:1.0 eth:1.0 ethash:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt; net.listening\n\ntrue\n&gt; eth.accounts\n[\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\"]\n&gt; eth.getBalance(\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\")\n0\n&gt; eth.getBalance(\"0xc061b852a26bedec5bd457b88c031c46a622f4ab\")\n0\n&gt; eth.getBalance(\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\")\n0\nComo os saldos estão zerados, vamos iniciar a mineração com o comando miner.start().\n&gt; miner.start()\nError: etherbase missing: etherbase must be explicitly specified\n       at web3.js:6365:9(39)\n       at send (web3.js:5099:62(29))\n       at &lt;eval&gt;:1:12(2)\n\n&gt; web3.fromWei(eth.getBalance(\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\"), \"ether\")\n0\n&gt; web3.fromWei(eth.getBalance(\"0xc061b852a26bedec5bd457b88c031c46a622f4ab\"), \"ether\")\n0\n&gt; web3.fromWei(eth.getBalance(eth.coinbase), \"ether\")\nError: etherbase must be explicitly specified\n       at web3.js:6365:9(39)\n       at get (web3.js:6265:66(14))\n       at &lt;eval&gt;:1:33(5)\n\n&gt; eth.coinbase\nError: etherbase must be explicitly specified\n       at web3.js:6365:9(39)\n       at get (web3.js:6265:66(14))\n       at &lt;eval&gt;:1:5(1)\n\n&gt; eth.coinbase.panic: Error: etherbase must be explicitly specified at web3.js:6365:9(39)\n\ngoroutine 82 [running]:\ngithub.com/dop251/goja.(*baseJsFuncObject)._call(...)\n       github.com/dop251/goja@v0.0.0-20230122112309-96b1610dd4f7/func.go:396\nO erro “Error: etherbase must be explicitly specified” ocorre pois é necessário fornecer o hash da carteira também para a execução do cliente geth.\n[rogerio@ryzen-nitro execution]$ geth --sepolia --syncmode full --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin\" --keystore ~/.ethereum/sepolia/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.ethereum/sepolia/geth/jwtsecret --nodiscover --maxpeers 15 --miner.etherbase=0xa9e98368b44b371cec7d205f9fe2b074b6134c95\nFornecendo a carteira como --miner.etherbase=0xa9e98368b44b371cec7d205f9fe2b074b6134c95, agora podemos iniciar a mineração.\n&gt; miner.start()\nnull\n&gt; miner.stop()\nnull\n&gt; eth.getBalance(\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\")\n5.004e+21\n&gt; eth.getBalance(\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\")\n5.004e+21\n&gt; eth.accounts\n[\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\"]\n&gt; eth.getBalance(\"0xc061b852a26bedec5bd457b88c031c46a622f4ab\")\n0\n&gt; web3.fromWei(eth.getBalance(\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\"), \"ether\")\n5004\n&gt; eth.getBalance(eth.accounts[0])\n5.004e+21\nPara enviar \\(100\\) ethers da primeira para a segunda carteira:\n&gt; eth.sendTransaction({from: \"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", to: \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\", value: 100})\nError: authentication needed: password or unlock\n        at web3.js:6365:9(39)\n        at send (web3.js:5099:62(29))\n        at &lt;eval&gt;:1:20(9)\n\n&gt; eth.sendTransaction({from: \"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", to: \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\", value:web3.toWei(100, \"ether\")})\nError: authentication needed: password or unlock\n        at web3.js:6365:9(39)\n        at send (web3.js:5099:62(29))\n        at &lt;eval&gt;:1:20(13)\n\n&gt; personal.unlockAccount(eth.accounts[0])\nReferenceError: personal is not defined\n        at &lt;eval&gt;:1:1(0)\nO erro “Error: authentication needed: password or unlock” ocorre por que precisamos autorizar a transação. Em versões anteriores era possível desbloquear as contas via console javascript, conforme tentamos no Código acima personal.unlockAccount(eth.accounts[0]). Verificando a documentação o personal foi depreciado e não pode ser mais utilizado.\nNa versão corrente é preciso utilizar o clef para fazer a autenticação em um terminal separado. O clef é um autenticador das operações, a Figura \\(\\ref{fig:clef:fluxo}\\) apresenta o fluxo de autenticação de uma transição solicitada pelo usuário.\n\n\n\nFluxo de Autenticação com clef \n\n\nEntão em um outro terminal inicie a instância do clef com o comando:\n[rogerio@ryzen-nitro sepolia]$ clef --chainid 11155111 --keystore ~/.ethereum/sepolia/keystore --configdir ~/.ethereum/sepolia/clef --http\n\nWARNING!\n\nClef is an account management tool. It may, like any software, contain bugs.\n\nPlease take care to\n- backup your keystore files,\n- verify that the keystore(s) can be opened with your password.\n\nClef is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\nwithout even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\nPURPOSE. See the GNU General Public License for more details.\n\nEnter 'ok' to proceed:\n&gt; ok\n\nINFO [04-19|14:00:58.719] Using CLI as UI-channel \nINFO [04-19|14:00:59.171] Loaded 4byte database                    embeds=268,621 locals=0 local=./4byte-custom.json\nWARN [04-19|14:00:59.171] Failed to open master, rules disabled    err=\"failed stat on /home/rogerio/.ethereum/sepolia/clef/masterseed.json: stat /home/rogerio/.ethereum/sepolia/clef/masterseed.json: no such file or directory\"\nINFO [04-19|14:00:59.172] Starting signer                          chainid=1,115,511 keystore=/home/rogerio/.ethereum/sepolia/keystore light-kdf=false advanced=false\nINFO [04-19|14:00:59.184] Smartcard socket file missing, disabling err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [04-19|14:00:59.184] Audit logs configured                    file=audit.log\nINFO [04-19|14:00:59.186] HTTP endpoint opened                     url=http://127.0.0.1:8550/\nINFO [04-19|14:00:59.186] IPC endpoint opened                      url=/home/rogerio/.ethereum/sepolia/clef/clef.ipc\n\n------- Signer info -------\n* extapi_ipc : /home/rogerio/.ethereum/sepolia/clef/clef.ipc\n* intapi_version : 7.0.1\n* extapi_version : 6.1.0\n* extapi_http : http://127.0.0.1:8550/\n\n------- Available accounts -------\n0. 0xa9e98368B44b371ceC7d205F9fE2b074b6134C95 at keystore:///home/rogerio/.ethereum/sepolia/keystore/UTC--2023-04-17T00-51-24.03605278 5Z--a9e98368b44b371cec7d205f9fe2b074b6134c95\n1. 0xc061b852A26BEdeC5Bd457b88c031c46a622f4ab at keystore:///home/rogerio/.ethereum/sepolia/keystore/UTC--2023-04-17T00-53-06.37987339 5Z--c061b85 2a26bedec5bd457b88c031c46a622f4ab\nO clef iniciará e listará as contas disponíveis que irá controlar.\nO arquivo para a comunicação IPC socket/pipe será criado dentro do datadir .ethereum/sepolia/ clef/clef.ipc, se preferir o caminho onde o arquivo será criado pode ser fornecido como parâmetro --ipcpath valor.\nVolte ao terminal onde iniciou o geth e indique que as autentificações serão via clef com o parâmetro --signer=/home/rogerio/.ethereum/sepolia/clef/clef.ipc passando o caminho dado pelo clef.\n[rogerio@ryzen-nitro execution]$ geth --sepolia --syncmode full --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin\" --keystore ~/.ethereum/sepolia/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.ethereum/sepolia/geth/jwtsecret --nodiscover --maxpeers 15 --miner.etherbase=0xa9e98368b44b371cec7d205f9fe2b074b6134c95 --signer=/home/rogerio/.ethereum/sepolia/clef/clef.ipc\nRetorne ao console javascript, e execute novamente as transações, cada uma deverá ser autorizada no console do clef.\n&gt; eth.sendTransaction({from: \"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", to: \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\", value: 100})\nNo console do clef é possível autorizar e ver a transação assinada com hash: 0xb579cc595601e4aca546ce4e46bdcded7841bd7f50a0a78c505e839dd039b8b9 que é o mesmo id devolvido no console javascript.\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n--------- Transaction request-------------\nto:    0xc061b852A26BEdeC5Bd457b88c031c46a622f4ab\nfrom:               0xa9e98368B44b371ceC7d205F9fE2b074b6134C95 [chksum ok]\nvalue:              100 wei\ngas:                0x5208 (21000)\nmaxFeePerGas:          1000000014 wei\nmaxPriorityFeePerGas:  1000000000 wei\nnonce:    0x0 (0)\nchainid:  0xaa36a7\nAccesslist\n\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\n-------------------------------------------\nApprove? [y/N]:\n&gt; y\n#\\# Account password\n\nPlease enter the password for account 0xa9e98368B44b371ceC7d205F9fE2b074b6134C95\n&gt; \n-----------------------\nTransaction signed:\n {\n    \"type\": \"0x2\",\n    \"nonce\": \"0x0\",\n    \"gasPrice\": null,\n    \"maxPriorityFeePerGas\": \"0x3b9aca00\",\n    \"maxFeePerGas\": \"0x3b9aca0e\",\n    \"gas\": \"0x5208\",\n    \"value\": \"0x64\",\n    \"input\": \"0x\",\n    \"v\": \"0x0\",\n    \"r\": \"0xcfaf8674159cf0618393d32bc4e421969acf3bc1c7dfc5bc13224025cc5a6e5e\",\n    \"s\": \"0x44cbc80e7123b73846caf72eb13312b8ac8a2dc323173a4b58491b1112c2298c\",\n    \"to\": \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\",\n    \"chainId\": \"0xaa36a7\",\n    \"accessList\": [],\n    \"hash\": \"0x298bb20795a584c9bd038d47323f592e072b66eace172833d27acaad8278281a\"\n  }\nCom a autorização feita no console do clef será mostrado as informações da transação assinada, como o hash: 0x298bb20795a584c9bd038d47323f592e072b66eace172833d27acaad8278281a. Observe que no console javascript aparece o mesmo hash da transação para a transação que solicitamos:\n&gt; eth.sendTransaction({from: \"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", to: \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\", value: 100})\n\"0x298bb20795a584c9bd038d47323f592e072b66eace172833d27acaad8278281a\"\n&gt; \nSe buscarmos pelo recibo da transação ou verificarmos se o saldo da conta 1 foi alterado, veremos que a transação no foi efetivada ainda, pois a consulta devolve null e o saldo da conta ainda é zero.\n&gt; eth.sendTransaction({from: \"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", to: \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\", value: 100})\n\"0x298bb20795a584c9bd038d47323f592e072b66eace172833d27acaad8278281a\"\n&gt; eth.getTransactionReceipt(\"0x298bb20795a584c9bd038d47323f592e072b66eace172833d27acaad 8278281a\")\nnull\n&gt; eth.getBalance(eth.accounts[1])\n0\n&gt; eth.getBalance(eth.accounts[0])\n5.004e+21\nÉ preciso minerar para a transação ser efetivada:\n\n&gt; miner.start()\nnull\n&gt; eth.getBalance(eth.accounts[1])\n100\n&gt; miner.stop()\nnull\n&gt; eth.getBalance(eth.accounts[0])\n5.0859999999999998529e+21\n&gt; eth.getBalance(eth.accounts[1])\n100\n&gt; \nAgora sim, é possível recuper o recibo da transação. Desde do fork para a versão Byzantium, a Ethereum fornece uma forma de se verficar se a transação deu certo ou falhou, o campo status no recibo indica a situação (0 - falhou e 1 - foi executada com sucesso).\n&gt; eth.getTransactionReceipt(\"0x298bb20795a584c9bd038d47323f592e072b66eace172833d27acaad 8278281a\")\n{\n  blockHash: \"0x1e3ae615a7d676cc51983ea066e2cda3a5d7702d27255065b330591cc3b9062f\",\n  blockNumber: 2503,\n  contractAddress: null,\n  cumulativeGasUsed: 21000,\n  effectiveGasPrice: 1000000007,\n  from: \"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\",\n  gasUsed: 21000,\n  logs: [],\n  logsBloom: \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n  status: \"0x1\",\n  to: \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\",\n  transactionHash: \"0x298bb20795a584c9bd038d47323f592e072b66eace172833d27acaad8278281a\",\n  transactionIndex: 0,\n  type: \"0x2\"\n}\nAo enviar outra quantidade para a segunda conta é preciso autorizar a transação no console do clef e minerar novamente para ela ser efetivada.\n\n&gt; eth.sendTransaction({from: \"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", to: \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\", value: 1000})\n\"0x667f9570b629fdd437b112e4b5f388cbbe68efb43e0bdbb75bf9db473cbd00fc\"\n&gt; eth.getBalance(eth.accounts[1])\n\n100\n&gt; miner.start()\nnull\n&gt; eth.getBalance(eth.accounts[1])\n1100\n&gt; miner.stop()\nnull\n&gt; eth.getBalance(eth.accounts[1])\n1100\n&gt; eth.getBalance(eth.accounts[0])\n5.1779999999999997049e+21\n&gt; \nNo terminal de execução do geth aparece que a transação foi submetida e após a mineração os saldos das contas foram atualizados.\nINFO [04-19|15:10:01.663] Submitted transaction                    hash=0x667f9570b629fdd437b112e4b5f388cbbe68efb43e0bdbb75bf9db473cbd00fc from=0xa9e98368B44b371ceC7d205F9fE2b074b6134C95 nonce=1 recipient=0xc061b852A26BEdeC5Bd457b88c031c46a622f4ab value=1000\nA transação 0x667f9570b629fdd437b112e4b5f388cbbe68efb43e0bdbb75bf9db473cbd00fc foi autorizada e podemos verificar o saldo das carteiras.\n&gt; eth.getTransactionReceipt(\"0x667f9570b629fdd437b112e4b5f388cbbe68efb43e0bdbb75bf9db47 3cbd00fc\")\n{\n  blockHash: \"0x30643a61e054cc3a2e5ce04c67e4c14ed192a889cede500bcf214d754540fe6b\",\n  blockNumber: 2544,\n  contractAddress: null,\n  cumulativeGasUsed: 21000,\n  effectiveGasPrice: 1000000007,\n  from: \"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\",\n  gasUsed: 21000,\n  logs: [],\n  logsBloom: \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n  status: \"0x1\",\n  to: \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\",\n  transactionHash: \"0x667f9570b629fdd437b112e4b5f388cbbe68efb43e0bdbb75bf9db473cbd00fc\",\n  transactionIndex: 0,\n  type: \"0x2\"\n}\n&gt; eth.accounts\n[\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\"]\n&gt; web3.fromWei(eth.getBalance(\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\"), \"ether\")\n5177.9999999999997049\n&gt; web3.fromWei(eth.getBalance(\"0xc061b852a26bedec5bd457b88c031c46a622f4ab\"), \"ether\")\n1.1e-15\nSurgiu após a instalação e execução a seguinte mensagem:\nAll I see is, beacon client online, but never received consensus updates. Please ensure your beacon client is operational to follow the chain!\n\nI connected the consensus client and it is syncing but not the geth client.\nProcurando pela mensagem chegamos à resposta no forum https://ethereum.stackexchange.com/questions/136810/geth-does-not-sync-proof-of-stake diz que é possível fazer uma sincronização rápida, usando um checkpoint.\n\nYour geth client will not start sync before your consensus-client does not sync completely. If you are using prysm consensus client, you can use checkpoint sync feature to sync in minutes so you don’t need to wait.\nThis is also verified by go-ethereum team in this issue.\n\nClicando-se no link checkpoint você será direcionado para a página da Figura:\n\n\n\nCheckpoint checkpointz\n\n\n\nClicando no botão Get started! ele vai para as opções de configuração de cada um dos clientes de consenso, conforme a Figura \\(\\ref{fig:checkpointz:prysm}\\).\n\n\n\nCheckpointz, configuração do prysm \n\n\nNo passo a passo da configuração para o Prysm, no Step 2 fala para adicionarmos os argumentos checkpoint sync para o nosso cliente:\n--checkpoint-sync-url=https://checkpoint-sync.sepolia.ethpandaops.io\n--genesis-beacon-api-url=https://checkpoint-sync.sepolia.ethpandaops.io\nO comando do terminal do prysm deve ser alterado para:\n[rogerio@ryzen-nitro prysm]$ ./prysm.sh beacon-chain --execution-endpoint=http://localhost:8551 --sepolia --jwt-secret=~/.ethereum/sepolia/geth/jwtsecret --genesis-state=genesis.ssz --suggested-fee-recipient=0xa9e98368b44b371cec7d205f9fe2b074b6134c95 --checkpoint-sync-url=https://checkpoint-sync.sepolia.ethpandaops.io --genesis-beacon-api-url=https://checkpoint-sync.sepolia.ethpandaops.io\nNa Option B do Step 4 é necessário recuperar os valores do slot number e do state_root.\n1. Open http://YOUR\\_NODE\\_IP:YOUR\\_NODE\\_PORT/eth/v1/beacon/headers/finalized in your browser.\n2. Find the slot number.\n3. Find the state_root value.\nSerá necessário conhecer o IP e a porta do beacon node. A porta padrão para o Prysm é 3500.\nAbrindo no navegador o link http://localhost:3500/eth/v1/beacon/headers/finalized será retornado o JSON com as informações:\n{\n \"data\":{\n   \"root\":\"0xc41093353f2a6bb5b63ac406ac040d95a28cf54ec3d6f0f232955d8e2456727c\",\n   \"canonical\":true,\n   \"header\":{\n     \"message\":{\n       \"slot\":\"3149344\",\n       \"proposer_index\":\"683\",\n       \"parent_root\":\"0xe5af6c8eaaeb1fb511966164a4093b77e18a160a921765a10c686d38f55240f1\",\n       \"state_root\":\"0xa055b83978259840e18c2a0e6e625982f2944ff8d906c01e7bab0bc2883cb793\",\n       \"body_root\":\"0xd5e597557fe3145b1485815e2e42b1e56640188df6136056313cfc37c07eb5d3\"\n     },\n   \"signature\":\"0x92f5babf32748c31f74d988869b7f7bc3f251056d117a4e63882fa2e3fa4b219e47f949\n   9f17f965f39d877ea83cf0cbf0de9879350ebc3024fb6fb6f37e9d16fae379ec0e127e7bef5e0a6d6587d2\n   cfb885b824d59d1d7cf78e9f43daf987fe7\"\n   }\n },\n \"execution_optimistic\":true,\n \"finalized\":true\n}\nUma outra opção dada na Option C é utilizar os comandos curl e o jq e recuperar a informação pelo terminal.\n[rogerio@ryzen-nitro prysm]$ curl -s http://localhost:3500/eth/v1/beacon/headers/finalized | jq .'data.header.message'\n{\n  \"slot\": \"3154944\",\n  \"proposer_index\": \"187\",\n  \"parent_root\": \"0xb89973544675c63c5f19f5904b8eaa164fc41c688ecb3078ee0dc62a62996c9b\",\n  \"state_root\": \"0x041fb39788896d2c0662e104ab7393124140546aacbeaedc2b7f94b9b5fcc548\",\n  \"body_root\": \"0x128fe8300ed3e76226ca14955790583df1921ed9c65d111804db319b7b6118ba\"\n}\n[rogerio@ryzen-nitro prysm]$\nPara verificar seu slot e seu state_root abra uma outra instância do site Checkpointz, note que deve ser uma instância diferente da que você está lendo esse tutorial.\nVerifique a tabela do histórico de limites de época finalizados e procure a linha que contém o valor do seu slot e tenha certeza que o seu state_root casa com o listado. Se coincidir, ok!\nCaso contrário, você deveria iniciar do início novamente limpando seu nó beacon e iniciando novamente os passos. Existem a opção do prysm --clear-db para limpar o banco de dados.\nPelo visto a parte que envolvia a mineração não funciona mais. Ao executar o comando no console javascript miner.start() a seguinte mensagem de erro aconteceu:\npanic: ethash (pow) sealing not supported any more\n\ngoroutine 4324 [running]:\ngithub.com/ethereum/go-ethereum/consensus/ethash.(*Ethash).Seal(0xc000199680?, {0x5607920e8325?, 0xc000c85ce0?}, 0xc000c85de8?, 0xc000c85ce0?, 0x8ba4636bba1627dc?)\n        github.com/ethereum/go-ethereum/consensus/ethash/ethash.go:84 +0x25\ngithub.com/ethereum/go-ethereum/consensus/beacon.(*Beacon).Seal(0xc0002d1bf0, {0x560793c496a8, 0xc000601c00}, 0xc0002381e0, 0x0?, 0x1?)\n        github.com/ethereum/go-ethereum/consensus/beacon/consensus.go:393 +0x8d\ngithub.com/ethereum/go-ethereum/miner.(*worker).taskLoop(0xc0004da6c0)\n        github.com/ethereum/go-ethereum/miner/worker.go:616 +0x2fd\ncreated by github.com/ethereum/go-ethereum/miner.newWorker in goroutine 1\n        github.com/ethereum/go-ethereum/miner/worker.go:285 +0x8f8\n[rogerio@ryzen-nitro sepolia]$ \nOutras mensagens de erros envolvendo o Prysm podem ser encontradas na documentação https://docs.prylabs.network/docs/troubleshooting/issues-errors.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#pedindo-recursos-para-um-faucet",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#pedindo-recursos-para-um-faucet",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "5.16 Pedindo Recursos para um Faucet",
    "text": "5.16 Pedindo Recursos para um Faucet\nUma alternativa ao teste com a mineração local seria solicita recursos a um faucet, ao https://sepoliafaucet.com/, por exemplo.\nNesses sistemas, você fornece o hash da conta desejada e uma pequena quantia será enviada para seu endereço. A Figura \\(\\ref{fig:transacao:faucet:01}\\) apresenta a interface do faucet.\n\n\n\nFaucet \n\n\nAs Figuras \\(\\ref{fig:transacao:faucet:02}\\) e \\(\\ref{fig:transacao:faucet:03}\\) apresentam detalhes da transação gerada.\n\n\n\nFaucet \n\n\n\n\n\nFaucet",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#importando-contas-do-metamask",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#importando-contas-do-metamask",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "5.17 Importando contas do Metamask",
    "text": "5.17 Importando contas do Metamask\nCriar um aquivo com o nome do hash da conta. Exportar no Metamask a chave privada e salvar como conteúdo desse arquivo.\n[rogerio@ryzen-nitro ~]$ nano 0x9DBf97c71AeD31302e07e34236308C97f882f914.txt\n[rogerio@ryzen-nitro ~]$ clef --chainid 11155111 --keystore ~/.ethereum/sepolia/keystore importraw 0x9DBf97c71AeD31302e07e34236308C97f882f914.txt \n\nWARNING!\n\nClef is an account management tool. It may, like any software, contain bugs.\n\nPlease take care to\n- backup your keystore files,\n- verify that the keystore(s) can be opened with your password.\n\nClef is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\nwithout even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\nPURPOSE. See the GNU General Public License for more details.\n\nEnter 'ok' to proceed:\n&gt; ok\n\n## Password\n\nPlease enter a password for the imported account\n&gt; \n-----------------------\n## Password\n\nPlease repeat the password you just entered\n&gt; \n-----------------------\n## Info \nKey imported:\n  Address 0x9DBf97c71AeD31302e07e34236308C97f882f914\n  Keystore file: /home/rogerio/.ethereum/sepolia/keystore/UTC--2024-09-12T14-29-06.549845800Z--9dbf97c71aed31302e07e34236308c97f882f914\n\nThe key is now encrypted; losing the password will result in permanently losing\naccess to the key and all associated funds!\n\nMake sure to backup keystore and passwords in a safe location.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#comandos-finais",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#comandos-finais",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "5.18 Comandos Finais",
    "text": "5.18 Comandos Finais\nA Figura \\(\\ref{fig:terminais:comandos}\\) apresenta os comandos para cada um dos terminais.\n\n\n\n\nTerminais \n\n\nO comando para o console do clef:\n[rogerio@ryzen-nitro clef]$ clef --chainid 11155111 --keystore ~/.ethereum/sepolia/keystore --configdir ~/.ethereum/sepolia/clef --http\nO comando para o console do Geth:\n\n[rogerio@ryzen-nitro sepolia]$ geth --sepolia --syncmode full --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin\" --keystore ~/.ethereum/sepolia/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.ethereum/sepolia/geth/jwtsecret --nodiscover --maxpeers 15 --miner.etherbase=0xa9e98368B44b371ceC7d205F9fE2b074b6134C95 --signer=/home/rogerio/.ethereum/sepolia/clef/clef.ipc --verbosity 3\nO comando para o console do prysm:\n[rogerio@ryzen-nitro prysm]$ ./prysm.sh beacon-chain --execution-endpoint=http://localhost:8551 --sepolia --jwt-secret=~/.ethereum/sepolia/geth/jwtsecret --suggested-fee-recipient=0xa9e98368b44b371cec7d205f9fe2b074b6134c95 --genesis-state=genesis.ssz --checkpoint-sync-url=https://checkpoint-sync.sepolia.ethpandaops.io --genesis-beacon-api-url=https://checkpoint-sync.sepolia.ethpandaops.io --clear-db\nO comando para o console do javascript:\n[rogerio@ryzen-nitro ~]$ geth attach /home/rogerio/.ethereum/sepolia/geth.ipc\nWelcome to the Geth JavaScript console!\n\ninstance: Geth/v1.12.2-stable-bed84606/linux-amd64/go1.21.0\ncoinbase: 0xa9e98368b44b371cec7d205f9fe2b074b6134c95\nat block: 0 (Sun Oct 03 2021 10:24:41 GMT-0300 (-03))\n datadir: /home/rogerio/.ethereum/sepolia\n modules: admin:1.0 debug:1.0 engine:1.0 eth:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt;",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#leitura-recomendada",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#leitura-recomendada",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "6.1 Leitura Recomendada",
    "text": "6.1 Leitura Recomendada\n[alertblock]{Leitura Recomendada}\nCapítulo 11: Ethereum 101\nLivro: IMRAN BASHIR. Mastering Blockchain : Distributed Ledger Technology, Decentralization, and Smart Contracts Explained, 2nd Edition.\nCapítulo 12: Futher Ethereum\nLivro: IMRAN BASHIR. Mastering Blockchain : Distributed Ledger Technology, Decentralization, and Smart Contracts Explained, 2nd Edition.\n[/alertblock]",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#word-cloud",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#word-cloud",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "6.2 Word Cloud",
    "text": "6.2 Word Cloud",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#referências-1",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#referências-1",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "6.3 Referências",
    "text": "6.3 Referências",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#footnotes",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#footnotes",
    "title": "4  Prática: Instalando o Cliente Ethereum",
    "section": "",
    "text": "Step 2: Install Prysm: https://docs.prylabs.network/docs/install/install-with-script#step-2-install-prysm↩︎\nStep 3: Run an execution client: https://docs.prylabs.network/docs/install/install-with-script#step-3-run-an-execution-client↩︎\nStep 4: Run a beacon node using Prysm: https://docs.prylabs.network/docs/install/install-with-script#step-4-run-a-beacon-node-using-prysm↩︎",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Prática: Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html",
    "href": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html",
    "title": "5  Prática: Criando uma Rede Ethereum Privada: Ethash",
    "section": "",
    "text": "5.1 Introdução\nO objetivo dessa prática é criarmos uma Rede Ethereum Privada. Podemos criar uma rede privada local utilizando o algoritmo de consenso por Proof-of-Work (PoW) que é o ethash. Outro protocolo de consenso é o clique que funciona PoA ou Proof-of-Authority (PoS). O casper é o algoritmo de consenso Proof of Stake (PoS) atual da Ethereum.\nA rede Ethereum iniciou usando um mecanismo de consenso que envolve Proof-of-Work (PoW). Entretanto, Ethereum depreciou o uso de Proof-of-Work em \\(2022\\) e iniciou o uso de Proof-of-Stake.\nLeia mais em Proof-of-Stake e staking.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Ethash`</span>"
    ]
  },
  {
    "objectID": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#ferramentas-e-versões",
    "href": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#ferramentas-e-versões",
    "title": "5  Prática: Criando uma Rede Ethereum Privada: Ethash",
    "section": "5.2 Ferramentas e Versões",
    "text": "5.2 Ferramentas e Versões\nPara utilizarmos o algoritmo de consenso Prof-of-Work (PoW), o ethash é necessário instalarmos o geth na versão 1.11.6, pois a partir da versão 1.12 o ethash não é mais suportado. No link https://github.com/ethereum/go-ethereum/releases temos todas as versões, a versão corrente é a Impact Restrictors (v1.16.3).\nAntes de baixarmos os fontes do geth da versão 1.11 precisaremos instalar o go. Para compilar os fontes do geth é necessário ter o go versão 1.21.1 instalado. Pode ser instalado o pacote do sistema (golang-go no Ubuntu ou go no Manjaro) ou baixando os binários de golang, go versão 1.21.1.\nSe a versão do sistema não for a 1.21.*:\n$ go version\ngo version go1.21.0 linux/amd64\n$ \nSerá necessário baixar e instalar a partir dos binários:\n\nRemova a instalação prévia do Go deletando o diretório /usr/local/go1.21.1, se existir, então extraia o arquivo baixado dentro do diretório /usr/local, criando uma subárvore em /usr/local/go1.21.1 ou caso não tenha permissão, crie dentro da pasta home do seu usuário:\n\n$ cd /usr/local\n$ wget https://go.dev/dl/go1.21.1.linux-amd64.tar.gz\n$ rm -rf /usr/local/go1.21.1 && tar -C /usr/local -xzf go1.21.1.linux-amd64.tar.gz && mv go go1.21.1\n$ ln -s go1.21.1 go\n​(Você pode precisar executar o comando como root ou usando o sudo).\n​Não descompactar o arquivo dentro de uma subárvore /usr/local/go existente. Isso pode produzir instalações Go quebradas.\n​2. Adicione /usr/local/go/bin para a variável de ambiente PATH. Você pode fazer isso adicionando a linha de comando para o seu $HOME/.profile ou /etc/profile (para uma instalação ampla no sistema):\nexport PATH=/usr/local/go/bin:$PATH         \nNota: Mudanças feitas no arquivo de profile podem não ser aplicadas até a próxima vez que você fizer login no computador. Para aplicar as mudanças imediatamente, execute os comandos diretamente em um terminal ou execute eles do profile usando o comando source $HOME/.profile.\n​3. Verifique que a versão correta do Go foi instalada:\n$ go version          \n\nConfirme que o comando imprime a versão do Go instalado.\n\nPara instalarmos o geth a partir do repositório a versão Azimir (v1.11.6), basta acessarmos o repositório do Github e baixar na pasta do seu usuário:\n$ git clone -b 'v1.11.6' --single-branch --depth 1 https://github.com/ethereum/go-ethereum.git go-ethereum-1.11.6\n\n$ cd go-ethereum-1.11.6\n[go-ethereum-1.11.6]$ make all\nApós a compilação os binários estarão disponíveis no diretório go-ethereum-1.11.6/build/bin:\n[go-ethereum-1.11.6]$ ls build/bin\nabidump  bootnode          clef    ethkey  faucet  p2psim\nabigen   checkpoint-admin  devp2p  evm     geth    rlpdump\n[go-ethereum-1.11.6]$\nSendo necessário considerar esse caminho dos binários para acessar os executáveis da versão correta nesta prática: /home/rag/go-ethereum-1.11.6/build/bin.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Ethash`</span>"
    ]
  },
  {
    "objectID": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#criando-uma-rede-privada-local",
    "href": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#criando-uma-rede-privada-local",
    "title": "5  Prática: Criando uma Rede Ethereum Privada: Ethash",
    "section": "5.3 Criando uma Rede Privada Local",
    "text": "5.3 Criando uma Rede Privada Local\nPara a criação de uma nova Rede Privada Local é necessário fazermos algumas configuraçãos. Precisamos criar um diretório mkdir ~/.etherprivate-ethash para ser a base de armazenamento da nova rede. As configurações iniciais devem ser fornecidas em um genesis file. Então criamos o arquivo privategenesis.json em ~/.etherprivate-ethash.\n\n\n\n\n\n\nPassos\n\n\n\n\nCriar um diretório mkdir ~/.etherprivate-ethash\nCriar um arquivo privategenesis.json em ~/.etherprivate-ethash.\n\n\n\nO conteúdo do arquivo privategenesis.json deve ser o listado no Código 6.I.\n\n\n\nListing 5.I- Genesis File\n\n\n{\n  \"config\": {\n    \"chainId\": 786,\n    \"homesteadBlock\": 0,\n    \"eip150Block\": 0,\n    \"eip155Block\": 0,\n    \"eip158Block\": 0,\n    \"byzantiumBlock\": 0,\n    \"constantinopleBlock\": 0,\n    \"petersburgBlock\": 0,\n    \"istanbulBlock\": 0,\n    \"berlinBlock\": 0,\n    \"ethash\": {}\n  },  \n  \"nonce\": \"0x0000000000000042\",\n  \"timestamp\": \"0x00\",\n  \"parentHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n  \"extraData\": \"0x00\",\n  \"gasLimit\": \"0x8000000\",\n  \"difficulty\": \"0x0400\",\n  \"mixhash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n  \"coinbase\": \"0x3333333333333333333333333333333333333333\",\n  \"alloc\": {}\n}\n\n\n\nUtilizando as configurações fornecidas no Código 6.I a rede será criada sem nenhum usuário, o \"alloc\": {} vazio indica isso. Será possível criar posteriormente conforme descrito na Seção 5.6. \nUma outra forma de estabelecer a configuração inicial da rede com contas com valores alocados, é criando o usuário antes de inicializar a rede com as configurações do Genesis File, conforme o Código 6.II.\n\n\n\nListing 5.II- Criando Usuário para iniciar a rede\n\n\n[.etherprivate-ethash]$ /home/rag/go-ethereum-1.11.6/build/bin/geth --networkid 786 --datadir ~/.etherprivate-ethash/ account new\nINFO [04-19|16:22:04.258] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [04-19|16:22:04.258] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nYour new account is locked with a password. Please give a password. Do not forget this password.\nPassword: \nRepeat password: \n\nYour new key was generated\n\nPublic address of the key:   0x2db017e44b03b37755a4b15e14cd799f83de4c13\nPath of the secret key file: /home/rag/.etherprivate-ethash/keystore/UTC--2023-04-17T12-22-11.261468773Z--2db017e44b03b37755a4b15e14cd799f83de4c13\n\n- You can share your public address with anyone. Others need it to interact with you.\n- You must NEVER share the secret key with anyone! The key controls access to your funds!\n- You must BACKUP your key file! Without the key, it's impossible to access account funds!\n- You must REMEMBER your password! Without the password, it's impossible to decrypt the key!\n\n\n\nCom um id da conta criada (0x2db017e44b03b37755a4b15e14cd799f83de4c13) é possível completarmos algumas informações para inicializar a nova rede. Altere o conteúdo do arquivo privategenesis.json tal como listado no Código 6.III.\n\n\n\nListing 5.III- Genesis File Atualizado\n\n\n{\n  \"config\": {\n    \"chainId\": 786,\n    \"homesteadBlock\": 0,\n    \"eip150Block\": 0,\n    \"eip155Block\": 0,\n    \"eip158Block\": 0,\n    \"byzantiumBlock\": 0,\n    \"constantinopleBlock\": 0,\n    \"petersburgBlock\": 0,\n    \"istanbulBlock\": 0,\n    \"berlinBlock\": 0,\n    \"ethash\": {}\n  },  \n  \"nonce\": \"0x0000000000000042\",\n  \"timestamp\": \"0x00\",\n  \"parentHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n  \"extraData\": \"0x00\",\n  \"gasLimit\": \"0x8000000\",\n  \"difficulty\": \"0x0400\",\n  \"mixhash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n  \"coinbase\": \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\",\n  \"alloc\": {\n    \"2db017e44b03b37755a4b15e14cd799f83de4c13\": { \"balance\": \"300000\" }\n  }\n}\n\n\n\nApós a configuração inicial no Genesis File, o geth é utilizado para a criação e inicialização da nova Rede sendo executado com os parâmetros --datadir, indicando o diretório onde os dados da nova rede serão armazenados e com o init indicando o caminho para o Genesis File, conforme o Código 5.IV.\n\n\n\nListing 5.IV- Inicialização da Rede Privada Local\n\n\n[.etherprivate-ethash]$ /home/rag/go-ethereum-1.11.6/build/bin/geth --networkid 786 --identity \"RAGEtherPrivate\" --datadir ~/.etherprivate-ethash init ~/.etherprivate-ethash/privategenesis.json\nINFO [09-10|18:22:14.423] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [09-10|18:22:14.426] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [09-10|18:22:14.430] Set global gas cap                       cap=50,000,000\nINFO [09-10|18:22:14.431] Using pebble as the backing database \nINFO [09-10|18:22:14.431] Allocated cache and file handles         database=/home/rag/.etherprivate-ethash/geth/chaindata cache=16.00MiB handles=16\nINFO [09-10|18:22:14.496] Opened ancient database                  database=/home/rag/.etherprivate-ethash/geth/chaindata/ancient/chain readonly=false\nINFO [09-10|18:22:14.496] Persisted trie from memory database      nodes=1 size=142.00B time=\"10.896us\" gcnodes=0 gcsize=0.00B gctime=0s livenodes=1 livesize=0.00B\nINFO [09-10|18:22:14.496] Freezer shutting down \nINFO [09-10|18:22:14.502] Successfully wrote genesis state         database=chaindata hash=c4bd3f..d74cb0\nINFO [09-10|18:22:14.502] Using pebble as the backing database \nINFO [09-10|18:22:14.502] Allocated cache and file handles         database=/home/rag/.etherprivate-ethash/geth/lightchaindata cache=16.00MiB handles=16\nINFO [09-10|18:22:14.555] Opened ancient database                  database=/home/rag/.etherprivate-ethash/geth/lightchaindata/ancient/chain readonly=false\nINFO [09-10|18:22:14.556] Persisted trie from memory database      nodes=1 size=142.00B time=\"21.093us\" gcnodes=0 gcsize=0.00B gctime=0s livenodes=1 livesize=0.00B\nINFO [09-10|18:22:14.563] Successfully wrote genesis state         database=lightchaindata hash=c4bd3f..d74cb0\n[.etherprivate-ethash]$",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Ethash`</span>"
    ]
  },
  {
    "objectID": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#executando-a-nova-rede",
    "href": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#executando-a-nova-rede",
    "title": "5  Prática: Criando uma Rede Ethereum Privada: Ethash",
    "section": "5.4 Executando a nova Rede",
    "text": "5.4 Executando a nova Rede\nAo tentar iniciar o cliente Geth com a nova rede privada utilizando o algoritmo de consenso da PoW, o ethash conforme o Código 5.V.\n\n\n\nListing 5.V- Execução da Nova Rede Privada Local\n\n\n[.etherprivate-ethash]$ /home/rag/go-ethereum-1.11.6/build/bin/geth --identity \"RAGEtherPrivate\" --datadir ~/.etherprivate-ethash\nINFO [09-10|19:06:06.995] Starting Geth on Ethereum mainnet... \nINFO [09-10|19:06:06.996] Bumping default cache on mainnet         provided=1024 updated=4096\nINFO [09-10|19:06:06.997] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [09-10|19:06:06.998] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [09-10|19:06:07.000] Set global gas cap                       cap=50,000,000\nINFO [09-10|19:06:07.003] Allocated trie memory caches             clean=614.00MiB dirty=1024.00MiB\nINFO [09-10|19:06:07.004] Using pebble as the backing database \nINFO [09-10|19:06:07.004] Allocated cache and file handles         database=/home/rag/.etherprivate-ethash/geth/chaindata cache=2.00GiB handles=262,144\nINFO [09-10|19:06:07.066] Opened ancient database                  database=/home/rag/.etherprivate-ethash/geth/chaindata/ancient/chain readonly=false\nINFO [09-10|19:06:07.067] Disk storage enabled for ethash caches   dir=/home/rag/.etherprivate-ethash/geth/ethash count=3\nINFO [09-10|19:06:07.067] Disk storage enabled for ethash DAGs     dir=/home/rag/.ethash                   count=2\nINFO [09-10|19:06:07.067] Initialising Ethereum protocol           network=1 dbversion=8\nINFO [09-10|19:06:07.067]  \nINFO [09-10|19:06:07.067] --------------------------------------------------------------------------------------------------------------------------------------------------------- \nINFO [09-10|19:06:07.067] Chain ID:  786 (unknown) \nINFO [09-10|19:06:07.067] Consensus: Ethash (proof-of-work) \nINFO [09-10|19:06:07.067]  \nINFO [09-10|19:06:07.067] Pre-Merge hard forks (block based): \nINFO [09-10|19:06:07.067]  - Homestead:                   #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/homestead.md) \nINFO [09-10|19:06:07.067]  - Tangerine Whistle (EIP 150): #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/tangerine-whistle.md) \nINFO [09-10|19:06:07.067]  - Spurious Dragon/1 (EIP 155): #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/spurious-dragon.md) \nINFO [09-10|19:06:07.067]  - Spurious Dragon/2 (EIP 158): #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/spurious-dragon.md) \nINFO [09-10|19:06:07.067]  - Byzantium:                   #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/byzantium.md) \nINFO [09-10|19:06:07.067]  - Constantinople:              #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/constantinople.md) \nINFO [09-10|19:06:07.067]  - Petersburg:                  #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/petersburg.md) \nINFO [09-10|19:06:07.067]  - Istanbul:                    #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/istanbul.md) \nINFO [09-10|19:06:07.067]  - Berlin:                      #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/berlin.md) \nINFO [09-10|19:06:07.067]  - London:                      #&lt;nil&gt; (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/london.md) \nINFO [09-10|19:06:07.067]  \nINFO [09-10|19:06:07.067] The Merge is not yet available for this network! \nINFO [09-10|19:06:07.067]  - Hard-fork specification: https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/paris.md \nINFO [09-10|19:06:07.067]  \nINFO [09-10|19:06:07.067] Post-Merge hard forks (timestamp based): \nINFO [09-10|19:06:07.067]  \nINFO [09-10|19:06:07.067] --------------------------------------------------------------------------------------------------------------------------------------------------------- \nINFO [09-10|19:06:07.067]  \nINFO [09-10|19:06:07.068] Loaded most recent local block           number=33 hash=193b06..bc9c89 td=4,360,192 age=21m43s\nINFO [09-10|19:06:07.073] Loaded local transaction journal         transactions=0 dropped=0\nINFO [09-10|19:06:07.074] Regenerated local transaction journal    transactions=0 accounts=0\nWARN [09-10|19:06:07.074] Switch sync mode from snap sync to full sync \nINFO [09-10|19:06:07.076] Gasprice oracle is ignoring threshold set threshold=2\nWARN [09-10|19:06:07.077] Engine API enabled                       protocol=eth\nWARN [09-10|19:06:07.077] Engine API started but chain not configured for merge yet \nINFO [09-10|19:06:07.077] Starting peer-to-peer node               instance=Geth/RAGEtherPrivate/v1.11.6-stable-ea9e62ca/linux-amd64/go1.21.1\nINFO [09-10|19:06:07.111] New local node record                    seq=1,726,003,870,539 id=3eabcf4667e9d0bc ip=127.0.0.1 udp=30303 tcp=30303\nINFO [09-10|19:06:07.111] Started P2P networking                   self=enode://d5c0dbca4edd303126eb0bdbc448848390f0998843381703ca91a4850e63e9e561899e03834e0c9c7e60e357acb34351d9e9da9a59b403faa7559938188bf78b@127.0.0.1:30303\nINFO [09-10|19:06:07.112] IPC endpoint opened                      url=/home/rag/.etherprivate-ethash/geth.ipc\nINFO [09-10|19:06:07.112] Loaded JWT secret file                   path=/home/rag/.etherprivate-ethash/geth/jwtsecret crc32=0x3d38500f\nINFO [09-10|19:06:07.113] WebSocket enabled                        url=ws://127.0.0.1:8551\nINFO [09-10|19:06:07.113] HTTP server started                      endpoint=127.0.0.1:8551 auth=true prefix= cors=localhost vhosts=localhost\nINFO [09-10|19:06:17.529] Looking for peers                        peercount=0 tried=13 static=0\nINFO [09-10|19:06:27.770] Looking for peers                        peercount=0 tried=24 static=0\nINFO [09-10|19:06:37.860] Looking for peers                        peercount=1 tried=37 static=0\nINFO [09-10|19:06:47.862] Looking for peers                        peercount=0 tried=31 static=0\nWARN [09-10|19:06:49.748] Served eth_coinbase                      reqid=3 duration=\"42.046us\" err=\"etherbase must be explicitly specified\"\nINFO [09-10|19:06:58.194] Looking for peers                        peercount=0 tried=29 static=0\nINFO [09-10|19:07:08.265] Looking for peers                        peercount=0 tried=35 static=0\nINFO [09-10|19:07:16.871] Updated mining threads                   threads=16\nINFO [09-10|19:07:16.872] Transaction pool price threshold updated price=1,000,000,000\nERROR[09-10|19:07:16.872] Cannot start mining without etherbase    err=\"etherbase must be explicitly specified\"\nWARN [09-10|19:07:16.872] Served miner_start                       reqid=11 duration=\"194.024us\" err=\"etherbase missing: etherbase must be explicitly specified\"\n\n\n\nCom o protocolo ethash é preciso indicar uma conta para receber as recompensas de mineração, utilize o parâmetro --miner.etherbase=0x2db017e44b03b37755a4b15e14cd799f83de4c13 para indicar a conta principal que foi criada. O Código 5.VI apresenta a linha de comando atualizada.\n\n\n\nListing 5.VI- Execução da Nova Rede Privada Local\n\n\n[.etherprivate-ethash]$ /home/rag/go-ethereum-1.11.6/build/bin/geth --networkid 786 --datadir ~/.etherprivate-ethash/ --syncmode full --allow-insecure-unlock --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin,debug\" --keystore ~/.etherprivate-ethash/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.etherprivate-ethash/geth/jwtsecret --nodiscover --maxpeers 15 --miner.etherbase=0x2db017e44b03b37755a4b15e14cd799f83de4c13",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Ethash`</span>"
    ]
  },
  {
    "objectID": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#interagindo-com-a-nova-rede",
    "href": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#interagindo-com-a-nova-rede",
    "title": "5  Prática: Criando uma Rede Ethereum Privada: Ethash",
    "section": "5.5 Interagindo com a nova Rede",
    "text": "5.5 Interagindo com a nova Rede\nO console JavaScript pode ser utilizado na interação com a instância da nova rede em execução. O comando apresentado no Código 5.VII inicia uma console vinculado à instância do geth em execução.\n\n\n\nListing 5.VII- Execução da Nova Rede Privada Local\n\n\n$ /home/rag/go-ethereum-1.11.6/build/bin/geth attach ~/.etherprivate-ethash/geth.ipc",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Ethash`</span>"
    ]
  },
  {
    "objectID": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#sec-criando:contas",
    "href": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#sec-criando:contas",
    "title": "5  Prática: Criando uma Rede Ethereum Privada: Ethash",
    "section": "5.6 Criando contas na nova Rede",
    "text": "5.6 Criando contas na nova Rede\nVamos criar duas contas para testes na nova rede. Utilizaremos para fins de teste a senha “admin12345”. O Código abaixo mostra a execução quando era possível utilizar o método personal.newAccount(...) via console JavaScript. Em versões anteriores era possível criar contas diretamente no console conforme (Código Listing 5.VIII).\n\n\n\nListing 5.VIII- Criando Contas pelo Console\n\n\n&gt; personal.newAccount(\"admin12345\")\n\"0xedbc36d74d5a1cd64db36e53798bd1781f0c4955\"\n\n&gt; eth.accounts\n[\"0xedbc36d74d5a1cd64db36e53798bd1781f0c4955\"]\n\n&gt;  personal.newAccount(\"admin12345\")\n\n\"0x1478d95f8754b3ba7127100dd0bb46578fe7d22a\"\n\n&gt; eth.accounts\n[\"0xedbc36d74d5a1cd64db36e53798bd1781f0c4955\", \"0x1478d95f8754b3ba7127100dd0bb46578fe7d22a\"]\n\n\n\nNa versão utilizada na prática e seguintes isso não é mais possível, pois o personal foi depreciado:\n&gt;  personal.newAccount(\"admin12345\")\nReferenceError: personal is not defined\n        at &lt;eval&gt;:1:2(0)\nCom a depreciação do personal é recomendado utilizar o clef com o parâmetro newaccount. É importante indicar o diretório keystore do .etherprivate-ethash.\nSe seguimos a opção de criar uma conta antes para configurar o genesis file nossa base já terá uma conta. Essa conta pode ser verificada utilizando o geth --networkid 786 --datadir ~/.etherprivate-ethash/ account ou o comando do clef conforme apresentado no Código 5.IX.\n\n\n\nListing 5.IX- Iniciando o clef\n\n\n$ /home/rag/go-ethereum-1.11.6/build/bin/clef list-accounts --keystore ~/.etherprivate-ethash/keystore\n\nWARNING!\n\nClef is an account management tool. It may, like any software, contain bugs.\n\nPlease take care to\n- backup your keystore files,\n- verify that the keystore(s) can be opened with your password.\n\nClef is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\nwithout even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\nPURPOSE. See the GNU General Public License for more details.\n\nEnter 'ok' to proceed:\n&gt; ok\n\n0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 (keystore:///home/rag/.etherprivate-ethash/keystore/UTC--2023-04-17T12-22-11.261468773Z--2db017e44b03b37755a4b15e14cd799f83de4c13)\n\n\n\n\nA conta 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 que foi gerada, utilizei a senha admin12345. Uma segunda conta pode ser criada com o mesmo comando conforme apresentado no Código 5.X.\n\n\n\nListing 5.X- Criando uma nova conta com o clef\n\n\n[.etherprivate-ethash]$ clef newaccount --keystore keystore\n\nWARNING!\n\nClef is an account management tool. It may, like any software, contain bugs.\n\nPlease take care to\n- backup your keystore files,\n- verify that the keystore(s) can be opened with your password.\n\nClef is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\nwithout even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\nPURPOSE. See the GNU General Public License for more details.\n\nEnter 'ok' to proceed:\n&gt; ok\n\n## New account password\n\nPlease enter a password for the new account to be created (attempt 0 of 3)\n&gt; \n-----------------------\nINFO [04-17|09:28:56.607] Your new key was generated               address=0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\nWARN [04-17|09:28:56.607] Please backup your key file!             path=/home/rag/.etherprivate-ethash/keystore/UTC--2023-04-17T12-28-54.934614755Z--7a7686ad451d2865a2246e239b674aefd4c6c27c\nWARN [04-17|09:28:56.607] Please remember your password! \nGenerated account 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\n[.etherprivate-ethash]$\n\n\n\nÉ para termos duas contas criadas, que na minha máquina são: 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 e 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c, ambas com a senha admin12345.\nVerifiquemos no console JavaScript se elas são listadas:\n[.etherprivate-ethash]$ /home/rag/go-ethereum-1.11.6//build/bin/geth attach ~/.etherprivate-ethash/geth.ipc\nWelcome to the Geth JavaScript console!\n\ninstance: Geth/v1.11.5-stable-a38f4108/linux-amd64/go1.20.2\nat block: 0 (Wed Dec 31 1969 21:00:00 GMT-0300 (-03))\n datadir: /home/rag/.etherprivate-ethash\n modules: admin:1.0 debug:1.0 engine:1.0 eth:1.0 ethash:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt; eth.accounts\n[\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\"]\n&gt;",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Ethash`</span>"
    ]
  },
  {
    "objectID": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#verificando-o-saldo-das-carteiras",
    "href": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#verificando-o-saldo-das-carteiras",
    "title": "5  Prática: Criando uma Rede Ethereum Privada: Ethash",
    "section": "5.7 Verificando o Saldo das Carteiras",
    "text": "5.7 Verificando o Saldo das Carteiras\nVamos verificar os valores em cada uma das carteiras:\n[.etherprivate-ethash]$ ~/go-ethereum-1.11.6/build/bin/geth attach ~/.etherprivate-ethash/geth.ipc\nWelcome to the Geth JavaScript console!\n\ninstance: Geth/v1.11.6-stable-ea9e62ca/linux-amd64/go1.21.1\ncoinbase: 0x2db017e44b03b37755a4b15e14cd799f83de4c13\nat block: 90 (Tue Sep 10 2024 19:15:48 GMT-0300 (-03))\n datadir: /home/rag/.etherprivate-ethash\n modules: admin:1.0 debug:1.0 engine:1.0 eth:1.0 ethash:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt; eth.accounts\n[\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\"]\n&gt;\n&gt; web3.fromWei(eth.getBalance(\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\"), \"ether\")\n0\n&gt; web3.fromWei(eth.getBalance(\"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\"), \"ether\")\n0\n&gt; \nSe criamos a primeira conta antes da configuração do genesis file, alocamos para ela \\(300000\\) então a consulta de valores iniciais terá resultado diferente.\n&gt; eth.accounts\n[\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\"]\n&gt; eth.getBalance(eth.accounts[0])\n300000\n&gt; eth.getBalance(eth.accounts[1])\n0\n&gt; web3.fromWei(eth.getBalance(\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\"), \"ether\")\n3e-13\n&gt; web3.fromWei(eth.getBalance(\"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\"), \"ether\")\n0\n&gt;",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Ethash`</span>"
    ]
  },
  {
    "objectID": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#gerar-algum-saldo-para-as-carteiras",
    "href": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#gerar-algum-saldo-para-as-carteiras",
    "title": "5  Prática: Criando uma Rede Ethereum Privada: Ethash",
    "section": "5.8 Gerar algum Saldo para as Carteiras",
    "text": "5.8 Gerar algum Saldo para as Carteiras\nSe não alocamos nenhuma valor para alguma conta criada antes da inicialização da rede, para acumular algum valor é necessário minerar.\nVamos iniciar o geth indicando a carteira que irá receber as recompensas pela mineração utilizando o parâmetro --miner.etherbase, utilizei aqui a primeira conta criada 0x2db017e44b03b37755a4b15e14cd799f83de4c13. Note que é possível colocar uma identificação para sua rede com o parâmetro --identity \"RAGEtherPrivate\".\n[.etherprivate-ethash]$ ~/go-ethereum-1.11.6/build/bin/geth --networkid 786 --datadir ~/.etherprivate-ethash/ --syncmode full --allow-insecure-unlock --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin,debug\" --keystore ~/.etherprivate-ethash/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.etherprivate-ethash/geth/jwtsecret --nodiscover --maxpeers 15 --miner.etherbase=0x2db017e44b03b37755a4b15e14cd799f83de4c13\nO cliente geth irá iniciar normalmente.\nEm um console JavaScript vamos verificar o saldo inicial e iniciar a mineração.\n[.etherprivate-ethash]$ ~/go-ethereum-1.11.6/build/bin/geth attach ~/.etherprivate-ethash/geth.ipc\nWelcome to the Geth JavaScript console!\n\ninstance: Geth/v1.11.6-stable-ea9e62ca/linux-amd64/go1.21.1\ncoinbase: 0x2db017e44b03b37755a4b15e14cd799f83de4c13\nat block: 90 (Tue Sep 10 2024 19:15:48 GMT-0300 (-03))\n datadir: /home/rag/.etherprivate-ethash\n modules: admin:1.0 debug:1.0 engine:1.0 eth:1.0 ethash:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt; eth.accounts\n\n[\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\"]\n&gt; web3.fromWei(eth.getBalance(\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\"), \"ether\")\n0\n&gt; miner.start()\n\nnull\n&gt; web3.fromWei(eth.getBalance(\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\"), \"ether\")\n2890\n&gt;",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Ethash`</span>"
    ]
  },
  {
    "objectID": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#transferências-entre-as-carteiras",
    "href": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#transferências-entre-as-carteiras",
    "title": "5  Prática: Criando uma Rede Ethereum Privada: Ethash",
    "section": "5.9 Transferências entre as Carteiras",
    "text": "5.9 Transferências entre as Carteiras\nVamos enviar \\(100\\) ethers da primeira para a segunda carteira.\n&gt; eth.sendTransaction({from: \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", to: \"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\", value: 100})\n\n[.etherprivate-ethash]$ /home/rag/go-ethereum-1.11.6/build/bin/geth attach ~/.etherprivate-ethash/geth.ipc\nWelcome to the Geth JavaScript console!\n\ninstance: Geth/v1.11.6-stable-ea9e62ca/linux-amd64/go1.21.1\ncoinbase: 0x2db017e44b03b37755a4b15e14cd799f83de4c13\nat block: 90 (Tue Sep 10 2024 19:15:48 GMT-0300 (-03))\n datadir: /home/rag/.etherprivate-ethash\n modules: admin:1.0 debug:1.0 engine:1.0 eth:1.0 ethash:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt; eth.accounts\n\n[\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\"]\n&gt; web3.fromWei(eth.getBalance(\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\"), \"ether\")\n0\n&gt; miner.start()\n\nnull\n&gt; web3.fromWei(eth.getBalance(\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\"), \"ether\")\n2890\n&gt; miner.stop()\n\nnull\n&gt; web3.fromWei(eth.getBalance(\"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\"), \"ether\")\n0\n&gt; web3.fromWei(eth.getBalance(\"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\"), \"ether\")\n0\n&gt; web3.fromWei(eth.getBalance(\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\"), \"ether\")\n4335\n&gt; eth.sendTransaction({from: \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", to: \"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\", value: 100})\nError: authentication needed: password or unlock\n        at web3.js:6365:9(39)\n        at send (web3.js:5099:62(29))\n        at &lt;eval&gt;:1:20(9)\n\n&gt; personal.unlockAccount(eth.accounts[0])\n\n\nReferenceError: personal is not defined\n        at &lt;eval&gt;:1:1(0)\n\n&gt; eth.accounts\n[\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\"]\n&gt; eth.sendTransaction({to: '0x7a7686ad451d2865a2246e239b674aefd4c6c27c', from: eth.accounts[0], value: 100});\nError: authentication needed: password or unlock\n        at web3.js:6365:9(39)\n        at send (web3.js:5099:62(29))\n        at &lt;eval&gt;:1:20(12)\n\n&gt; eth.sendTransaction({\n  to: '0x7a7686ad451d2865a2246e239b674aefd4c6c27c',\n  from: eth.accounts[0],\n&gt; eth.accounts\n\n[\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\"]\nO erro “Error: authentication needed: password or unlock” ocorre por que precisamos autorizar a transação. Em versões anteriores era possível desbloquear as contas via console JavaScript, conforme tentamos no Código acima personal.unlockAccount(eth.accounts[0]). Como o personal foi depreciado não pode ser mais utilizado.\nÉ preciso utilizar o clef para fazer a autenticação em um console. Sendo assim, em um outro terminal inicie a instância do clef com o comando:\n[.etherprivate-ethash]$ /home/rag/go-ethereum-1.11.6/build/bin/clef --chainid 786 --keystore ~/.etherprivate-ethash/keystore --configdir ~/.etherprivate-ethash/clef --http\n\nWARNING!\n\nClef is an account management tool. It may, like any software, contain bugs.\n\nPlease take care to\n- backup your keystore files,\n- verify that the keystore(s) can be opened with your password.\n\nClef is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\nwithout even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\nPURPOSE. See the GNU General Public License for more details.\n\nEnter 'ok' to proceed:\n&gt; ok\n\nINFO [04-17|10:23:09.630] Using CLI as UI-channel \nINFO [04-17|10:23:10.050] Loaded 4byte database                    embeds=268,621 locals=0 local=./4byte-custom.json\nWARN [04-17|10:23:10.050] Failed to open master, rules disabled    err=\"failed stat on /home/rag/.etherprivate-ethash/clef/masterseed.json: stat /home/rag/.etherprivate-ethash/clef/masterseed.json: no such file or directory\"\nINFO [04-17|10:23:10.050] Starting signer                          chainid=786 keystore=/home/rag/.etherprivate-ethash/keystore light-kdf=false advanced=false\nINFO [04-17|10:23:10.052] Smartcard socket file missing, disabling err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [04-17|10:23:10.052] Audit logs configured                    file=audit.log\nINFO [04-17|10:23:10.053] HTTP endpoint opened                     url=http://127.0.0.1:8550/\nINFO [04-17|10:23:10.053] IPC endpoint opened                      url=/home/rag/.etherprivate-ethash/clef/clef.ipc\n\n------- Signer info -------\n* extapi_version : 6.1.0\n* extapi_http : http://127.0.0.1:8550/\n* extapi_ipc : /home/rag/.etherprivate-ethash/clef/clef.ipc\n* intapi_version : 7.0.1\n\n------- Available accounts -------\n0. 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 at keystore:///home/rag/.etherprivate-ethash/keystore/UTC--2023-04-17T12-22-11.261468773Z--2db017e44b03b37755a4b15e14cd799f83de4c13\n1. 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c at keystore:///home/rag/.etherprivate-ethash/keystore/UTC--2023-04-17T12-28-54.934614755Z--7a7686ad451d2865a2246e239b674aefd4c6c27c\n-------- List Account request--------------\nA request has been made to list all accounts. \nYou can select which accounts the caller can see\n  [x] 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n    URL: keystore:///home/rag/.etherprivate-ethash/keystore/UTC--2023-04-17T12-22-11.261468773Z--2db017e44b03b37755a4b15e14cd799f83de4c13\n  [x] 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\n    URL: keystore:///home/rag/.etherprivate-ethash/keystore/UTC--2023-04-17T12-28-54.934614755Z--7a7686ad451d2865a2246e239b674aefd4c6c27c\n-------------------------------------------\nE volte ao terminal onde iniciou o geth e indique que as autentificações serão via clef com o parâmetro --signer=/home/rag/.etherprivate-ethash/clef/clef.ipc passando o caminho dado pelo clef.\n[.etherprivate-ethash]$ geth --networkid 786 --datadir ~/.etherprivate-ethash/ --syncmode full --allow-insecure-unlock  --identity \"RAGEtherPrivate\"  --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin,debug\" --keystore ~/.etherprivate-ethash/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.etherprivate-ethash/geth/jwtsecret --nodiscover --maxpeers 15 --miner.etherbase=0x2db017e44b03b37755a4b15e14cd799f83de4c13 --signer=/home/rag/.etherprivate-ethash/clef/clef.ipc\nCada transação executada no console JavaScript deverá ser autorizada no console do clef.\n\n&gt; eth.sendTransaction({\n  to: '0x7a7686ad451d2865a2246e239b674aefd4c6c27c',\n  from: eth.accounts[0],\n&gt; eth.accounts\n\n[\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\"]\n&gt; eth.sendTransaction({\n  to: '0x7a7686ad451d2865a2246e239b674aefd4c6c27c',\n  from: eth.accounts[0],\n  value: 100\n});\n\"0xb579cc595601e4aca546ce4e46bdcded7841bd7f50a0a78c505e839dd039b8b9\"\n&gt; eth.sendTransaction({\n  to: '0x7a7686ad451d2865a2246e239b674aefd4c6c27c',\n  from: eth.accounts[0],\n&gt; eth.sendTransaction({\n  to: '0x7a7686ad451d2865a2246e239b674aefd4c6c27c',\n  from: eth.accounts[0],\n&gt; eth.getBalance(eth.accounts[1])\n0\nNo console do clef é possível autorizar e ver a transação assinada com hash: 0xb579cc595601e4aca546ce4e46bdcded7841bd7f50a0a78c505e839dd039b8b9 que é o mesmo id devolvido no console JavaScript.\n-------- List Account request--------------\nA request has been made to list all accounts. \nYou can select which accounts the caller can see\n  [x] 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n    URL: keystore:///home/rag/.etherprivate-ethash/keystore/UTC--2023-04-17T12-22-11.261468773Z--2db017e44b03b37755a4b15e14cd799f83de4c13\n  [x] 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\n    URL: keystore:///home/rag/.etherprivate-ethash/keystore/UTC--2023-04-17T12-28-54.934614755Z--7a7686ad451d2865a2246e239b674aefd4c6c27c\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n-------- List Account request--------------\nA request has been made to list all accounts. \nYou can select which accounts the caller can see\n  [x] 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n    URL: keystore:///home/rag/.etherprivate-ethash/keystore/UTC--2023-04-17T12-22-11.261468773Z--2db017e44b03b37755a4b15e14cd799f83de4c13\n  [x] 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\n    URL: keystore:///home/rag/.etherprivate-ethash/keystore/UTC--2023-04-17T12-28-54.934614755Z--7a7686ad451d2865a2246e239b674aefd4c6c27c\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n--------- Transaction request-------------\nto:    0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\nfrom:               0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 [chksum ok]\nvalue:              100 wei\ngas:                0x5208 (21000)\ngasprice: 1000000000 wei\nnonce:    0x0 (0)\nchainid:  0x312\n\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\n-------------------------------------------\nApprove? [y/N]:\n&gt; y\n\\#\\# Account password\n\nPlease enter the password for account 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n&gt; \n-----------------------\nTransaction signed:\n {\n    \"type\": \"0x0\",\n    \"nonce\": \"0x0\",\n    \"gasPrice\": \"0x3b9aca00\",\n    \"maxPriorityFeePerGas\": null,\n    \"maxFeePerGas\": null,\n    \"gas\": \"0x5208\",\n    \"value\": \"0x64\",\n    \"input\": \"0x\",\n    \"v\": \"0x648\",\n    \"r\": \"0xe497ab329bf31af61f371e2eb251ca979ec8ba45e099318d44468e8703358418\",\n    \"s\": \"0x518b4e7e5906e4abc86e486523a8ad290727529f240a201905acc84c5f95417f\",\n    \"to\": \"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\",\n    \"hash\": \"0xb579cc595601e4aca546ce4e46bdcded7841bd7f50a0a78c505e839dd039b8b9\"\n  }\nNo console JavaScript é possível recuperar o recibo da transação:\neth.getTransactionReceipt(\"0xb579cc595601e4aca546ce4e46bdcded7841bd7f50a0a78c505e839dd039b8b9\")\n{\n  blockHash: \"0x6756c8d89be5a01ff3d300eab5c50add20a2bca691221c4690fc663336ef2cf8\",\n  blockNumber: 868,\n  contractAddress: null,\n  cumulativeGasUsed: 21000,\n  effectiveGasPrice: 1000000000,\n  from: \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\",\n  gasUsed: 21000,\n  logs: [],\n  logsBloom: \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n  root: \"0x9d1d510b5517e7c772e36c67e99d47de6d10c25ba9d24311d39eb85b7db6c071\",\n  to: \"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\",\n  transactionHash: \"0xb579cc595601e4aca546ce4e46bdcded7841bd7f50a0a78c505e839dd039b8b9\",\n  transactionIndex: 0,\n  type: \"0x0\"\n}\n\nÉ preciso minerar para a transação ser efetivada:\n&gt; miner.start()\nnull\n&gt; eth.getBalance(eth.accounts[1])\n100\n&gt; miner.stop()\nnull\nAo enviar outra quantida para a segunda conta é preciso autorizar a transação no console do clef e minerar novamente para ela ser efetivada.\n\n&gt; eth.sendTransaction({from: \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", to: \"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\", value: 100})\n\"0xa4cdfb3d4f5fcd98db211bab41eb15b2eace3cd938250faec9d2c4feac242980\"\n&gt; eth.getBalance(eth.accounts[1])\n\n100\n&gt; miner.start()\nnull\n&gt; eth.getBalance(eth.accounts[1])\n200\n&gt; miner.stop()\nConsole do clefpara a segunda transação:\n-------- List Account request--------------\nA request has been made to list all accounts. \nYou can select which accounts the caller can see\n  [x] 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n    URL: keystore:///home/rag/.etherprivate-ethash/keystore/UTC--2023-04-17T12-22-11.261468773Z--2db017e44b03b37755a4b15e14cd799f83de4c13\n  [x] 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\n    URL: keystore:///home/rag/.etherprivate-ethash/keystore/UTC--2023-04-17T12-28-54.934614755Z--7a7686ad451d2865a2246e239b674aefd4c6c27c\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n-------- List Account request--------------\nA request has been made to list all accounts. \nYou can select which accounts the caller can see\n  [x] 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n    URL: keystore:///home/rag/.etherprivate-ethash/keystore/UTC--2023-04-17T12-22-11.261468773Z--2db017e44b03b37755a4b15e14cd799f83de4c13\n  [x] 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\n    URL: keystore:///home/rag/.etherprivate-ethash/keystore/UTC--2023-04-17T12-28-54.934614755Z--7a7686ad451d2865a2246e239b674aefd4c6c27c\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n--------- Transaction request-------------\nto:    0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\nfrom:               0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 [chksum ok]\nvalue:              100 wei\ngas:                0x5208 (21000)\ngasprice: 1000000000 wei\nnonce:    0x1 (1)\nchainid:  0x312\n\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\n-------------------------------------------\nApprove? [y/N]:\n&gt; y\n\\#\\# Account password\n\nPlease enter the password for account 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n&gt; \n-----------------------\nTransaction signed:\n {\n    \"type\": \"0x0\",\n    \"nonce\": \"0x1\",\n    \"gasPrice\": \"0x3b9aca00\",\n    \"maxPriorityFeePerGas\": null,\n    \"maxFeePerGas\": null,\n    \"gas\": \"0x5208\",\n    \"value\": \"0x64\",\n    \"input\": \"0x\",\n    \"v\": \"0x647\",\n    \"r\": \"0x33d621389272cdbee73d2c50d91b846b325bb2d7b94f2c32d726c6fa21151f9a\",\n    \"s\": \"0x5510f0a5611c8c7640904b5a489422352fae1517eb7307bb6496468cff545726\",\n    \"to\": \"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\",\n    \"hash\": \"0xa4cdfb3d4f5fcd98db211bab41eb15b2eace3cd938250faec9d2c4feac242980\"\n  }\n-------- List Account request--------------\nA request has been made to list all accounts. \nYou can select which accounts the caller can see\n  [x] 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n    URL: keystore:///home/rag/.etherprivate-ethash/keystore/UTC--2023-04-17T12-22-11.261468773Z--2db017e44b03b37755a4b15e14cd799f83de4c13\n  [x] 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\n    URL: keystore:///home/rag/.etherprivate-ethash/keystore/UTC--2023-04-17T12-28-54.934614755Z--7a7686ad451d2865a2246e239b674aefd4c6c27c\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n-------- List Account request--------------\nA request has been made to list all accounts. \nYou can select which accounts the caller can see\n  [x] 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n    URL: keystore:///home/rag/.etherprivate-ethash/keystore/UTC--2023-04-17T12-22-11.261468773Z--2db017e44b03b37755a4b15e14cd799f83de4c13\n  [x] 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\n    URL: keystore:///home/rag/.etherprivate-ethash/keystore/UTC--2023-04-17T12-28-54.934614755Z--7a7686ad451d2865a2246e239b674aefd4c6c27c\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\nA transação 0xa4cdfb3d4f5fcd98db211bab41eb15b2eace3cd938250faec9d2c4feac242980 foi autorizada e podemos verificar o saldo das carteiras:\n&gt; eth.getTransactionReceipt(\"0xa4cdfb3d4f5fcd98db211bab41eb15b2eace3cd938250faec9d2c4feac242980\")\n{\n  blockHash: \"0x89dd3dd5175ca3d85549aeb8387be343ef1cecfd2a96134148f39618c4b587fd\",\n  blockNumber: 1021,\n  contractAddress: null,\n  cumulativeGasUsed: 21000,\n  effectiveGasPrice: 1000000000,\n  from: \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\",\n  gasUsed: 21000,\n  logs: [],\n  logsBloom: \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n  root: \"0xfbaf589acffe7f4f701301e31e7549e99e102bfd36145c7f55a38800e3714194\",\n  to: \"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\",\n  transactionHash: \"0xa4cdfb3d4f5fcd98db211bab41eb15b2eace3cd938250faec9d2c4feac242980\",\n  transactionIndex: 0,\n  type: \"0x0\"\n}\n&gt; web3.fromWei(eth.getBalance(\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\"), \"ether\")\n5484.9999999999999998\n&gt; web3.fromWei(eth.getBalance(\"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\"), \"ether\")\n2e-16\n&gt; \nMais detalhes de como implantar uma rede privada local do Ethereum podem ser visto em Private Networks.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Ethash`</span>"
    ]
  },
  {
    "objectID": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#comandos-finais",
    "href": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#comandos-finais",
    "title": "5  Prática: Criando uma Rede Ethereum Privada: Ethash",
    "section": "5.10 Comandos Finais",
    "text": "5.10 Comandos Finais\nA Figura 9.I apresenta os comandos para cada um dos terminais.\n\n\n\n\n\n\n\nFigure 5.I- Terminais\n\n\n\n\nO comando para o terminal do clef:\n[clef]$ /home/rag/go-ethereum-1.11.6/build/bin/clef --chainid 786 --keystore ~/.etherprivate-ethash/keystore --configdir ~/.etherprivate-ethash/clef --http\nO comando para o terminal do Geth:\n[.etherprivate-ethash]$ /home/rag/go-ethereum-1.11.6/build/bin/geth --networkid 786 --datadir ~/.etherprivate-ethash/ --syncmode full --allow-insecure-unlock  --identity \"RAGEtherPrivate\"  --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin,debug\" --keystore ~/.etherprivate-ethash/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.etherprivate-ethash/geth/jwtsecret --nodiscover --maxpeers 15 --miner.etherbase=0x2db017e44b03b37755a4b15e14cd799f83de4c13 --signer=/home/rag/.etherprivate-ethash/clef/clef.ipc\nO comando para o terminal do prysm: Não precisa!\nO comando para o console do JavaScript:\n[.etherprivate-ethash]$ /home/rag/go-ethereum-1.11.6/build/bin/geth attach ~/.etherprivate-ethash/geth.ipc \nWelcome to the Geth JavaScript console!\n\ninstance: Geth/RAGEtherPrivate/v1.11.6-stable-ea9e62ca/linux-amd64/go1.21.0\ncoinbase: 0x2db017e44b03b37755a4b15e14cd799f83de4c13\nat block: 1476 (Tue Sep 12 2023 17:04:22 GMT-0300 (-03))\n datadir: /home/rag/.etherprivate-ethash\n modules: admin:1.0 debug:1.0 engine:1.0 eth:1.0 ethash:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt;",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Ethash`</span>"
    ]
  },
  {
    "objectID": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#leitura-recomendada",
    "href": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#leitura-recomendada",
    "title": "5  Prática: Criando uma Rede Ethereum Privada: Ethash",
    "section": "5.11 Leitura Recomendada",
    "text": "5.11 Leitura Recomendada\n\n\n\n\n\n\nLeitura Recomendada\n\n\n\nCapítulo 11: Ethereum 101\nLivro: IMRAN BASHIR. Mastering Blockchain : Distributed Ledger Technology, Decentralization, and Smart Contracts Explained, 2nd Edition.\n\n\n\n\n\n\n\n\nLeitura Recomendada\n\n\n\nCapítulo 12: Futher Ethereum\nLivro: IMRAN BASHIR. Mastering Blockchain : Distributed Ledger Technology, Decentralization, and Smart Contracts Explained, 2nd Edition.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Ethash`</span>"
    ]
  },
  {
    "objectID": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#referências-1",
    "href": "aula-05-pratica-rede-ethereum-privada-ethash/aula-05-pratica-rede-ethereum-privada-ethash.html#referências-1",
    "title": "5  Prática: Criando uma Rede Ethereum Privada: Ethash",
    "section": "7.1 Referências",
    "text": "7.1 Referências",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Ethash`</span>"
    ]
  },
  {
    "objectID": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html",
    "href": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html",
    "title": "6  Prática: Criando uma Rede Ethereum Privada: Clique",
    "section": "",
    "text": "6.1 Introdução\nPodemos criar uma rede privada local utilizando o algoritmo de consenso clique que é do tipo Proof-of-Authority (PoA).\nProof-of-Authority é uma versão modificado do Proof-of-Stake (PoS) que é um algoritmo de consenso baseado em reputação em vez de um mecanismo baseado em aposta do PoS. O termo foi introduzido em 2017 por Gavin Wood, e este algoritmo de consenso tem sido usado em redes privadas, testnets e redes de desenvolvimento locais, pois supera a necessidade de recursos de alta qualidade como o PoW e resolve os problemas de escalabilidade com o PoS ao ter um pequeno subconjunto de nós armazenando o blockchain e produzindo blocos.\nA Proof-of-Authority requer a confiança em um conjunto de assinantes autorizados definidos. Na maioria das implementações atuais, todos os assinantes autorizados mantêm poderes e privilégios iguais ao determinar o consenso da cadeia. A ideia por trás do staking de reputação é que todo validador autorizado seja bem conhecido de todos por meio de coisas como conheça seu cliente (KYC) ou por ter uma organização bem conhecida como o único validador - dessa forma, se um validador fizer algo errado, sua identidade será conhecida.\nA rede Ethereum iniciou usando um mecanismo de consenso que envolve Proof-of-work (PoW). Entretanto, Ethereum depreciou o uso de Proof-of-Work em \\(2022\\) e iniciou o uso de Proof-of-Stake. Leia mais em Proof-of-Stake e staking.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Clique`</span>"
    ]
  },
  {
    "objectID": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#ferramentas-e-versões",
    "href": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#ferramentas-e-versões",
    "title": "6  Prática: Criando uma Rede Ethereum Privada: Clique",
    "section": "6.2 Ferramentas e Versões",
    "text": "6.2 Ferramentas e Versões\nPara utilizarmos o algoritmo de consenso Proof-of-Authority (PoA), o clique. Para isso é necessário instalarmos o geth na versão 1.12.2, pois desde a versão v1.14 o clique foi depreciado. No link https://github.com/ethereum/go-ethereum/releases temos todas as versões, a versão Mawinor (v1.12.2).\nAntes de baixarmos os fontes do geth da versão 1.12 precisaremos instalar o go. Para compilar os fontes do geth é necessário ter o go versão 1.21.1 instalado. Pode ser instalado o pacote do sistema (golang-go no Ubuntu ou go no Manjaro) ou baixando os binários de golang, go versão 1.21.1.\nSe a versão do sistema não for a 1.21.*:\n$ go version\ngo version go1.21.0 linux/amd64\n$ \nSerá necessário baixar e instalar a partir dos binários:\n\nRemova a instalação prévia do Go deletando o diretório /usr/local/go1.21.1, se existir, então extraia o arquivo baixado dentro do diretório /usr/local, criando uma subárvore em /usr/local/go1.21.1 ou caso não tenha permissão, crie dentro da pasta home do seu usuário:\n\n$ cd /usr/local\n$ wget https://go.dev/dl/go1.21.1.linux-amd64.tar.gz\n$ rm -rf /usr/local/go1.21.1 && tar -C /usr/local -xzf go1.21.1.linux-amd64.tar.gz && mv go go1.21.1\n$ ln -s go1.21.1 go\n​(Você pode precisar executar o comando como root ou usando o sudo).\n​Não descompactar o arquivo dentro de uma subárvore /usr/local/go existente. Isso pode produzir instalações Go quebradas.\n​2. Adicione /usr/local/go/bin para a variável de ambiente PATH. Você pode fazer isso adicionando a linha de comando para o seu $HOME/.profile ou /etc/profile (para uma instalação ampla no sistema):\nexport PATH=/usr/local/go/bin:$PATH\nNota: Mudanças feitas no arquivo de profile podem não ser aplicadas até a próxima vez que você fizer login no computador. Para aplicar as mudanças imediatamente, execute os comandos diretamente em um terminal ou execute eles do profile usando o comando source $HOME/.profile.\n​3. Verifique que a versão correta do Go foi instalada:\n$ go version          \n\nConfirme que o comando imprime a versão do Go instalado.\n\nPara instalarmos o geth a partir do repositório a versão Mawinor (v1.12.2), basta acessarmos o repositório do Github e baixar na pasta do seu usuário:\n$ git clone -b 'v1.12.2' --single-branch --depth 1 https://github.com/ethereum/go-ethereum.git go-ethereum-1.12.2\n\n$ cd go-ethereum-1.12.2\n[go-ethereum-1.12.2]$ make all\nApós a compilação os binários estarão disponíveis no diretório go-ethereum-1.12.2/build/bin:\n[go-ethereum-1.12.2]$ ls build/bin\nabidump  abigen  bootnode  clef  devp2p  ethkey  evm  faucet  geth  p2psim  rlpdump\n[go-ethereum-1.12.2]$\nSendo necessário considerar esse caminho dos binários para acessar os executáveis da versão correta nesta prática: $HOME/go-ethereum-1.12.2/build/bin.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Clique`</span>"
    ]
  },
  {
    "objectID": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#criando-uma-rede-privada-local",
    "href": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#criando-uma-rede-privada-local",
    "title": "6  Prática: Criando uma Rede Ethereum Privada: Clique",
    "section": "6.3 Criando uma Rede Privada Local",
    "text": "6.3 Criando uma Rede Privada Local\nNa prática Aula 05: Criando uma Rede Ethereum Privada - Ethash criamos uma rede privada que utiliza o algoritmo de consenso ethash.\nNa versão 1.12.2 do geth não suporta algoritmo de consenso ethash, utiliza o clique. Sigamos os passos semelhantes aos da prática anterior para que entendam a diferença.\nPara a criação de uma nova Rede Privada Local é necessário fazermos algumas configuraçãos. Precisamos criar um diretório mkdir ~/.etherprivate-clique para ser a base de armazenamento da nova rede. As configurações iniciais devem ser fornecidas em um genesis file. Então criamos o arquivo privategenesis.json em ~/.etherprivate-clique.\n\n\n\n\n\n\nPassos\n\n\n\n\nCriar um diretório mkdir ~/.etherprivate-clique\nCriar um arquivo privategenesis.json em ~/.etherprivate-clique.\n\n\n\nO conteúdo do arquivo privategenesis.json deve ser o listado no Código 6.I.\n\n\n\nListing 6.I- Genesis File\n\n\n{\n  \"config\": {\n    \"chainId\": 786,\n    \"homesteadBlock\": 0,\n    \"eip150Block\": 0,\n    \"eip155Block\": 0,\n    \"eip158Block\": 0,\n    \"byzantiumBlock\": 0,\n    \"constantinopleBlock\": 0,\n    \"petersburgBlock\": 0,\n    \"istanbulBlock\": 0,\n    \"berlinBlock\": 0,\n    \"ethash\": {}\n  },  \n  \"nonce\": \"0x0000000000000042\",\n  \"timestamp\": \"0x00\",\n  \"parentHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n  \"extraData\": \"0x00\",\n  \"gasLimit\": \"0x8000000\",\n  \"difficulty\": \"0x0400\",\n  \"mixhash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n  \"coinbase\": \"0x3333333333333333333333333333333333333333\",\n  \"alloc\": {}\n}\n\n\n\nUtilizando as configurações fornecidas no Código 6.I a rede será criada sem nenhum usuário, o \"alloc\": {} vazio indica isso. Será possível criar posteriormente conforme descrito na (Seção Section 5.6). \nUma outra forma de estabelecer a configuração inicial da rede com contas com valores alocados, é criando o usuário antes de inicializar a rede com as configurações do Genesis File, conforme o Código 6.II.\n\n\n\nListing 6.II- Criando Usuário para iniciar a rede\n\n\n[~/.etherprivate-clique]$ $HOME/go-ethereum-1.12.2/build/bin/geth --networkid 786 --datadir ~/.etherprivate-clique/ account new\nINFO [09-17|14:57:14.536] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [09-17|14:57:14.537] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nYour new account is locked with a password. Please give a password. Do not forget this password.\nPassword: \nRepeat password: \n\nYour new key was generated\n\nPublic address of the key:   0xBb36F26E6C16B3C7ED3D70bFB26F740336B4F976\nPath of the secret key file: /home/rag/.etherprivate-clique/keystore/UTC--2024-09-17T17-57-24.818641852Z-- bb36f26e6c16b3c7ed3d70bfb26f740336b4f976\n\n- You can share your public address with anyone. Others need it to interact with you.\n- You must NEVER share the secret key with anyone! The key controls access to your funds!\n- You must BACKUP your key file! Without the key, it's impossible to access account funds!\n- You must REMEMBER your password! Without the password, it's impossible to decrypt the key!\n\n[~/.etherprivate-clique]$\n\n\n\nCom um id da conta criada (0xBb36F26E6C16B3C7ED3D70bFB26F740336B4F976) ou com ids de contas existentes (0x2db017e44b03b37755a4b15e14cd799f83de4c13) é possível completarmos algumas informações para inicializar a nova rede. Altere o conteúdo do arquivo privategenesis.json tal como listado no Código 6.III.\n\n\n\nListing 6.III- Genesis File Atualizado\n\n\n{\n  \"config\": {\n    \"chainId\": 786,\n    \"homesteadBlock\": 0,\n    \"eip150Block\": 0,\n    \"eip155Block\": 0,\n    \"eip158Block\": 0,\n    \"byzantiumBlock\": 0,\n    \"constantinopleBlock\": 0,\n    \"petersburgBlock\": 0,\n    \"istanbulBlock\": 0,\n    \"berlinBlock\": 0,\n    \"ethash\": {}\n  },  \n  \"nonce\": \"0x0000000000000042\",\n  \"timestamp\": \"0x00\",\n  \"parentHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n  \"extraData\": \"0x00\",\n  \"gasLimit\": \"0x8000000\",\n  \"difficulty\": \"0x0400\",\n  \"mixhash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n  \"coinbase\": \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\",\n  \"alloc\": {\n    \"2db017e44b03b37755a4b15e14cd799f83de4c13\": { \"balance\": \"300000\" },\n    \"bb36f26e6c16b3c7ed3d70bfb26f740336b4f976\": { \"balance\": \"400000\" }\n  }\n}\n\n\n\nApós a configuração inicial no Genesis File, o geth é utilizado para a criação e inicialização da nova Rede sendo executado com os parâmetros --datadir, indicando o diretório onde os dados da nova rede serão armazenados e com o init indicando o caminho para o Genesis File, conforme Código 5.IV.\n{#@lst-init:etherprivate .bash lst-cap=\"Inicialização da Rede Privada Local\"} [.etherprivate-clique]$ $HOME/go-ethereum-1.12.2/build/bin/geth --networkid 786 --identity \"RAGEtherPrivate\" --datadir ~/.etherprivate-clique init ~/.etherprivate-clique/privategenesis.json INFO [09-17|15:02:06.958] Maximum peer count                       ETH=50 LES=0 total=50 INFO [09-17|15:02:06.959] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\" INFO [09-17|15:02:06.962] Set global gas cap                       cap=50,000,000 INFO [09-17|15:02:06.962] Initializing the KZG library             backend=gokzg INFO [09-17|15:02:06.987] Defaulting to pebble as the backing database  INFO [09-17|15:02:06.987] Allocated cache and file handles         database=/home/rag/.etherprivate-clique/geth/chaindata cache=16.00MiB handles=16 INFO [09-17|15:02:07.010] Opened ancient database                  database=/home/rag/.etherprivate-clique/geth/chaindata/ancient/chain readonly=false INFO [09-17|15:02:07.010] Writing custom genesis block  INFO [09-17|15:02:07.011] Persisted trie from memory database      nodes=1 size=143.00B time=\"700.524us\" gcnodes=0 gcsize=0.00B gctime=0s livenodes=0 livesize=0.00B INFO [09-17|15:02:07.019] Successfully wrote genesis state         database=chaindata hash=c4bd3f..d74cb0 INFO [09-17|15:02:07.019] Defaulting to pebble as the backing database  INFO [09-17|15:02:07.019] Allocated cache and file handles         database=/home/rag/.etherprivate-clique/geth/lightchaindata cache=16.00MiB handles=16 INFO [09-17|15:02:07.032] Opened ancient database                  database=/home/rag/.etherprivate-clique/geth/lightchaindata/ancient/chain readonly=false INFO [09-17|15:02:07.032] Writing custom genesis block  INFO [09-17|15:02:07.032] Persisted trie from memory database      nodes=1 size=143.00B time=\"668.676us\" gcnodes=0 gcsize=0.00B gctime=0s livenodes=0 livesize=0.00B INFO [09-17|15:02:07.041] Successfully wrote genesis state         database=lightchaindata hash=c4bd3f..d74cb0 [.etherprivate-clique]$ ls geth  keystore  privategenesis.json [.etherprivate-clique]$\nAo tentar executar o geth na versão 1.12.2 com o algoritmo de consenso ethash conforme o Código 6.IV, ocorre uma mensagem de erro.\n\n\n\nListing 6.IV- Execução da Rede Privada Local\n\n\n[.etherprivate-clique]$ $HOME/go-ethereum-1.12.2/build/bin/geth --networkid 786 --identity \"RAGEtherPrivate\" --datadir ~/.etherprivate-clique\n[.etherprivate-clique]$ $HOME/go-ethereum-1.12.2/build/bin/geth --networkid 786 --identity \"RAGEtherPrivate\" --datadir ~/.etherprivate-clique\nINFO [09-17|15:07:36.179] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [09-17|15:07:36.180] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [09-17|15:07:36.182] Set global gas cap                       cap=50,000,000\nINFO [09-17|15:07:36.182] Initializing the KZG library             backend=gokzg\nINFO [09-17|15:07:36.212] Allocated trie memory caches             clean=154.00MiB dirty=256.00MiB\nINFO [09-17|15:07:36.212] Using pebble as the backing database \nINFO [09-17|15:07:36.212] Allocated cache and file handles         database=/home/rag/.etherprivate-clique/geth/chaindata cache=512.00MiB handles=262,144\nINFO [09-17|15:07:36.229] Opened ancient database                  database=/home/rag/.etherprivate-clique/geth/chaindata/ancient/chain readonly=false\nFatal: Failed to register the Ethereum service: ethash is only supported as a historical component of already merged networks\n[.etherprivate-clique]$\n\n\n\nNo terminal de execução do geth aparece o erro:\nFatal: Failed to register the Ethereum service: ethash is only supported as a historical component of already merged networks\nA mensagem de erro é sobre o encerramento do suporte ao algoritmo de consenso ethash que é da categoria Proof-of-Work. Procurando pela mensagem de erro encontramos uma resposta no link.\n\nEthash was the proof of work mining algorithm which seems to be turned off in the latest version. Try the 2nd latest release (Geth 1.12.2) and it should work.\n\n\nfrom https://github.com/ethereum/go-ethereum/releases/tag/v1.12.0 :\n\n\nThe v1.12 release family drops support for proof-of-work, and thus can not be used any more on PoW-based private chains, or as an upstream library for projects depending on ethash PoW (#27178, #27147).\n\n\nmore info: https://ethereum.org/en/developers/docs/consensus-mechanisms/pow/mining-algorithms/ethash/\n\nO link https://ethereum.org/en/developers/docs/consensus-mechanisms/pow/mining-algorithms/ethash/\nPara criar uma rede privada que utilize o algoritmo de consenso clique será necessário que tenhamos duas contas pelo menos. Podemos aproveitar contas existentes que foram criadas no Código 6.II ou que podem ser recuperadas do diretório keystore de alguma prática anterior ou podemos criar duas contas com o comando:\n[.etherprivate-clique]$ $HOME/go-ethereum-1.12.2/build/bin/geth --datadir ~/.etherprivate-clique account new\nAnote os ids das contas no momento da criação ou verifique quais contas estão disponíveis no diretório keystore:\n[.etherprivate-clique]$ ls keystore/\nUTC--2023-04-17T12-22-11.261468773Z--2db017e44b03b37755a4b15e14cd799f83de4c13\nUTC--2024-09-17T17-57-24.818641852Z--bb36f26e6c16b3c7ed3d70bfb26f740336b4f976\nUTC--2024-09-17T18-52-55.377570375Z--67a3a0eace0bb180b94948ae02b09b7f8948ca60\nIremos recriar o arquivo privategenesis.json com informações para o clique. Irei utilizar as contas 2db017e44b03b37755a4b15e14cd799f83de4c13 e bb36f26e6c16b3c7ed3d70bfb26f740336b4f976 na configuração de assinadores (signers) e serão contas que serão inicializadas com saldos. O Código 6.V apresenta o conteúdo atualizado.\n\n\n\nListing 6.V- Genesis File para Clique\n\n\n{\n  \"config\": {\n    \"chainId\": 786,\n    \"homesteadBlock\": 0,\n    \"eip150Block\": 0,\n    \"eip155Block\": 0,\n    \"eip158Block\": 0,\n    \"byzantiumBlock\": 0,\n    \"constantinopleBlock\": 0,\n    \"petersburgBlock\": 0,\n    \"istanbulBlock\": 0,\n    \"berlinBlock\": 0,\n    \"clique\": {\n      \"period\": 5,\n      \"epoch\": 30000\n    }\n  },\n  \"difficulty\": \"1\",\n  \"gasLimit\": \"8000000\",\n  \"extraData\": \"0x00000000000000000000000000000000000000000000000000000000000000002db017e44b03b37755a4b15e14cd799f83de4c13bb36f26e6c16b3c7ed3d70bfb26f740336b4f9760000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n  \"alloc\": {\n    \"2db017e44b03b37755a4b15e14cd799f83de4c13\": { \"balance\": \"300000\" },\n    \"bb36f26e6c16b3c7ed3d70bfb26f740336b4f976\": { \"balance\": \"400000\" }\n  }\n}\n\n\n\nNo campo extraData temos que colocar os ids dos validadores/assinadores concatenados. Estou colocando os hashes das duas contas que criei primeiro. A codificação dos endereços dos signers no extradata é feita pela concatenação de \\(32\\) zero bytes (32 x 00), seguidos de todos os endereços dos assinadores (40 caracteres) e mais \\(65\\) zero bytes (65 x 00). Totalizando uma cadeia hexadecimal de 64 + 40 + 40 + … + 40 + 130. O resultado dessa concatenação é então usado como valor para o campo extradata no genesis file.\n0x0000000000000000000000000000000000000000000000000000000000000000&lt;hash conta 1&gt;&lt;hash conta 2&gt;0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\nPor exemplo, foram criadas as duas contas: 2db017e44b03b37755a4b15e14cd799f83de4c13 e bb36f26e6c16b3c7ed3d70bfb26f740336b4f976. A composição do valor do extradata será:\n0x00000000000000000000000000000000000000000000000000000000000000002db017e44b03b37755a4b15e14cd799f83de4c13bb36f26e6c16b3c7ed3d70bfb26f740336b4f9760000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\nNa prática, substitua no conteúdo do arquivo privategenesis.json, no campo extradata a cadeia 2db017e44b03b37755a4b15e14cd799f83de4c13bb36f26e6c16b3c7ed3d70bfb26f740336b4f976 pela cadeia formada pela concatenação dos hashes das contas que você quer como validadores.\nNo campo alloc coloque os hashes das contas e valores iniciais de saldo (balance) para cada conta.\nApague os dados da rede que iniciamos anteriormente, os dados estão no direório .etherprivate-clique/geth.\n[.etherprivate-clique]$ rm geth -rf\n[.etherprivate-clique]$ ls\nkeystore  privategenesis.json\nRecrie a rede a partir do privategenesis.json alterado:\n[.etherprivate-clique]$ $HOME/go-ethereum-1.12.2/build/bin/geth --networkid 786 --identity \"RAGEtherPrivate\" --datadir ~/.etherprivate-clique init ~/.etherprivate-clique/privategenesis.json\nINFO [09-17|15:20:51.763] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [09-17|15:20:51.766] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [09-17|15:20:51.770] Set global gas cap                       cap=50,000,000\nINFO [09-17|15:20:51.770] Initializing the KZG library             backend=gokzg\nINFO [09-17|15:20:51.802] Defaulting to pebble as the backing database \nINFO [09-17|15:20:51.802] Allocated cache and file handles         database=/home/rag/.etherprivate-clique/geth/chaindata cache=16.00MiB handles=16\nINFO [09-17|15:20:51.825] Opened ancient database                  database=/home/rag/.etherprivate-clique/geth/chaindata/ancient/chain readonly=false\nINFO [09-17|15:20:51.825] Writing custom genesis block \nINFO [09-17|15:20:51.826] Persisted trie from memory database      nodes=3 size=399.00B time=\"708.278us\" gcnodes=0 gcsize=0.00B gctime=0s livenodes=0 livesize=0.00B\nINFO [09-17|15:20:51.834] Successfully wrote genesis state         database=chaindata hash=72f12c..ac1a0d\nINFO [09-17|15:20:51.834] Defaulting to pebble as the backing database \nINFO [09-17|15:20:51.834] Allocated cache and file handles         database=/home/rag/.etherprivate-clique/geth/lightchaindata cache=16.00MiB handles=16\nINFO [09-17|15:20:51.846] Opened ancient database                  database=/home/rag/.etherprivate-clique/geth/lightchaindata/ancient/chain readonly=false\nINFO [09-17|15:20:51.846] Writing custom genesis block \nINFO [09-17|15:20:51.847] Persisted trie from memory database      nodes=3 size=399.00B time=\"780.216us\" gcnodes=0 gcsize=0.00B gctime=0s livenodes=0 livesize=0.00B\nINFO [09-17|15:20:51.856] Successfully wrote genesis state         database=lightchaindata hash=72f12c..ac1a0d\n[.etherprivate-clique]$",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Clique`</span>"
    ]
  },
  {
    "objectID": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#executando-a-nova-rede",
    "href": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#executando-a-nova-rede",
    "title": "6  Prática: Criando uma Rede Ethereum Privada: Clique",
    "section": "6.4 Executando a nova Rede",
    "text": "6.4 Executando a nova Rede\nO cliente geth pode ser iniciado, executando com base na nova rede criada, tenha certeza que está utilizando os dados do diretório .etherprivate-clique.\n[.etherprivate-clique]$ $HOME/go-ethereum-1.12.2/build/bin/geth --networkid 786 --identity \"RAGEtherPrivate\" --datadir ~/.etherprivate-clique --syncmode full --allow-insecure-unlock --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin,debug\" --keystore ~/.etherprivate-clique/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.etherprivate-clique/geth/jwtsecret --nodiscover --maxpeers 15\nINFO [09-17|15:37:51.243] Maximum peer count                       ETH=15 LES=0 total=15\nINFO [09-17|15:37:51.244] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [09-17|15:37:51.246] Set global gas cap                       cap=50,000,000\nINFO [09-17|15:37:51.246] Initializing the KZG library             backend=gokzg\nINFO [09-17|15:37:51.285] Allocated trie memory caches             clean=154.00MiB dirty=256.00MiB\nINFO [09-17|15:37:51.286] Using pebble as the backing database \nINFO [09-17|15:37:51.286] Allocated cache and file handles         database=/home/rag/.etherprivate-clique/geth/chaindata cache=512.00MiB handles=262,144\nINFO [09-17|15:37:51.300] Opened ancient database                  database=/home/rag/.etherprivate-clique/geth/chaindata/ancient/chain readonly=false\nINFO [09-17|15:37:51.300] Initialising Ethereum protocol           network=786 dbversion=8\nINFO [09-17|15:37:51.301]  \nINFO [09-17|15:37:51.301] --------------------------------------------------------------------------------------------------------------------------------------------------------- \nINFO [09-17|15:37:51.301] Chain ID:  786 (unknown) \nINFO [09-17|15:37:51.301] Consensus: Clique (proof-of-authority) \nINFO [09-17|15:37:51.301]  \nINFO [09-17|15:37:51.301] Pre-Merge hard forks (block based): \nINFO [09-17|15:37:51.301]  - Homestead:                   #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/homestead.md) \nINFO [09-17|15:37:51.301]  - Tangerine Whistle (EIP 150): #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/tangerine-whistle.md) \nINFO [09-17|15:37:51.301]  - Spurious Dragon/1 (EIP 155): #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/spurious-dragon.md) \nINFO [09-17|15:37:51.301]  - Spurious Dragon/2 (EIP 158): #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/spurious-dragon.md) \nINFO [09-17|15:37:51.301]  - Byzantium:                   #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/byzantium.md) \nINFO [09-17|15:37:51.301]  - Constantinople:              #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/constantinople.md) \nINFO [09-17|15:37:51.301]  - Petersburg:                  #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/petersburg.md) \nINFO [09-17|15:37:51.301]  - Istanbul:                    #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/istanbul.md) \nINFO [09-17|15:37:51.301]  - Berlin:                      #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/berlin.md) \nINFO [09-17|15:37:51.301]  - London:                      #&lt;nil&gt; (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/london.md) \nINFO [09-17|15:37:51.301]  \nINFO [09-17|15:37:51.301] The Merge is not yet available for this network! \nINFO [09-17|15:37:51.301]  - Hard-fork specification: https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/paris.md \nINFO [09-17|15:37:51.301]  \nINFO [09-17|15:37:51.301] Post-Merge hard forks (timestamp based): \nINFO [09-17|15:37:51.301]  \nINFO [09-17|15:37:51.301] --------------------------------------------------------------------------------------------------------------------------------------------------------- \nINFO [09-17|15:37:51.301]  \nINFO [09-17|15:37:51.301] Loaded most recent local block           number=0 hash=72f12c..ac1a0d td=1 age=55y6mo3d\nINFO [09-17|15:37:51.301] Loaded local transaction journal         transactions=0 dropped=0\nINFO [09-17|15:37:51.301] Regenerated local transaction journal    transactions=0 accounts=0\nINFO [09-17|15:37:51.309] Gasprice oracle is ignoring threshold set threshold=2\nWARN [09-17|15:37:51.312] Engine API enabled                       protocol=eth\nWARN [09-17|15:37:51.312] Engine API started but chain not configured for merge yet \nINFO [09-17|15:37:51.312] Starting peer-to-peer node               instance=Geth/RAGEtherPrivate/v1.12.2-stable-bed84606/linux-amd64/go1.21.1\nINFO [09-17|15:37:51.321] IPC endpoint opened                      url=/home/rag/.etherprivate-clique/geth.ipc\nINFO [09-17|15:37:51.321] New local node record                    seq=1,726,597,460,539 id=3f75d3400f44179e ip=127.0.0.1 udp=0 tcp=30303\nINFO [09-17|15:37:51.321] Started P2P networking                   self=\"enode://781f3633c94cb09dd45b2db4b4ba5e44e568dc34e64c2edfc3eed9504909656cca90fe 85b8f11f5b1d5df0328bbe4b0243821fc0ef765801c13657131a860bd0@127.0.0.1:30303?discport=0\"\nINFO [09-17|15:37:51.321] Loaded JWT secret file                   path=/home/rag/.etherprivate-clique/geth/jwtsecret crc32=0x67433537\nINFO [09-17|15:37:51.321] HTTP server started                      endpoint=127.0.0.1:8559 auth=false prefix= cors= vhosts=localhost\nINFO [09-17|15:37:51.323] WebSocket enabled                        url=ws://127.0.0.1:8551\nINFO [09-17|15:37:51.323] HTTP server started                      endpoint=127.0.0.1:8551 auth=true  prefix= cors=localhost vhosts=localhost\nWARN [09-17|15:37:58.696] Served eth_coinbase                      reqid=3 duration=\"78.644us\" err=\"etherbase must be explicitly specified\"\nNo terminal onde o cliente de execução apareceu um novo warning: \"WARN [09-17|15:37:58.696] Served eth_coinbase reqid=3 duration=\"78.644us\" err=\"etherbase must be explicitly specified\". Basta fornecer a conta principal no parâmetro etherbase=0x2db017e44b03b37755a4b15e14cd799f83de4c13.\n[.etherprivate-clique]$ $HOME/go-ethereum-1.12.2/build/bin/geth --networkid 786 --identity \"RAGEtherPrivate\" --datadir ~/.etherprivate-clique --syncmode full --allow-insecure-unlock --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin,debug\" --keystore ~/.etherprivate-clique/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.etherprivate-clique/geth/jwtsecret --nodiscover --maxpeers 15 --miner.etherbase=0x2db017e44b03b37755a4b15e14cd799f83de4c13",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Clique`</span>"
    ]
  },
  {
    "objectID": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#interagindo-com-a-nova-rede",
    "href": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#interagindo-com-a-nova-rede",
    "title": "6  Prática: Criando uma Rede Ethereum Privada: Clique",
    "section": "6.5 Interagindo com a Nova Rede",
    "text": "6.5 Interagindo com a Nova Rede\nO console pode ser utilizado na interação com a instância da nova rede em execução.\n[.etherprivate-clique]$ $HOME/go-ethereum-1.12.2/build/bin/geth attach ~/.etherprivate-clique/geth.ipc\nWelcome to the Geth JavaScript console!\n\ninstance: Geth/RAGEtherPrivate/v1.12.2-stable-bed84606/linux-amd64/go1.21.1\nat block: 0 (Wed Dec 31 1969 21:00:00 GMT-0300 (-03))\n datadir: /home/rag/.etherprivate-clique\n modules: admin:1.0 clique:1.0 debug:1.0 engine:1.0 eth:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt; eth.accounts\n[\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\"]\n&gt; eth.getBalance(\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\")\n300000\n&gt; eth.getBalance(\"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\")\n400000\n&gt;",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Clique`</span>"
    ]
  },
  {
    "objectID": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#verificando-quem-são-os-signers",
    "href": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#verificando-quem-são-os-signers",
    "title": "6  Prática: Criando uma Rede Ethereum Privada: Clique",
    "section": "6.6 Verificando quem são os Signers",
    "text": "6.6 Verificando quem são os Signers\nConfiguramos as duas contas como signers, para conferir se deu tudo certo na configuração, em um console JavaScript, utilize o a função clique.getSigners() que listará as contas configuradas como assinadores.\n [rogerio@ryzen-nitro .etherprivate-clique]$ ~/go-ethereum-1.12.2/build/bin/geth attach /home/rag/.etherprivate-clique/geth.ipc\nWelcome to the Geth JavaScript console!\n\ninstance: Geth/RAGEtherPrivate/v1.12.2-stable-bed84606/linux-amd64/go1.21.1\ncoinbase: 0x2db017e44b03b37755a4b15e14cd799f83de4c13\nat block: 0 (Wed Dec 31 1969 21:00:00 GMT-0300 (-03))\n datadir: /home/rag/.etherprivate-clique\n modules: admin:1.0 clique:1.0 debug:1.0 engine:1.0 eth:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt; clique.getSigners()\n[\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\"]\n&gt;",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Clique`</span>"
    ]
  },
  {
    "objectID": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#sec:criando:contas",
    "href": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#sec:criando:contas",
    "title": "6  Prática: Criando uma Rede Ethereum Privada: Clique",
    "section": "6.7 Criando contas na Nova Rede",
    "text": "6.7 Criando contas na Nova Rede\nO objetivo é termos pelo menos duas contas para testes na nova rede. Caso já não tenha duas contas de práticas anteriores é recomendado utilizar o clef com o parâmetro newaccount. É importante indicar o diretório keystore do .etherprivate-clique. Utilizaremos para fins de teste a senha “admin12345”.\nSe seguimos a opção de criar uma conta antes para configurar o genesis file nossa base já terá uma conta. Essa conta pode ser verificada utilizando o $HOME/go-ethereum-1.12.2/build/bin/geth --networkid 786 --datadir ~/.etherprivate-clique/ account list ou o comando do clef.\n[.etherprivate-clique]$ $HOME/go-ethereum-1.12.2/build/bin/geth --networkid 786 --datadir ~/.etherprivate-clique/ account list\nINFO [09-17|15:49:53.739] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [09-17|15:49:53.740] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nAccount #0: {2db017e44b03b37755a4b15e14cd799f83de4c13} keystore:///home/rag/.etherprivate-clique/keystore/UTC--2023-04-17T12-22-11.261468 773Z--2db017e44b03b37755a4b15e14cd799f83de4c13\nAccount #1: {bb36f26e6c16b3c7ed3d70bfb26f740336b4f976} keystore:///home/rag/.etherprivate-clique/keystore/UTC--2024-09-17T17-57-24.818641 852Z--bb36f26e6c16b3c7ed3d70bfb26f740336b4f976\n[.etherprivate-clique]$\nComo o clef:\n$ [.etherprivate-clique]$ $HOME/go-ethereum-1.12.2/build/bin/clef list-accounts --keystore ~/.etherprivate-clique/keystore\n\nWARNING!\n\nClef is an account management tool. It may, like any software, contain bugs.\n\nPlease take care to\n- backup your keystore files,\n- verify that the keystore(s) can be opened with your password.\n\nClef is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\nwithout even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\nPURPOSE. See the GNU General Public License for more details.\n\nEnter 'ok' to proceed:\n&gt; ok\n\n0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 (keystore:///home/rag/.etherprivate-clique/keystore/UTC--2023-04-17T12-22-11. 261468773Z--2db017e44b03b37755a4b15e14cd799f83de4c13)\n0xBb36F26E6C16B3C7ED3D70bFB26F740336B4F976 (keystore:///home/rag/.etherprivate-clique/keystore/UTC--2024-09-17T17-57-24. 818641852Z--bb36f26e6c16b3c7ed3d70bfb26f740336b4f976)\n[.etherprivate-clique]$\nA conta 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 que foi gerada anteriormente, utilizei a senha admin12345. Vamos criar mais uma conta com o comando:\n[.etherprivate-clique]$ /home/rag/go-ethereum-1.12.2/build/bin/clef --keystore ~/.etherprivate-clique/keystore newaccount\n\nWARNING!\n\nClef is an account management tool. It may, like any software, contain bugs.\n\nPlease take care to\n- backup your keystore files,\n- verify that the keystore(s) can be opened with your password.\n\nClef is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\nwithout even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\nPURPOSE. See the GNU General Public License for more details.\n\nEnter 'ok' to proceed:\n&gt; ok\n\n\\#\\# New account password\n\nPlease enter a password for the new account to be created (attempt 0 of 3)\n&gt; \n-----------------------\nINFO [09-17|15:52:56.566] Your new key was generated               address=0x67a3A0EACe0bB180B94948ae02b09b7F8948ca60\nWARN [09-17|15:52:56.567] Please backup your key file!             path=/home/rag/.etherprivate-clique/keystore/UTC--2024-09-17T18-52-55 .377570375Z--67a3a0eace0bb180b94948ae02b09b7f8948ca60\nWARN [09-17|15:52:56.567] Please remember your password! \nGenerated account 0x67a3A0EACe0bB180B94948ae02b09b7F8948ca60\n[.etherprivate-clique]$\nA conta 0x67a3A0EACe0bB180B94948ae02b09b7F8948ca60 foi criada. No meu caso, listando pelo clef tenho as contas:\n[.etherprivate-clique]$ $HOME/go-ethereum-1.12.2/build/bin/geth --networkid 786 --datadir ~/.etherprivate-clique/ account list\nINFO [09-17|15:56:07.023] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [09-17|15:56:07.024] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nAccount #0: {2db017e44b03b37755a4b15e14cd799f83de4c13} keystore:///home/rag/.etherprivate-clique/keystore/UTC--2023-04-17T12-22-11. 261468773Z--2db017e44b03b37755a4b15e14cd799f83de4c13\nAccount #1: {bb36f26e6c16b3c7ed3d70bfb26f740336b4f976} keystore:///home/rag/.etherprivate-clique/keystore/UTC--2024-09-17T17-57-24. 818641852Z--bb36f26e6c16b3c7ed3d70bfb26f740336b4f976\nAccount #2: {67a3a0eace0bb180b94948ae02b09b7f8948ca60} keystore:///home/rag/.etherprivate-clique/keystore/UTC--2024-09-17T18-52-55. 377570375Z--67a3a0eace0bb180b94948ae02b09b7f8948ca60\n[.etherprivate-clique]$ \nPara os testes utilizarei as duas contas 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 e 0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976, ambas com a senha admin12345.\nVerifiquemos no console JavaScript se elas são listadas:\n[.etherprivate-clique]$ $HOME/go-ethereum-1.12.2/build/bin/geth attach ~/.etherprivate-clique/geth.ipc\nWelcome to the Geth JavaScript console!\n\ninstance: Geth/RAGEtherPrivate/v1.12.2-stable-bed84606/linux-amd64/go1.21.1\ncoinbase: 0x2db017e44b03b37755a4b15e14cd799f83de4c13\nat block: 0 (Wed Dec 31 1969 21:00:00 GMT-0300 (-03))\n datadir: /home/rag/.etherprivate-clique\n modules: admin:1.0 clique:1.0 debug:1.0 engine:1.0 eth:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt; eth.accounts\n[\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\", \"0x67a3a0eace0bb180b94948ae02b09b7f8948ca60\"]\n&gt;",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Clique`</span>"
    ]
  },
  {
    "objectID": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#informações-do-nó",
    "href": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#informações-do-nó",
    "title": "6  Prática: Criando uma Rede Ethereum Privada: Clique",
    "section": "6.8 Informações do Nó",
    "text": "6.8 Informações do Nó\nPara obter informações do nó criado com a execução do geth, basta usar o atributo admin.nodeInfo no console JavaScript.\n[.etherprivate-clique]$ $HOME/go-ethereum-1.12.2/build/bin/geth attach ~/.etherprivate-clique/geth.ipc\nWelcome to the Geth JavaScript console!\n\ninstance: Geth/RAGEtherPrivate/v1.12.2-stable-bed84606/linux-amd64/go1.21.1\ncoinbase: 0x2db017e44b03b37755a4b15e14cd799f83de4c13\nat block: 0 (Wed Dec 31 1969 21:00:00 GMT-0300 (-03))\n datadir: /home/rag/.etherprivate-clique\n modules: admin:1.0 clique:1.0 debug:1.0 engine:1.0 eth:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt; admin.nodeInfo\n{\n  enode: \"enode://91156ab43ada3646a9822152d4b010279cec9a92b5ab2d10b9ac53525f67f2f63f6d997da2967cc7d3732466449a6c667842b85649f61a8035e7305889231347@127.0.0.1:30303?discport=0\",\n  enr: \"enr:-Jy4QLIsAUUHel4lfANVQzPA9XglJ3RDOWxxJI3Kro4_VwtpBqSmlscUPmVmgrLBYlEfFjHMEWNXVv40uKg0N7RK02aGAZIBa1M4g2V0aMfGhLr9cZ2AgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQORFWq0Oto2RqmCIVLUsBAnnOyakrWrLRC5rFNSX2fy9oRzbmFwwIN0Y3CCdl8\",\n  id: \"87c2a44bb5d9ffe7b756c4821067b3eba5c260a1edce91cd59ea8c6925d874e2\",\n  ip: \"127.0.0.1\",\n  listenAddr: \"[::]:30303\",\n  name: \"Geth/RAGEtherPrivate/v1.12.2-stable-bed84606/linux-amd64/go1.21.1\",\n  ports: {\n    discovery: 0,\n    listener: 30303\n  },\n  protocols: {\n    eth: {\n      config: {\n        berlinBlock: 0,\n        byzantiumBlock: 0,\n        chainId: 786,\n        clique: {...},\n        constantinopleBlock: 0,\n        eip150Block: 0,\n        eip155Block: 0,\n        eip158Block: 0,\n        homesteadBlock: 0,\n        istanbulBlock: 0,\n        petersburgBlock: 0\n      },\n      difficulty: 1,\n      genesis: \"0xbf9a39b82450012680f16cac3affb16326902ed947099baf2aba3f62f0af3926\",\n      head: \"0xbf9a39b82450012680f16cac3affb16326902ed947099baf2aba3f62f0af3926\",\n      network: 786\n    },\n    snap: {}\n  }\n}\n&gt;",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Clique`</span>"
    ]
  },
  {
    "objectID": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#verificando-o-saldo-das-contas",
    "href": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#verificando-o-saldo-das-contas",
    "title": "6  Prática: Criando uma Rede Ethereum Privada: Clique",
    "section": "6.9 Verificando o Saldo das Contas",
    "text": "6.9 Verificando o Saldo das Contas\nVamos verificar os valores em cada uma das contas:\n[.etherprivate-clique]$ ~/go-ethereum-1.12.2/build/bin/geth attach ~/.etherprivate-clique/geth.ipc\nWelcome to the Geth JavaScript console!\n\ninstance: Geth/RAGEtherPrivate/v1.12.2-stable-bed84606/linux-amd64/go1.21.1\ncoinbase: 0x2db017e44b03b37755a4b15e14cd799f83de4c13\nat block: 0 (Wed Dec 31 1969 21:00:00 GMT-0300 (-03))\n datadir: /home/rag/.etherprivate-clique\n modules: admin:1.0 clique:1.0 debug:1.0 engine:1.0 eth:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt; eth.accounts\n[\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\", \"0x67a3a0eace0bb180b94948ae02b09b7f8948ca60\"]\n&gt; web3.fromWei(eth.getBalance(\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\"), \"ether\")\n3e-13\n&gt; web3.fromWei(eth.getBalance(\"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\"), \"ether\")\n4e-13\n&gt; \nSe criamos a primeira conta antes da configuração do genesis file, alocamos para ela \\(300000\\) então a consulta de valores iniciais poderá ter resultado diferente dependendo de como criou as contas.\neth.accounts\n[\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\", \"0x67a3a0eace0bb180b94948ae02b09b7f8948ca60\"]\n&gt; web3.fromWei(eth.getBalance(\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\"), \"ether\")\n3e-13\n&gt; web3.fromWei(eth.getBalance(\"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\"), \"ether\")\n4e-13\n&gt; eth.getBalance(eth.accounts[0])\n300000\n&gt; eth.getBalance(eth.accounts[1])\n400000\n&gt;",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Clique`</span>"
    ]
  },
  {
    "objectID": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#transferências-entre-as-carteiras",
    "href": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#transferências-entre-as-carteiras",
    "title": "6  Prática: Criando uma Rede Ethereum Privada: Clique",
    "section": "6.10 Transferências entre as Carteiras",
    "text": "6.10 Transferências entre as Carteiras\nVamos enviar \\(100\\) ethers de uma carteira para outra. Se utilizarmos uma conta que não tem saldo suficiente, seremos avisados.\n&gt; eth.accounts\n[\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\", \"0x67a3a0eace0bb180b94948ae02b09b7f8948ca60\"]\n&gt; eth.estimateGas({from: \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", to: \"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f970\", value: 100})\n21000\n&gt; eth.estimateGas({from: \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", to: \"0x67a3a0eace0bb180b94948ae02b09b7f8948ca60\", value: 100})\n21000\n&gt; eth.sendTransaction({from: \"0x67a3a0eace0bb180b94948ae02b09b7f8948ca60\", to: \"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\", value: 100})\nError: insufficient funds for transfer\n        at web3.js:6365:9(39)\n        at send (web3.js:5099:62(29))\n        at &lt;eval&gt;:1:20(9)\n&gt; \nFazendo uma transferência de uma conta com saldo. Se o erro Error: gas required exceeds allowance (0) ocorrer:\n&gt; eth.sendTransaction({from: \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", to: \"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\", value: 100})\nError: gas required exceeds allowance (0)\n        at web3.js:6365:9(39)\n        at send (web3.js:5099:62(29))\n        at &lt;eval&gt;:1:20(9)\n\n&gt; \nNo terminal de execução do geth irá aparecer a mensagem de erro:\nWARN [09-17|16:39:16.283] Gas estimation capped by limited funds   original=8,007,811 balance=300,000 sent=100 maxFeePerGas=1,000,000,000 fundable=0\nWARN [09-17|16:39:16.283] Served eth_sendTransaction               reqid=10 duration=\"297.6us\"   err=\"gas required exceeds allowance (0)\"\nUtilize o parâmetro --miner.gasprice para alterar o gasprice para \\(1\\).\n[.etherprivate-clique]$ $HOME/go-ethereum-1.12.2/build/bin/geth --networkid 786 --identity \"RAGEtherPrivate\" --datadir ~/.etherprivate-clique --syncmode full --allow-insecure-unlock --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin,debug\" --keystore ~/.etherprivate-clique/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.etherprivate-clique/geth/jwtsecret --nodiscover --maxpeers 15 --miner.etherbase=0x2db017e44b03b37755a4b15e14cd799f83de4c13 --miner.gasprice \"1\"\nO erro Error: authentication needed: password or unlock ocorre porque é necessário autenticação para a realização de transações, precisamos autorizar a transação.\n&gt; eth.sendTransaction({from: \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", to: \"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\", value: 100})\n\"0xfeb0a7dd835eceb30b14b4f3e5bd8cc906d3aa33af5dbec5b941deaa8f91971b\"\n&gt; eth.sendTransaction({from: \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", to: \"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\", value: 100})\nError: authentication needed: password or unlock\n        at web3.js:6365:9(39)\n        at send (web3.js:5099:62(29))\n        at &lt;eval&gt;:1:20(9)\n\n&gt; \nNo terminal de execução do geth irá aparecer o aviso.\nWARN [09-17|18:58:31.625] Served eth_sendTransaction               reqid=33 duration=\"754.024us\" err=\"authentication needed: password or unlock\"\nNa versão utilizada é preciso utilizar o clef para fazer a autenticação em um terminal. Inicie a instância do clef com o comando:\n[.etherprivate]$ /home/rag/go-ethereum-1.12.2/build/bin/clef --chainid 786 --keystore ~/.etherprivate-clique/keystore --configdir ~/.etherprivate-clique/clef --http\n\nWARNING!\n\nClef is an account management tool. It may, like any software, contain bugs.\n\nPlease take care to\n- backup your keystore files,\n- verify that the keystore(s) can be opened with your password.\n\nClef is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\nwithout even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\nPURPOSE. See the GNU General Public License for more details.\n\nEnter 'ok' to proceed:\n&gt; ok\n\nINFO [04-17|10:23:09.630] Using CLI as UI-channel \nINFO [04-17|10:23:10.050] Loaded 4byte database                    embeds=268,621 locals=0 local=./4byte-custom.json\nWARN [04-17|10:23:10.050] Failed to open master, rules disabled    err=\"failed stat on /home/rag/.etherprivate-clique/clef/masterseed.json: stat /home/rag/.etherprivate-clique/clef/masterseed.json: no such file or directory\"\nINFO [04-17|10:23:10.050] Starting signer                          chainid=786 keystore=/home/rag/.etherprivate-clique/keystore light-kdf=false advanced=false\nINFO [04-17|10:23:10.052] Smartcard socket file missing, disabling err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [04-17|10:23:10.052] Audit logs configured                    file=audit.log\nINFO [04-17|10:23:10.053] HTTP endpoint opened                     url=http://127.0.0.1:8550/\nINFO [04-17|10:23:10.053] IPC endpoint opened                      url=/home/rag/.etherprivate-clique/clef/clef.ipc\n\n------- Signer info -------\n* extapi_version : 6.1.0\n* extapi_http : http://127.0.0.1:8550/\n* extapi_ipc : /home/rag/.etherprivate-clique/clef/clef.ipc\n* intapi_version : 7.0.1\n\n------- Available accounts -------\n0. 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 at keystore:///home/rag/.etherprivate-clique/keystore/UTC--2023-04-17T12-22-11.261468773Z--2db017e44b03b37755a4b15e14cd799f83de4c13\n1. 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c at keystore:///home/rag/.etherprivate-clique/keystore/UTC--2023-04-17T12-28-54.934614755Z--7a7686ad451d2865a2246e239b674aefd4c6c27c\n-------- List Account request--------------\nA request has been made to list all accounts. \nYou can select which accounts the caller can see\n  [x] 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n    URL: keystore:///home/rag/.etherprivate-clique/keystore/UTC--2023-04-17T12-22-11.261468773Z--2db017e44b03b37755a4b15e14cd799f83de4c13\n  [x] 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\n    URL: keystore:///home/rag/.etherprivate-clique/keystore/UTC--2023-04-17T12-28-54.934614755Z--7a7686ad451d2865a2246e239b674aefd4c6c27c\n-------------------------------------------\nE volte ao terminal de execução do geth e indique que as autentificações serão via clef com o parâmetro --signer=/home/rag/.etherprivate-clique/clef/clef.ipc passando o caminho dado pelo clef.\n[.etherprivate-clique]$ $HOME/go-ethereum-1.12.2/build/bin/geth --networkid 786 --identity \"RAGEtherPrivate\" --datadir ~/.etherprivate-clique --syncmode full --allow-insecure-unlock --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin,debug\" --keystore ~/.etherprivate-clique/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.etherprivate-clique/geth/jwtsecret --nodiscover --maxpeers 15 --miner.etherbase=0x2db017e44b03b37755a4b15e14cd799f83de4c13 --miner.gasprice \"1\" --signer=/home/rag/.etherprivate-clique/clef/clef.ipc\nCada transação executada no console JavaScript deverá ser autorizada no console do clef.\n&gt; eth.accounts\n\n[\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\", \"0x67a3a0eace0bb180b94948ae02b09b7f8948ca60\"]\n&gt; clique.getSigners()\n\n[\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"0xb9083d7e2371944fe035ce99af680d89e2c4d73a\", \"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\", \"0xca01dbfc1bd2fd94dc421209441a754f79c4a4ec\"]\n&gt; eth.getBalance(\"0x67a3a0eace0bb180b94948ae02b09b7f8948ca60\")\n0\n&gt; eth.getBalance(\"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\")\n400000\n&gt; eth.getBalance(\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\")\n300000\n&gt; eth.sendTransaction({from: \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", to: \"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\", value: 100})\n\"0xf9dba156ca7aec18836ff354263b4032209250009c323e29406334a13f34a21f\"\nNo console do clef é possível autorizar e ver a transação assinada com hash: 0xb579cc595601e4aca546ce4e46bdcded7841bd7f50a0a78c505e839dd039b8b9 que é o mesmo id devolvido no console JavaScript.\n[.etherprivate-clique]$ /home/rag/go-ethereum-1.12.2/build/bin/clef --chainid 786 --keystore ~/.etherprivate-clique/keystore --configdir ~/.etherprivate-clique/clef --http\n\nWARNING!\n\nClef is an account management tool. It may, like any software, contain bugs.\n\nPlease take care to\n- backup your keystore files,\n- verify that the keystore(s) can be opened with your password.\n\nClef is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\nwithout even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\nPURPOSE. See the GNU General Public License for more details.\n\nEnter 'ok' to proceed:\n&gt; ok\n\nINFO [09-17|21:21:54.581] Using CLI as UI-channel \nINFO [09-17|21:21:54.927] Loaded 4byte database                    embeds=268,621 locals=0 local=./4byte-custom.json\nWARN [09-17|21:21:54.927] Failed to open master, rules disabled    err=\"failed stat on /home/rag/.etherprivate-clique/clef/masterseed.json: stat /home/rag/.etherprivate-clique/clef/masterseed.json: no such file or directory\"\nINFO [09-17|21:21:54.927] Starting signer                          chainid=786 keystore=/home/rag/.etherprivate-clique/keystore light-kdf=false advanced=false\nINFO [09-17|21:21:54.930] Smartcard socket file missing, disabling err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [09-17|21:21:54.930] Audit logs configured                    file=audit.log\nINFO [09-17|21:21:54.931] HTTP endpoint opened                     url=http://127.0.0.1:8550/\nINFO [09-17|21:21:54.932] IPC endpoint opened                      url=/home/rag/.etherprivate-clique/clef/clef.ipc\n\n------- Signer info -------\n* intapi_version : 7.0.1\n* extapi_version : 6.1.0\n* extapi_http : http://127.0.0.1:8550/\n* extapi_ipc : /home/rag/.etherprivate-clique/clef/clef.ipc\n\n------- Available accounts -------\n0. 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 at keystore:///home/rag/.etherprivate-clique/keystore/UTC--2023-04-17T12-22-11.261468773Z--2db017e44b03b37755a4b15e14cd799f83de4c13\n1. 0xBb36F26E6C16B3C7ED3D70bFB26F740336B4F976 at keystore:///home/rag/.etherprivate-clique/keystore/UTC--2024-09-17T17-57-24.818641852Z--bb36f26e6c16b3c7ed3d70bfb26f740336b4f976\n2. 0x67a3A0EACe0bB180B94948ae02b09b7F8948ca60 at keystore:///home/rag/.etherprivate-clique/keystore/UTC--2024-09-17T18-52-55.377570375Z--67a3a0eace0bb180b94948ae02b09b7f8948ca60\n-------- List Account request--------------\nA request has been made to list all accounts. \nYou can select which accounts the caller can see\n  [x] 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n    URL: keystore:///home/rag/.etherprivate-clique/keystore/UTC--2023-04-17T12-22-11.261468773Z--2db017e44b03b37755a4b15e14cd799f83de4c13\n  [x] 0xBb36F26E6C16B3C7ED3D70bFB26F740336B4F976\n    URL: keystore:///home/rag/.etherprivate-clique/keystore/UTC--2024-09-17T17-57-24.818641852Z--bb36f26e6c16b3c7ed3d70bfb26f740336b4f976\n  [x] 0x67a3A0EACe0bB180B94948ae02b09b7F8948ca60\n    URL: keystore:///home/rag/.etherprivate-clique/keystore/UTC--2024-09-17T18-52-55.377570375Z--67a3a0eace0bb180b94948ae02b09b7f8948ca60\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n--------- Transaction request-------------\nto:    0xBb36F26E6C16B3C7ED3D70bFB26F740336B4F976\nfrom:               0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 [chksum ok]\nvalue:              100 wei\ngas:                0x5208 (21000)\ngasprice: 1 wei\nnonce:    0x0 (0)\nchainid:  0x312\n\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\n-------------------------------------------\nApprove? [y/N]:\n&gt; y\n\\#\\# Account password\n\nPlease enter the password for account 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n&gt; \n-----------------------\nTransaction signed:\n {\n    \"type\": \"0x0\",\n    \"chainId\": \"0x312\",\n    \"nonce\": \"0x0\",\n    \"to\": \"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\",\n    \"gas\": \"0x5208\",\n    \"gasPrice\": \"0x1\",\n    \"maxPriorityFeePerGas\": null,\n    \"maxFeePerGas\": null,\n    \"value\": \"0x64\",\n    \"input\": \"0x\",\n    \"v\": \"0x647\",\n    \"r\": \"0x88b5dcb76a2b3afb4cf16f2a0d67320e8cf3f6711d4001812357e7dde86a5d21\",\n    \"s\": \"0x12b5cb7118d7b2f777035d4de0c2ccf8facdca5a1dab46bc8e8f8eb28614a95\",\n    \"hash\": \"0xf9dba156ca7aec18836ff354263b4032209250009c323e29406334a13f34a21f\"\n  }\n-------- Sign data request--------------\nAccount:  0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 [chksum ok]\nmessages:\n  Clique header [clique]: \"clique header 1 [0xb3e3cd9869adf0c80864715bbc84d13e7bcc394d8e8c68342b5fb498e3415882]\"\nraw data:  \n        \"\\xf9\\x02\\x16\\xa0\\xf5\\x9eV\\x96\\xa1*r_\\xa5\\x00\\xf7\\xf8\\xb1\\xef\\xbb\\xe8l\\xd9\\x05G\\x17z\\x91\\x11m\\xd0**\\xa3\\xccM\\xe8\\xde\\xc7]z\\xab\\x85\\xb5g\\xb6\\xcc\\xd4\\x1a\\xd3\\x12E\\x1b\\x94\\x8at\\x13\\xf0\\xa1B\\xfdG\\x94\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xa0B\\xb1y\\\\U:r\\x850|\\x8bx\\xf3M\\xb9]e\\x18\\xa4\\x9b\\xdfQ\\xe4\\xc1\\x87\\x9d\\x01\\xa1{\\xa0\\xdfF\\xc7\\xf3\\xc5B\\xbc\\xb2h7r\\n\\xae\\xb1\\xd9\\xe9&Z\\x04\\xe8\\xe8#6!\\xb6^U\\xb0\\x97\\xe2\\a\\xa0\\xa0\\x05k#\\xfb\\xbaH\\x06\\x96\\xb6_\\x8f!H\\xa1)\\x91\\x03\\xc4\\xf5}\\xf89#:\\xf2\\xcfL\\xa2\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x01\\x83z0\\x83\\x82R\\b\\x84f\\xea\\x1dk\\xa0\\u0603\\x01\\f\\x02\\x84geth\\x88go1.21.1\\x85linux\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xa0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x88\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\ndata hash:  0x95c84367fee5668f5b6571712467e56e8bace022ec24ba761cb7e62d51164581\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n\\#\\# Password for signing\n\nPlease enter password for signing data with account 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n&gt; \n-----------------------\nNo terminal de execução do geth vai aparecer que a transação 0xf9dba156ca7aec18836ff354263b4032209250009c323e29406334a13f34a21f foi submetida:\nWARN [09-17|21:22:43.166] Gas estimation capped by limited funds   original=8,007,811 balance=300,000 sent=100 maxFeePerGas=1 fundable=299,900\nINFO [09-17|21:22:50.751] Setting new local account                address=0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\nINFO [09-17|21:22:50.752] Submitted transaction                    hash=0xf9dba156ca7aec18836ff354263b4032209250009c323e29406334a13f34a21f from=0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 nonce=0 recipient=0xBb36F26E6C16B3C7ED3D70bFB26F740336B4F976 value=100\nINFO [09-17|21:23:07.055] Legacy pool tip threshold updated        tip=1\nINFO [09-17|21:23:07.056] Commit new sealing work                  number=1 sealhash=95c843..164581 txs=1 gas=21000 fees=2.1e-14 elapsed=\"508.177us\"\nINFO [09-17|21:23:13.936] Successfully sealed new block            number=1 sealhash=95c843..164581 hash=8c6143..92674c elapsed=6.879s\nINFO [09-17|21:23:13.936] Commit new sealing work                  number=2 sealhash=feb862..1ac97a txs=0 gas=0     fees=0       elapsed=\"699.477us\"\nWARN [09-17|21:23:13.936] Block sealing failed                     err=\"signed recently, must wait for others\"\nNo console JavaScript é possível recuperar o recibo da transação:\n&gt; eth.sendTransaction({from: \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", to: \"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\", value: 100})\n\"0xf9dba156ca7aec18836ff354263b4032209250009c323e29406334a13f34a21f\"\n&gt; eth.getTransactionReceipt(\"0xf9dba156ca7aec18836ff354263b4032209250009c323e29406334a13f34a21f\")\nnull\nO recibo ainda é null porque a transação não foi processada. É preciso minerar para a transação ser efetivada:\n&gt; miner.start()\nnull\n&gt; miner.stop()\n&gt; eth.getTransactionReceipt(\"0xf9dba156ca7aec18836ff354263b4032209250009c323e29406334a13f34a21f\")\n{\n  blockHash: \"0x8c6143968850c76ac5fd6bdbd1e24edffb5b1aaeb01430c94a5753f12692674c\",\n  blockNumber: 1,\n  contractAddress: null,\n  cumulativeGasUsed: 21000,\n  effectiveGasPrice: 1,\n  from: \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\",\n  gasUsed: 21000,\n  logs: [],\n  logsBloom: \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n  status: \"0x1\",\n  to: \"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\",\n  transactionHash: \"0xf9dba156ca7aec18836ff354263b4032209250009c323e29406334a13f34a21f\",\n  transactionIndex: 0,\n  type: \"0x0\"\n}\nO saldo das contas também foi alterado conforme a transferência executada:\n&gt; eth.getBalance(\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\")\n299900\n&gt; eth.getBalance(\"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\")\n400100\n&gt; eth.getBalance(\"0x67a3a0eace0bb180b94948ae02b09b7f8948ca60\")\n0\n&gt; \nAo enviar outra quantidade para a segunda conta é preciso autorizar a transação no console do clef e minerar novamente para ela ser efetivada.\n\n&gt; eth.sendTransaction({from: \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", to: \"0x67a3A0EACe0bB180B94948ae02b09b7F8948ca60\", value: 100})\n\"0x4d60fdb557de763b557ed6f487d882caa3d639af02c9ef04e88afb8cc3ed7969\"\n&gt; eth.getTransactionReceipt(\"0x4d60fdb557de763b557ed6f487d882caa3d639af02c9ef04e88afb8cc3ed7969\")\nnull\n&gt; miner.start()\nnull\n&gt; eth.getTransactionReceipt(\"0x4d60fdb557de763b557ed6f487d882caa3d639af02c9ef04e88afb8cc3ed7969\")\n{\n  blockHash: \"0x31eba241518f12f89fec5958c58ae38cd7ec2c5c85b5f6f59755cd9b0e210fbf\",\n  blockNumber: 1,\n  contractAddress: null,\n  cumulativeGasUsed: 21000,\n  effectiveGasPrice: 1,\n  from: \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\",\n  gasUsed: 21000,\n  logs: [],\n  logsBloom: \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n  status: \"0x1\",\n  to: \"0x67a3a0eace0bb180b94948ae02b09b7f8948ca60\",\n  transactionHash: \"0x4d60fdb557de763b557ed6f487d882caa3d639af02c9ef04e88afb8cc3ed7969\",\n  transactionIndex: 0,\n  type: \"0x0\"\n}\n&gt; miner.stop()\nConsole do clef para a segunda transação:\n[rogerio@ryzen-nitro .etherprivate-clique]$ /home/rag/go-ethereum-1.12.2/build/bin/clef --chainid 786 --keystore ~/.etherprivate-clique/keystore --configdir ~/.etherprivate-clique/clef --http\n\nWARNING!\n\nClef is an account management tool. It may, like any software, contain bugs.\n\nPlease take care to\n- backup your keystore files,\n- verify that the keystore(s) can be opened with your password.\n\nClef is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\nwithout even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\nPURPOSE. See the GNU General Public License for more details.\n\nEnter 'ok' to proceed:\n&gt; ok\n\nINFO [09-18|20:37:10.231] Using CLI as UI-channel \nINFO [09-18|20:37:10.545] Loaded 4byte database                    embeds=268,621 locals=0 local=./4byte-custom.json\nWARN [09-18|20:37:10.545] Failed to open master, rules disabled    err=\"failed stat on /home/rag/.etherprivate-clique/clef/masterseed.json: stat /home/rag/.etherprivate-clique/clef/masterseed.json: no such file or directory\"\nINFO [09-18|20:37:10.545] Starting signer                          chainid=786 keystore=/home/rag/.etherprivate-clique/keystore light-kdf=false advanced=false\nINFO [09-18|20:37:10.547] Smartcard socket file missing, disabling err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [09-18|20:37:10.548] Audit logs configured                    file=audit.log\nINFO [09-18|20:37:10.549] HTTP endpoint opened                     url=http://127.0.0.1:8550/\nINFO [09-18|20:37:10.549] IPC endpoint opened                      url=/home/rag/.etherprivate-clique/clef/clef.ipc\n\n------- Signer info -------\n* extapi_ipc : /home/rag/.etherprivate-clique/clef/clef.ipc\n* intapi_version : 7.0.1\n* extapi_version : 6.1.0\n* extapi_http : http://127.0.0.1:8550/\n\n------- Available accounts -------\n0. 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 at keystore:///home/rag/.etherprivate-clique/keystore/UTC--2023-04-17T12-22-11.261468773Z--2db017e44b03b37755a4b15e14cd799f83de4c13\n1. 0xBb36F26E6C16B3C7ED3D70bFB26F740336B4F976 at keystore:///home/rag/.etherprivate-clique/keystore/UTC--2024-09-17T17-57-24.818641852Z--bb36f26e6c16b3c7ed3d70bfb26f740336b4f976\n2. 0x67a3A0EACe0bB180B94948ae02b09b7F8948ca60 at keystore:///home/rag/.etherprivate-clique/keystore/UTC--2024-09-17T18-52-55.377570375Z--67a3a0eace0bb180b94948ae02b09b7f8948ca60\n-------- List Account request--------------\nA request has been made to list all accounts. \nYou can select which accounts the caller can see\n  [x] 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n    URL: keystore:///home/rag/.etherprivate-clique/keystore/UTC--2023-04-17T12-22-11.261468773Z--2db017e44b03b37755a4b15e14cd799f83de4c13\n  [x] 0xBb36F26E6C16B3C7ED3D70bFB26F740336B4F976\n    URL: keystore:///home/rag/.etherprivate-clique/keystore/UTC--2024-09-17T17-57-24.818641852Z--bb36f26e6c16b3c7ed3d70bfb26f740336b4f976\n  [x] 0x67a3A0EACe0bB180B94948ae02b09b7F8948ca60\n    URL: keystore:///home/rag/.etherprivate-clique/keystore/UTC--2024-09-17T18-52-55.377570375Z--67a3a0eace0bb180b94948ae02b09b7f8948ca60\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n--------- Transaction request-------------\nto:    0x67a3A0EACe0bB180B94948ae02b09b7F8948ca60\nfrom:               0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 [chksum ok]\nvalue:              100 wei\ngas:                0x5208 (21000)\ngasprice: 1 wei\nnonce:    0x0 (0)\nchainid:  0x312\n\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\n-------------------------------------------\nApprove? [y/N]:\n&gt; y\n\\#\\# Account password\n\nPlease enter the password for account 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n&gt; \n-----------------------\nTransaction signed:\n {\n    \"type\": \"0x0\",\n    \"chainId\": \"0x312\",\n    \"nonce\": \"0x0\",\n    \"to\": \"0x67a3a0eace0bb180b94948ae02b09b7f8948ca60\",\n    \"gas\": \"0x5208\",\n    \"gasPrice\": \"0x1\",\n    \"maxPriorityFeePerGas\": null,\n    \"maxFeePerGas\": null,\n    \"value\": \"0x64\",\n    \"input\": \"0x\",\n    \"v\": \"0x647\",\n    \"r\": \"0x4138a9d11ae034aef924a2a38402242c801c2a69e272eeae45aa75ddf674c833\",\n    \"s\": \"0x5d8e6bca5bb1312561531be5a45c5e020d541c3aa5dea6ff94dfea2b8cc49982\",\n    \"hash\": \"0x4d60fdb557de763b557ed6f487d882caa3d639af02c9ef04e88afb8cc3ed7969\"\n  }\n-------- Sign data request--------------\nAccount:  0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 [chksum ok]\nmessages:\n  Clique header [clique]: \"clique header 1 [0x550a6aed64dfa48a1523d995874eff7817f6e879d3c1c6ccb11f503245ce316e]\"\nraw data:  \n        \"\\xf9\\x02\\x16\\xa0?2N\\x14\\n+S\\x97\\xaa\\xbe\\xf5I\\x97*\\x05\\\"\\x86&68G\\xc1\\xe0\\x98\\x8c\\xb4\\xf9\\x90\\xfd\\x1d\\x0f\\xa0\\x1d\\xccM\\xe8\\xde\\xc7]z\\xab\\x85\\xb5g\\xb6\\xcc\\xd4\\x1a\\xd3\\x12E\\x1b\\x94\\x8at\\x13\\xf0\\xa1B\\xfd@*G\\x94\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xa0\\xa3~L&\\x11\\b\\xda6\\xb8\\xc6\\xf5\\x9b\\x13\\x99\\xc7\\xfa8\\xe8l\\xad\\x9f(=\\xd6x\\x81\\xa1\\x18jH\\x81\\x83\\xa0e\\xeb\\xe1I\\x85\\xef\\x8d,!f\\xd2u\\xab\\xdaCm\\xf9*\\x89\\xdd\\xeb/G\\xd3/u*\\xa1\\xebt\\xb*\\x05k\\xfb\\xbaH\\x06\\x96\\xb6_*\\x8f!H\\xa1)\\x91\\x03\\xc4\\xf5}\\xf89*:\\xf2\\xcfL\\xa2*\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x01\\x83z0\\x83\\x82R\\b\\x84f\\xeb}:\\xa0\\u0603\\x01\\f\\x02\\x84geth\\x88go1.21.1\\x85linux\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xa0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x88\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\ndata hash:  0xe781cd5dde130b38dc1ac7882b0affd10b37ff1de94c39e07cbd601b83ec0eb6\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n\\#\\# Password for signing\n\nPlease enter password for signing data with account 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n&gt; \n-----------------------\nA transação 0x4d60fdb557de763b557ed6f487d882caa3d639af02c9ef04e88afb8cc3ed7969 foi autorizada, porém no terminal de execução do geth aparece uma mensagem:\nWARN [09-18|22:34:34.004] Block sealing failed                     err=\"signed recently, must wait for others\"\nSe verificarmos os saldos da carteira, podemos verificar que a transação ainda não foi efetivada.\n&gt; eth.getBalance(\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\")\n299900\n&gt; eth.getBalance(\"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\")\n400100\n&gt; eth.getBalance(\"0x67a3a0eace0bb180b94948ae02b09b7f8948ca60\")\n0\n&gt; \nPela mensagem é provável que tenhamos que executar dois nós da rede, indicando cada um como signer das contas de assinadores que configuramos.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Clique`</span>"
    ]
  },
  {
    "objectID": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#configurando-um-segundo-node",
    "href": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#configurando-um-segundo-node",
    "title": "6  Prática: Criando uma Rede Ethereum Privada: Clique",
    "section": "6.11 Configurando um Segundo Node",
    "text": "6.11 Configurando um Segundo Node\nCriando o genesis block para o node-1:\n[rogerio@ryzen-nitro .etherprivate-clique]$  $HOME/go-ethereum-1.12.2/build/bin/geth --networkid 786 --identity \"RAGEtherPrivate\" --datadir ~/.etherprivate-clique/node1 init ~/.etherprivate-clique/privategenesis.json\nINFO [09-18|23:03:33.713] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [09-18|23:03:33.714] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [09-18|23:03:33.716] Set global gas cap                       cap=50,000,000\nINFO [09-18|23:03:33.717] Initializing the KZG library             backend=gokzg\nINFO [09-18|23:03:33.737] Defaulting to pebble as the backing database \nINFO [09-18|23:03:33.737] Allocated cache and file handles         database=/home/rag/.etherprivate-clique/node1/geth/chaindata cache=16.00MiB handles=16\nINFO [09-18|23:03:33.760] Opened ancient database                  database=/home/rag/.etherprivate-clique/node1/geth/chaindata/ancient/chain readonly=false\nINFO [09-18|23:03:33.760] Writing custom genesis block \nINFO [09-18|23:03:33.761] Persisted trie from memory database      nodes=3 size=399.00B time=\"636.339us\" gcnodes=0 gcsize=0.00B gctime=0s livenodes=0 livesize=0.00B\nINFO [09-18|23:03:33.769] Successfully wrote genesis state         database=chaindata hash=3f324e..fd1d0f\nINFO [09-18|23:03:33.769] Defaulting to pebble as the backing database \nINFO [09-18|23:03:33.769] Allocated cache and file handles         database=/home/rag/.etherprivate-clique/node1/geth/lightchaindata cache=16.00MiB handles=16\nINFO [09-18|23:03:33.783] Opened ancient database                  database=/home/rag/.etherprivate-clique/node1/geth/lightchaindata/ancient/chain readonly=false\nINFO [09-18|23:03:33.783] Writing custom genesis block \nINFO [09-18|23:03:33.784] Persisted trie from memory database      nodes=3 size=399.00B time=\"662.32us\"  gcnodes=0 gcsize=0.00B gctime=0s livenodes=0 livesize=0.00B\nINFO [09-18|23:03:33.793] Successfully wrote genesis state         database=lightchaindata hash=3f324e..fd1d0f\nCriando o genesis block para o node-2:\n[rogerio@ryzen-nitro .etherprivate-clique]$ $HOME/go-ethereum-1.12.2/build/bin/geth --networkid 786 --identity \"RAGEtherPrivate\" --datadir ~/.etherprivate-clique/node2 init ~/.etherprivate-clique/privategenesis.json\nINFO [09-18|23:03:58.607] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [09-18|23:03:58.608] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [09-18|23:03:58.610] Set global gas cap                       cap=50,000,000\nINFO [09-18|23:03:58.610] Initializing the KZG library             backend=gokzg\nINFO [09-18|23:03:58.638] Defaulting to pebble as the backing database \nINFO [09-18|23:03:58.638] Allocated cache and file handles         database=/home/rag/.etherprivate-clique/node2/geth/chaindata cache=16.00MiB handles=16\nINFO [09-18|23:03:58.662] Opened ancient database                  database=/home/rag/.etherprivate-clique/node2/geth/chaindata/ancient/chain readonly=false\nINFO [09-18|23:03:58.662] Writing custom genesis block \nINFO [09-18|23:03:58.663] Persisted trie from memory database      nodes=3 size=399.00B time=\"672.238us\" gcnodes=0 gcsize=0.00B gctime=0s livenodes=0 livesize=0.00B\nINFO [09-18|23:03:58.672] Successfully wrote genesis state         database=chaindata hash=3f324e..fd1d0f\nINFO [09-18|23:03:58.672] Defaulting to pebble as the backing database \nINFO [09-18|23:03:58.672] Allocated cache and file handles         database=/home/rag/.etherprivate-clique/node2/geth/lightchaindata cache=16.00MiB handles=16\nINFO [09-18|23:03:58.685] Opened ancient database                  database=/home/rag/.etherprivate-clique/node2/geth/lightchaindata/ancient/chain readonly=false\nINFO [09-18|23:03:58.685] Writing custom genesis block \nINFO [09-18|23:03:58.686] Persisted trie from memory database      nodes=3 size=399.00B time=\"644.371us\" gcnodes=0 gcsize=0.00B gctime=0s livenodes=0 livesize=0.00B\nINFO [09-18|23:03:58.694] Successfully wrote genesis state         database=lightchaindata hash=3f324e..fd1d0f\nEstrutura dos diretórios:\n\n\n\n\nEstrutura de Diretórios para 2 nodes\n\n\nCriando chave com o bootnode:\n[rogerio@ryzen-nitro .etherprivate-clique]$ bootnode -genkey boot.key\n[rogerio@ryzen-nitro .etherprivate-clique]$ ls\naudit.log  clef     keystore  node2\nboot.key   history  node1     privategenesis.json\n[rogerio@ryzen-nitro .etherprivate-clique]$ cat boot.key \n40a32d64cff18496ae6426bd7746b220f0f90dd7458c2a8ef3187cbdb5865349\nGerando um enode:\n[rogerio@ryzen-nitro .etherprivate-clique]$ bootnode -nodekey boot.key -addr :30305\nenode://d918c47d1d47ee9b309622038282167b675e81dfda21d7ad0b7467f08f379a694e43fbf09f9e9c70e6b2343c11dab5d34ee07a71e5fb588cdf329f58fca157b1@127.0.0.1:0?discport=30305\nNote: you're using cmd/bootnode, a developer tool.\nWe recommend using a regular node as bootstrap node for production deployments.\nINFO [09-18|23:06:45.222] New local node record                    seq=1,726,711,605,221 id=96f33241c1e9dd68 ip=\"invalid IP\" udp=0 tcp=0\nIniciando o node-1:\n$HOME/go-ethereum-1.12.2/build/bin/geth --networkid 786 --identity \"RAGEtherPrivate\" --datadir ~/.etherprivate-clique/node1 --port 30306 --bootnodes enode://d918c47d1d47ee9b309622038282167b675e81dfda21d7ad0b7467f08f379a694e43fbf09f9e9c70e6b2343c11dab5d34ee07a71e5fb588cdf329f58fca157b1@127.0.0.1:0?discport=30305 --unlock 0x2db017e44b03b37755a4b15e14cd799f83de4c13 --miner.etherbase=0x2db017e44b03b37755a4b15e14cd799f83de4c13 --syncmode full --allow-insecure-unlock --http --http.addr 127.0.0.1 --http.port 8560 --http.api \"eth,net,web3,personal,engine,admin,debug,admin,miner,txpool\" --keystore ~/.etherprivate-clique/keystore --authrpc.addr localhost --authrpc.port 8552 --authrpc.vhosts localhost --nodiscover --maxpeers 15  --miner.gasprice \"1\" --signer=/home/rag/.etherprivate-clique/clef/clef.ipc\nIniciando o node-2:\n$HOME/go-ethereum-1.12.2/build/bin/geth --networkid 786 --identity \"RAGEtherPrivate\" --datadir ~/.etherprivate-clique/node2 --port 30307 --bootnodes enode://d918c47d1d47ee9b309622038282167b675e81dfda21d7ad0b7467f08f379a694e43fbf09f9e9c70e6b2343c11dab5d34ee07a71e5fb588cdf329f58fca157b1@127.0.0.1:0?discport=30305  --unlock 0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976 --miner.etherbase=0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976 --syncmode full --allow-insecure-unlock --http --http.addr 127.0.0.1 --http.port 8561 --http.api \"eth,net,web3,personal,engine,admin,debug,admin,miner,txpool\" --keystore ~/.etherprivate-clique/keystore --authrpc.addr localhost --authrpc.port 8553 --authrpc.vhosts localhost --nodiscover --maxpeers 15  --miner.gasprice \"1\" --signer=/home/rag/.etherprivate-clique/clef/clef.ipc\nConecte em cada node com um console JavaScript e consulte o saldo das carteiras e recibo da transação:\n[rogerio@ryzen-nitro .etherprivate-clique]$ ~/go-ethereum-1.12.2/build/bin/geth attach /home/rag/.etherprivate-clique/node1/geth.ipc\nWelcome to the Geth JavaScript console!\n\ninstance: Geth/RAGEtherPrivate/v1.12.2-stable-bed84606/linux-amd64/go1.21.1\ncoinbase: 0x2db017e44b03b37755a4b15e14cd799f83de4c13\nat block: 13 (Thu Sep 19 2024 00:38:09 GMT-0300 (-03))\n datadir: /home/rag/.etherprivate-clique/node1\n modules: admin:1.0 clique:1.0 debug:1.0 engine:1.0 eth:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt; &gt; eth.getBalance(\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\")\n\n299900\n&gt; eth.getBalance(\"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\")\n\n400100\n&gt; eth.getBalance(\"0x67a3a0eace0bb180b94948ae02b09b7f8948ca60\")\n\n0\n&gt; eth.getTransactionReceipt(\"0xf9dba156ca7aec18836ff354263b4032209250009c323e29406334a13f34a21f\")\n{\n  blockHash: \"0xb1071e241e9311171f60cf7ba40f39ece17b35301d7a07c3db8ef83ae3a8390b\",\n  blockNumber: 2,\n  contractAddress: null,\n  cumulativeGasUsed: 21000,\n  effectiveGasPrice: 1,\n  from: \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\",\n  gasUsed: 21000,\n  logs: [],\n  logsBloom: \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n  status: \"0x1\",\n  to: \"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\",\n  transactionHash: \"0xf9dba156ca7aec18836ff354263b4032209250009c323e29406334a13f34a21f\",\n  transactionIndex: 0,\n  type: \"0x0\"\n}\n&gt; \nNo node2 ainda não aparecia os mesmos dados e nem informações sobre pares admin.peers retornava vazio:\n[rogerio@ryzen-nitro .etherprivate-clique]$ ~/go-ethereum-1.12.2/build/bin/geth attach /home/rag/.etherprivate-clique/node2/geth.ipc \nWelcome to the Geth JavaScript console!\n\ninstance: Geth/RAGEtherPrivate/v1.12.2-stable-bed84606/linux-amd64/go1.21.1\ncoinbase: 0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\nat block: 13 (Thu Sep 19 2024 00:38:09 GMT-0300 (-03))\n datadir: /home/rag/.etherprivate-clique/node2\n modules: admin:1.0 clique:1.0 debug:1.0 engine:1.0 eth:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt; &gt; eth.getBalance(\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\")\n300000\n&gt; eth.getBalance(\"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\")\n400000\n&gt; admin.peers\n[]\nTentei adicionar o enode como par e nada:\n&gt; admin.addPeer(\"enode://d918c47d1d47ee9b309622038282167b675e81dfda21d7ad0b7467f08f379a694e43fbf09f9e9c70e6b2343c11dab5d34ee07a71e5fb588cdf329f58fca157b1@127.0.0.1:0?discport=30305\")\ntrue\n&gt; admin.peers\n[]\n&gt; eth.getTransactionReceipt(\"0xf9dba156ca7aec18836ff354263b4032209250009c323e29406334a13f34a21f\")\nnull\n&gt; eth.getBalance(\"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\")\n400000\n&gt; miner.start()\nnull\nAdicionar o node1 como par do node2, recupere o código enr no console JavaScript conectado ao node1:\n&gt; admin.nodeInfo.enr\n\"enr:-Jy4QNIeBFYOCqu4XwFp9IH4slO75F4oRtQsnClncm82wDbrTDJxlXm_EG3KAUNevf9-hS_6esq3F1111q86KNT3MBaGAZIIJEzng2V0aMfGhDf_6yKAgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQIczpJdu-Q78j5Oue6jql8WNGVdMI6d9Is-guHgDqx1ZIRzbmFwwIN0Y3CCdmI\"\n&gt; \nE adicione ele como par no console JavaScript conectado ao node2:\n&gt; admin.addPeer(\"enr:-Jy4QNIeBFYOCqu4XwFp9IH4slO75F4oRtQsnClncm82wDbrTDJxlXm_EG3KAUNevf9-hS_6esq3F1111q86KNT3MBaGAZIIJEzng2V0aMfGhDf_6yKAgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQIczpJdu-Q78j5Oue6jql8WNGVdMI6d9Is-guHgDqx1ZIRzbmFwwIN0Y3CCdmI\")\ntrue\n&gt; admin.peers\n[{\n    caps: [\"eth/66\", \"eth/67\", \"eth/68\", \"snap/1\"],\n    enode: \"enode://1cce925dbbe43bf23e4eb9eea3aa5f1634655d308e9df48b3e82e1e00eac7564217836aa5d2d717496be48747fc01a7e2f3a640c32c17e6670de83dabae77236@127.0.0.1:30306?discport=0\",\n    enr: \"enr:-Jy4QNIeBFYOCqu4XwFp9IH4slO75F4oRtQsnClncm82wDbrTDJxlXm_EG3KAUNevf9-hS_6esq3F1111q86KNT3MBaGAZIIJEzng2V0aMfGhDf_6yKAgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQIczpJdu-Q78j5Oue6jql8WNGVdMI6d9Is-guHgDqx1ZIRzbmFwwIN0Y3CCdmI\",\n    id: \"4968f9e3d9869eeb2dd3a2d908f49580a3078bda6064394dd598a937db55b4a9\",\n    name: \"Geth/RAGEtherPrivate/v1.12.2-stable-bed84606/linux-amd64/go1.21.1\",\n    network: {\n      inbound: false,\n      localAddress: \"127.0.0.1:48198\",\n      remoteAddress: \"127.0.0.1:30306\",\n      static: true,\n      trusted: false\n    },\n    protocols: {\n      eth: {\n        version: 68\n      },\n      snap: {\n        version: 1\n      }\n    }\n}]\nRecuperando os saldos no console JavaScript conectado ao node2 agora sim aparece os dados sincronizados:\n&gt; eth.getBalance(\"0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976\")\n\n400100\n&gt; eth.getBalance(\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\")\n\n299900\nMais detalhes de como implantar uma rede privada local do Ethereum podem ser visto em Private Networks.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Clique`</span>"
    ]
  },
  {
    "objectID": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#comandos-finais",
    "href": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#comandos-finais",
    "title": "6  Prática: Criando uma Rede Ethereum Privada: Clique",
    "section": "6.12 Comandos Finais",
    "text": "6.12 Comandos Finais\nA Figura 9.I apresenta os comandos para cada um dos terminais.\n\n\n\n\n\n\nFigure 6.I- Terminais\n\n\n\n\nO comando para o terminal de execução do clef:\n[rogerio@ryzen-nitro .etherprivate-clique]$ /home/rag/go-ethereum-1.12.2/build/bin/clef --chainid 786 --keystore ~/.etherprivate-clique/keystore --configdir ~/.etherprivate-clique/clef --http\nO comando para o terminal de execução do geth node1:\n[rogerio@ryzen-nitro .etherprivate-clique]$ $HOME/go-ethereum-1.12.2/build/bin/geth --networkid 786 --identity \"RAGEtherPrivate\" --datadir ~/.etherprivate-clique/node1 --port 30306 --bootnodes enode://d918c47d1d47ee9b309622038282167b675e81dfda21d7ad0b7467f08f379a694e43fbf09f9e9c70e6b2343c11dab5d34ee07a71e5fb588cdf329f58fca157b1@127.0.0.1:0?discport=30305 --unlock 0x2db017e44b03b37755a4b15e14cd799f83de4c13 --miner.etherbase=0x2db017e44b03b37755a4b15e14cd799f83de4c13 --syncmode full --allow-insecure-unlock --http --http.addr 127.0.0.1 --http.port 8560 --http.api \"eth,net,web3,personal,engine,admin,debug,admin,miner,txpool\" --keystore ~/.etherprivate-clique/keystore --authrpc.addr localhost --authrpc.port 8552 --authrpc.vhosts localhost --nodiscover --maxpeers 15  --miner.gasprice \"1\" --signer=/home/rag/.etherprivate-clique/clef/clef.ipc\nO comando para o terminal de execução do geth node2:\n[rogerio@ryzen-nitro .etherprivate-clique]$ $HOME/go-ethereum-1.12.2/build/bin/geth --networkid 786 --identity \"RAGEtherPrivate\" --datadir ~/.etherprivate-clique/node2 --port 30307 --bootnodes enode://d918c47d1d47ee9b309622038282167b675e81dfda21d7ad0b7467f08f379a694e43fbf09f9e9c70e6b2343c11dab5d34ee07a71e5fb588cdf329f58fca157b1@127.0.0.1:0?discport=30305  --unlock 0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976 --miner.etherbase=0xbb36f26e6c16b3c7ed3d70bfb26f740336b4f976 --syncmode full --allow-insecure-unlock --http --http.addr 127.0.0.1 --http.port 8561 --http.api \"eth,net,web3,personal,engine,admin,debug,admin,miner,txpool\" --keystore ~/.etherprivate-clique/keystore --authrpc.addr localhost --authrpc.port 8553 --authrpc.vhosts localhost --nodiscover --maxpeers 15  --miner.gasprice \"1\" --signer=/home/rag/.etherprivate-clique/clef/clef.ipc\nO comando para o console JavaScript conectado ao node1:\n[rogerio@ryzen-nitro .etherprivate-clique]$ ~/go-ethereum-1.12.2/build/bin/geth attach /home/rag/.etherprivate-clique/node1/geth.ipc\nO comando para o console JavaScript conectado ao node2:\n[rogerio@ryzen-nitro .etherprivate-clique]$ ~/go-ethereum-1.12.2/build/bin/geth attach /home/rag/.etherprivate-clique/node2/geth.ipc\nA Figura 6.II apresenta os terminais com a execução dos respectivos comandos.\n\n\n\n\n\n\nFigure 6.II- Terminais",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Clique`</span>"
    ]
  },
  {
    "objectID": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#leitura-recomendada",
    "href": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#leitura-recomendada",
    "title": "6  Prática: Criando uma Rede Ethereum Privada: Clique",
    "section": "6.13 Leitura Recomendada",
    "text": "6.13 Leitura Recomendada\n\n\n\n\n\n\nLeitura Recomendada\n\n\n\nCapítulo 11: Ethereum 101\nLivro: IMRAN BASHIR. Mastering Blockchain : Distributed Ledger Technology, Decentralization, and Smart Contracts Explained, 2nd Edition.\n\n\n\n\n\n\n\n\nLeitura Recomendada\n\n\n\nCapítulo 12: Futher Ethereum\nLivro: IMRAN BASHIR. Mastering Blockchain : Distributed Ledger Technology, Decentralization, and Smart Contracts Explained, 2nd Edition.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Clique`</span>"
    ]
  },
  {
    "objectID": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#referências-1",
    "href": "aula-06-pratica-rede-ethereum-privada-clique/aula-06-pratica-rede-ethereum-privada-clique.html#referências-1",
    "title": "6  Prática: Criando uma Rede Ethereum Privada: Clique",
    "section": "8.1 Referências",
    "text": "8.1 Referências",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Prática: Criando uma Rede Ethereum Privada: `Clique`</span>"
    ]
  },
  {
    "objectID": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html",
    "href": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html",
    "title": "7  Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask",
    "section": "",
    "text": "7.1 Introdução\nO objetivo dessa prática é instalarmos o Ganache que simula uma rede Ethereum local e o plugin do O Metamask para o browser para interagirmos com as redes que vimos até o momento.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask</span>"
    ]
  },
  {
    "objectID": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#instalando-o-ganache",
    "href": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#instalando-o-ganache",
    "title": "7  Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask",
    "section": "7.2 Instalando o Ganache",
    "text": "7.2 Instalando o Ganache\nO Ganache é uma ferramenta que simula uma rede Ethereum local de maneira rápida e de fácil utilização no desenvolvimento. Uma completa descrição do Ganache pode ser lida no repositório do projeto no github.\nO repositório do Ganache apresenta a mensagem que foi arquivado em Fevereiro de 2024: This repository has been archived by the owner on Feb 26, 2024. It is now read-only. Ainda é possíve instalar a ferramenta para essa prática.\nPodemos instalar a ferramenta Ganache, diretamente do sistema ou fazendo o download no link https://trufflesuite.com/ganache/. A Figura 7.I apresenta a página de download no site do Ganache.\n\n\n\n\n\n\nFigure 7.I- Site do Ganache\n\n\n\nVersões para outros Sistemas Operacionais podem ser baixadas do site https://github.com/trufflesuite/ganache-ui/releases. No meu caso, no GNU/Linux optei por baixar a versão appmimage, versão atual ganache-2.7.1-linux-x86_64.AppImage, que pode ser executada sem a necessidade de instalação.\nApós o download é necessário dar permissão de execução para o arquivo ou com chmod +x ganache-2.7.1-linux-x86_64.appimage ou indo pela interface gráfica e marcando o flag de permissão de execução.\nExecutando o ganache será apresentada a tela presente na Figura 7.II. Na qual podemos escolher as opções de criação de workspace.\n\n\n\n\n\n\nFigure 7.II- Tela inicial do Ganache\n\n\n\nA Figura 7.III mostra a tela de configuração do workspace. Nela podemos nomear o novo workspace e ainda escolher projetos truffle já desenvolvidos.\n\n\n\n\n\n\nFigure 7.III- Configuração do Workspace\n\n\n\nNa próximo aba, Server que é apresentada na Figura 7.IV podemos fazer as configurações do servidor que será iniciado pelo ganache, informações como IP, porta de funcionamento e ID da rede.\n\n\n\n\n\n\nFigure 7.IV- Configuração do Servidor\n\n\n\nA Figura 7.V apresenta a tela de criação de contas, nela é possível definirmos a quantidade de contas a serem criadas e o saldo com o qual cada conta deve ser inicializada.\n\n\n\n\n\n\nFigure 7.V- Definição de Contas\n\n\n\nA Figura 7.VI apresenta a tela de definição do limite e preço do GAS e qual rede deve ser utilizada na simulação.\n\n\n\n\n\n\nFigure 7.VI- Configuração da Chain\n\n\n\nA Figura 7.VII apresenta a configuração de arquivo e mensagens de logs.\n\n\n\n\n\n\nFigure 7.VII- Definições para Logs\n\n\n\nA tela de “Sobre” é apresentada na Figura 7.VIII, mostrando informações sobre o Ganache e a versão instalada.\n\n\n\n\n\n\nFigure 7.VIII- Tela Sobre do Ganache\n\n\n\nApós as configurações, iniciando-se a execução em Start, é apresentada uma tela com a lista de contas criadas e seus respectivos saldos, conforme a Figura 7.IX.\n\n\n\n\n\n\nFigure 7.IX- Tela de Execução\n\n\n\nA tela apresenta um menu superior onde é possível além de listar as contas, também podemos ver as informações dos blocos que foram criados, as transações que foram submetidas, eventuais contratos que foram implantados, eventos e mensagens de log.\nA baixo são apresetadas as informações sobre o ambiente de execução da rede simulada, como current block, gas price, gas limit, rede da qual foi feito o fork, o network id, o endereço de resposta do servidor RPC, status de mineração e o workspace ativo.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask</span>"
    ]
  },
  {
    "objectID": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#instalando-o-metamask",
    "href": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#instalando-o-metamask",
    "title": "7  Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask",
    "section": "7.3 Instalando o Metamask",
    "text": "7.3 Instalando o Metamask\nO Metamask é uma carteira que funciona como plugin para navegadores. O plugin para o Chrome pode ser instalado no link.\nApós a instalação do plugin e iniciando sua execução, a tela da Figura 7.X será apresentada.\n\n\n\n\n\n\nFigure 7.X- Tela Inicial do Metamask\n\n\n\nConcordando com os termos é possível solicitar a criação de uma nova conta Metamask, conforme mostrado na Figura 7.XI.\n\n\n\n\n\n\nFigure 7.XI- Tela Inicial do Metamask\n\n\n\nNa tela apresentada na Figura 7.XII você pode fornecer uma senha para sua conta no Metamask.\n\n\n\n\n\n\nFigure 7.XII- Criação de Conta no Metamask\n\n\n\nA Figura 7.XIII mostra a tela que possibilita que a frase de recuperação da conta do Metamask seja salva.\n\n\n\n\n\n\nFigure 7.XIII- Criação de Conta no Metamask\n\n\n\nA Figura 7.XIV apresenta o aviso de que a carteira foi criada e a Figura 7.XV indica que a instalação foi concluída com sucesso.\n\n\n\n\n\n\nFigure 7.XIV- Aviso de Carteira criada\n\n\n\n\n\n\n\n\n\nFigure 7.XV- Aviso de Instalação Concluída",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask</span>"
    ]
  },
  {
    "objectID": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#executando-o-metamask",
    "href": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#executando-o-metamask",
    "title": "7  Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask",
    "section": "7.4 Executando o Metamask",
    "text": "7.4 Executando o Metamask\nIniciando a execução da extensão Metamask, será solicitado a senha da conta. A Figura 7.XVI a tela de login.\n\n\n\n\n\n\nFigure 7.XVI- Execução do Metamask\n\n\n\nApós efetuar o login o usuário pode selecionar a rede que ele quer se conectar com o Metamask. A Figura 7.XVII apresenta a tela.\n\n\n\n\n\n\nFigure 7.XVII- Tela com a seleção da rede\n\n\n\nAinda é possível habilitar a visualização de redes de teste, conforme a Figura 7.XVIII.\n\n\n\n\n\n\nFigure 7.XVIII- Visualização da lista de redes",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask</span>"
    ]
  },
  {
    "objectID": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#adicionando-a-rede-do-ganache",
    "href": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#adicionando-a-rede-do-ganache",
    "title": "7  Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask",
    "section": "7.5 Adicionando a Rede do Ganache",
    "text": "7.5 Adicionando a Rede do Ganache\nClicando-se em Adicionar rede é possível a adição de novas redes, conforme a Figura 7.XIX e clicando-se em “Adicionar rede manualmente” como na Figura 7.XX.\n\n\n\n\n\n\nFigure 7.XIX- Adicionar uma rede\n\n\n\n\n\n\n\n\n\nFigure 7.XX- Adiconar uma rede manualmente",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask</span>"
    ]
  },
  {
    "objectID": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#importando-contas-do-ganache",
    "href": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#importando-contas-do-ganache",
    "title": "7  Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask",
    "section": "7.6 Importando contas do Ganache",
    "text": "7.6 Importando contas do Ganache\nAs contas criadas pelo Ganache também podem ser importadas. A Figura 7.XXI apresenta a lista de contas.\n\n\n\n\n\n\nFigure 7.XXI- Lista de Contas\n\n\n\nClicando-se em Show Keys é possível copiarmos a chave para a importação da conta. A Figura 7.XXII mostra uma importação por chave privada.\n\n\n\n\n\n\nFigure 7.XXII- Importação por chave privada\n\n\n\nA Figura 7.XXIII apresenta uma lista de conta e nela estão as duas contas que importamos do Ganache e renomeamos para “Conta Ganache 01” e “Conta Ganache 02”.\n\n\n\n\n\n\nFigure 7.XXIII- Listagem de contas",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask</span>"
    ]
  },
  {
    "objectID": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#transferência-de-recursos-entre-contas",
    "href": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#transferência-de-recursos-entre-contas",
    "title": "7  Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask",
    "section": "7.7 Transferência de Recursos entre Contas",
    "text": "7.7 Transferência de Recursos entre Contas\nO Metamask é uma carteira, assim é possível selecionar uma conta e tendo saldo, fazer uma transferência de recursos.\nSelecionando a conta Ganache 01 iremos transferir para a conta Ganache 02. A Figura 7.XXIV apresenta a seleção da conta destinatária.\n\n\n\n\n\n\nFigure 7.XXIV- Seleção do destinatário\n\n\n\nA Figura 7.XXV apresenta a tela de envio, estamos enviando \\(10 ETH\\).\n\n\n\n\n\n\nFigure 7.XXV- Tela de Envio\n\n\n\nA confirmação do envio é feita na tela apresentada nas Figuras - 7.XXVI e - 7.XXVII.\n\n\n\n\n\n\nFigure 7.XXVI- Confirmação do Envio\n\n\n\n\n\n\n\n\n\nFigure 7.XXVII- Confirmação do Envio\n\n\n\nAo confirmarmos o envio a transação aparece na lista de transações conforme mostra a Figura 7.XXVIII e seu status fica como Pendente.\n\n\n\n\n\n\nFigure 7.XXVIII- Transação Pendente\n\n\n\nAo ser processada a transação o status da transação passa a ser Confirmada e o saldo é atualizado para \\(90 ETH\\) conforme a Figura 7.XXIX.\n\n\n\n\n\n\nFigure 7.XXIX- Transação Confirmada\n\n\n\nO saldo da conta destino também é atualizado. A Figura 7.XXX mostra que o saldo foi atualizado para \\(110 ETH\\).\n\n\n\n\n\n\nFigure 7.XXX- Transação Confirmada",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask</span>"
    ]
  },
  {
    "objectID": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#instalando-o-ganache-cli",
    "href": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#instalando-o-ganache-cli",
    "title": "7  Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask",
    "section": "7.8 Instalando o Ganache CLI",
    "text": "7.8 Instalando o Ganache CLI\nUma outra forma de executar a rede simulada do ganache é utilizando o ganache-cli por linha de comando. Vamos baixar o código da última release Versão 7.9.0\nOu instalando diretamente com npm install ganache --global a versão instalada é a \\(7.9.1\\), mas só tem o ganache e o ganache-cli. O ganache-ui está na versão \\(2.7.1\\).\nA rede simulada do ganache pode ser iniciada como o comando apresentado no Código 7.I.\n\n\n\nListing 7.I- Comando de Inicialização do Ganache\n\n\n$ ganache-cli --chain.chainId 1337 --chain.networkId 2525\nganache v7.9.1 (@ganache/cli: 0.10.1, @ganache/core: 0.10.1)\nStarting RPC server\n\nAvailable Accounts\n==================\n(0) 0x6bc36F77B80a3225F43482f7e9A79B2aB904D20A (1000 ETH)\n(1) 0x63f31ad415907984768e0142349d4fa91f75DBFF (1000 ETH)\n(2) 0x5112f12839b3dbaDbfA269c00D47B111399823C3 (1000 ETH)\n(3) 0xD34E64e1250169421bc8f90Aa7A9878985A21cB2 (1000 ETH)\n(4) 0xf670dc566884317174053fc0962dcfab93caa859 (1000 ETH)\n(5) 0xB0eB5b5ff143DDa91C1Fc4E522704e78513490be (1000 ETH)\n(6) 0xfC6BF2645BCB7E21033968b6aB78E22c1e67E4Bd (1000 ETH)\n(7) 0xA06fdAf174893dc46641749D991bFB4b71C520b3 (1000 ETH)\n(8) 0xb88cE5D42AD2685a705eeBda1f1D85750074121e (1000 ETH)\n(9) 0x0d4b20f9d5aA4681F281A318BE33aab77a69B425 (1000 ETH)\n\nPrivate Keys\n==================\n(0) 0x43dcd3a5c8b1fa55a5a76a28132b61673d7dbf2bcb45195cc5b46913a6b2596b\n(1) 0x06b127b2b54722efa1d183f1aa01c676b9cc166ea38052a6cf17bd9d7ee39cf4\n(2) 0x757a60ff9c9dcae6061343a0bf0f72d918e9f890292cc47a973e2bfafcae34aa\n(3) 0x1e07f70327b14d261f804759bc7f483db764029e1331c0980ba78be50362794a\n(4) 0xcbf4f614fd709800293b0f836d509cb2b719b8613658f295d6b7cdb1bda14995\n(5) 0xc3c0018cb79be2f0cd523cdc419d3b1f62369e418fea811b7d388355b0bccbdc\n(6) 0x0491bfb366bddf689d3d876a5e4391d9e94b7d1176134711d3f6ed2a315c9e00\n(7) 0xc8c10efd89ec8d03e5c93ce5650dc69295c398337b1ea7b42fd3b46f01bd87cb\n(8) 0xce68c07a81abaf5af757f30b45ff6acb506542ee089b42d6b485b0cc6247c0a0\n(9) 0xff7a6a6f23271d47210aadcce3d077c6b64561f814373db03921f7727b02940e\n\nHD Wallet\n==================\nMnemonic:      crucial dwarf dilemma fit steak edge comfort submit post try across side\nBase HD Path:  m/44'/60'/0'/0/{account_index}\n\nDefault Gas Price\n==================\n2000000000\n\nBlockGas Limit\n==================\n30000000\n\nCall Gas Limit\n==================\n50000000\n\nChain\n==================\nHardfork: shanghai\nId:       1337\n\nRPC Listening on 127.0.0.1:8545\n\n\n\nDa mesma maneira a rede e as contas podem ser adicionadas no Metamask.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask</span>"
    ]
  },
  {
    "objectID": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#adicionado-as-contas-da-rede-de-teste-sepolia",
    "href": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#adicionado-as-contas-da-rede-de-teste-sepolia",
    "title": "7  Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask",
    "section": "7.9 Adicionado as contas da Rede de Teste Sepolia",
    "text": "7.9 Adicionado as contas da Rede de Teste Sepolia\nOutra redes podem ser utilizadas no Metamask, como por exemplo a rede de teste Sepolia ou a Rede Ethereum Privada Local que criamos.\nNo caso da Sepolia já aparece lista como rede de teste. Lembra que sincronizamos na primeira prática a rede de teste Sepolia e criamos duas contas para fazermos transferências.\nUm teste interessante também é vermos se as contas que criamos na rede de teste Sepolia foram sincronizadas com a rede. O Código 7.II apresenta os arquivos das contas que criamos localmente na rede de teste.\n\n\n\nListing 7.II- Lista das contas criadas na rede de teste Sepolia\n\n\n[sepolia]$ cd keystore/\n[keystore]$ ls\nUTC--2023-04-17T00-51-24.036052785Z--a9e98368b44b371cec7d205f9fe2b074b6134c95\nUTC--2023-04-17T00-53-06.379873395Z--c061b852a26bedec5bd457b88c031c46a622f4ab\n[keystore]$ \n\n\n\nAs contas podem ser adicionadas no Metamask utilizando a opção de importação do arquivo JSON. Importamos as duas contas como Conta Sepolia 01 e Conta Sepolia 02.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask</span>"
    ]
  },
  {
    "objectID": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#solicitação-de-recursos-para-o-sepolia-faucet",
    "href": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#solicitação-de-recursos-para-o-sepolia-faucet",
    "title": "7  Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask",
    "section": "7.10 Solicitação de Recursos para o Sepolia Faucet",
    "text": "7.10 Solicitação de Recursos para o Sepolia Faucet\nCom a Conta Sepolia 01, com id a9e98368b44b371cec7d205f9fe2b074b6134c95 podemos fazer uma solicitação no Sepolia Faucet. A Figura 7.XXXI mostra a tela e transação que foi criada com a requisição de recursos ao faucet.\n\n\n\n\n\n\nFigure 7.XXXI- Sepolia Faucet\n\n\n\nPodemos ver que a transação 0xcced83e15dd6d227a6242ae4f5d46f0c977598ae66ea8b5c4b4fa6d439042216 foi criada e seus detalhes podem ser vistos no etherscan. A Figura 7.XXXII mostra detalhes da transação gerada pelo faucet para a Conta Sepolia 01.\n\n\n\n\n\n\nFigure 7.XXXII- Detalhes da transação no Etherscan\n\n\n\nPercebam que na interface do Metamask a transação de transferência de \\(0.5SepoliaETH\\) aparece junto com outras solicitações anteriores que fizemos ao faucet. A Figura 7.XXXIII mostra as transações de valores recebidos na Conta Sepolia 01.\n\n\n\n\n\n\nFigure 7.XXXIII- Transações no Metamask para a Conta Sepolia 01\n\n\n\nAs transações direcionadas à Conta Sepolia 01 (a9e98368b44b371cec7d205f9fe2b074b6134c95) podem ser vistas no etherscan através do link. A Figura 7.XXXIV mostra a tela que será apresentada.\n\n\n\n\n\n\nFigure 7.XXXIV- Transações recebidas pela Conta Sepolia 01",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask</span>"
    ]
  },
  {
    "objectID": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#transferindo-recursos-entre-as-contas-sepolia",
    "href": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#transferindo-recursos-entre-as-contas-sepolia",
    "title": "7  Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask",
    "section": "7.11 Transferindo Recursos entre as contas Sepolia",
    "text": "7.11 Transferindo Recursos entre as contas Sepolia\nSe transferirmos \\(0,251SepoliaETH\\) da Conta Sepolia 01 para a Conta Sepolia 02 a transação de transferência irá aparecer. A Figura 7.XXXV apresenta a tela incial da transferência.\n\n\n\n\n\n\nFigure 7.XXXV- Transferência para a Conta Sepolia 02\n\n\n\nApós a confirmação apresentada na Figura 7.XXXVI a transação ficou momentaneamente com o status Pendente e depois passou a Confirmada.\n\n\n\n\n\n\nFigure 7.XXXVI- Confirmação do Envio\n\n\n\nClicando na transação na tela que lista as transações apresentada na Figura 7.XXXVII podemos ver os detalhes da transação de transferência que acabamos de fazer.\n\n\n\n\n\n\nFigure 7.XXXVII- Lista de Transações\n\n\n\nOs detalhes da transação 0x4dfba552141b945e2d9189957d1b199fc38ac36a850a3f9f11e78be8223d093f podem ser vistos na Figura 7.XXXVIII da tela do Metamask e na Figura 7.XXXIX no etherscan..\n\n\n\n\n\n\nFigure 7.XXXVIII- Detalhe da Transação no Metamask\n\n\n\n\n\n\n\n\n\nFigure 7.XXXIX- Detalhe da Transação no Metamask\n\n\n\nNa interface do Metamask podemos ver a atualização do saldo e o registro da transação de recebimento, conforme a Figura 7.XL.\n\n\n\n\n\n\nFigure 7.XL- Saldo da Conta Sepolia 02 atualizado no Metamask",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask</span>"
    ]
  },
  {
    "objectID": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#adicionado-outras-redes",
    "href": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#adicionado-outras-redes",
    "title": "7  Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask",
    "section": "7.12 Adicionado outras Redes",
    "text": "7.12 Adicionado outras Redes\nA Rede Ethereum Privada Local pode ser adiciona da mesma forma que adicionamos o Ganache fornecendo o endereço que o servidor irá responder às requisições RPC.\nAs transações que realizarmos com as contas importadas dessa rede poderão ser vistas, mineradas e atualizarão os saldos das contas na Rede Ethereum Privada Local.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask</span>"
    ]
  },
  {
    "objectID": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#interagindo-com-o-metamask-pelo-console-do-browser",
    "href": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#interagindo-com-o-metamask-pelo-console-do-browser",
    "title": "7  Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask",
    "section": "7.13 Interagindo com o Metamask pelo Console do Browser",
    "text": "7.13 Interagindo com o Metamask pelo Console do Browser\nInstalado o Metamask ele injeta o provedor de API usando o objeto window.ethereum que estará disponível no contexto do browser e pode ser usado para interagirmos com o blockchain.\nUm exemplo de interação com a API do Ethereum usando o console JavaScript no Chrome pode ser visto na Figura 7.XLI.\n\n\n\n\n\n\nFigure 7.XLI- Console do Browser\n\n\n\nO detalhe do Console pode ser visto na Figura 7.XLII.\n\n\n\n\n\n\nFigure 7.XLII- Console do Browser",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask</span>"
    ]
  },
  {
    "objectID": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#leitura-recomendada",
    "href": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#leitura-recomendada",
    "title": "7  Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask",
    "section": "7.14 Leitura Recomendada",
    "text": "7.14 Leitura Recomendada\n\n\n\n\n\n\nLeitura Recomendada\n\n\n\nCapítulo 11: Ethereum 101\nLivro: IMRAN BASHIR. Mastering Blockchain : Distributed Ledger Technology, Decentralization, and Smart Contracts Explained, 2nd Edition.\n\n\n\n\n\n\n\n\nLeitura Recomendada\n\n\n\nCapítulo 12: Futher Ethereum\nLivro: IMRAN BASHIR. Mastering Blockchain : Distributed Ledger Technology, Decentralization, and Smart Contracts Explained, 2nd Edition.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask</span>"
    ]
  },
  {
    "objectID": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#referências",
    "href": "aula-07-pratica-simulador-ganache-metamask/aula-07-pratica-simulador-ganache-metamask.html#referências",
    "title": "7  Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask",
    "section": "8.1 Referências",
    "text": "8.1 Referências",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Prática: Simulando uma Rede Ethereum Local: Ganache e o Metamask</span>"
    ]
  },
  {
    "objectID": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html",
    "href": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html",
    "title": "8  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Estudo sobre Solidity e solc",
    "section": "",
    "text": "8.1 Introdução\nNo desenvolvimento de Contratos Inteligentes iremos utilizar a linguagem Solidity. O Compilador para a linguagem Solidity é o solc. O solc converte código de alto nível dos contratos, escritos em Solidity, para bytecode da Ethereum Virtual Machine EVM.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks _Ethereum_: Estudo sobre `Solidity` e `solc`</span>"
    ]
  },
  {
    "objectID": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#instalando-o-solc",
    "href": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#instalando-o-solc",
    "title": "8  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Estudo sobre Solidity e solc",
    "section": "8.2 Instalando o solc",
    "text": "8.2 Instalando o solc\nO comando para instalação do solc em distribuições Ubuntu ou derivados do Debian:\n$ sudo add-apt-repository ppa:ethereum/ethereum\n$ sudo apt-get update\n$ sudo apt-get install solc\nOutras distribuições derivadas do Arch Linux, o pacote solidity é deve ser instalado:\n$ pacman -S solidity\nFeita a instalação, para verificar a versão instalada execute o comando:\n$ solc --version\nsolc, the solidity compiler commandline interface\nVersion: 0.8.27+commit.40a35a09.Linux.g++\nUma outra opção é executar o solc via docker. O link apresenta as formas de instalação do Compilador Solidity. E mostra como uma das possibilidades o uso do docker para que uma versão específica possa ser instalada e executada isoladamente no dentro do container. No Código 8.I apresenta o resultado da execução do solc na versão atual, que não estava instalada ainda e docker fez o download e instalação automaticamente.\n\n\n\nListing 8.I- Executando o solc via docker\n\n\n$ sudo docker run ethereum/solc:stable --version\nUnable to find image 'ethereum/solc:stable' locally\nstable: Pulling from ethereum/solc\n4357c739450e: Pull complete \nDigest: sha256:c74c43c73e64f14d43dc4c61776375abe3609c0118ef3eb34d99b59696647256\nStatus: Downloaded newer image for ethereum/solc:stable\nsolc, the solidity compiler commandline interface\nVersion: 0.8.27+commit.40a35a09.Linux.g++\n$ \n\n\n\nNo Código 8.II apresenta a execução do solc via docker com um exemplo de saída na stdout definindo um diretório de trabalho -w e um volume virtual -v, estou utilizando o diretório onde estamos executando, mas um outro diretório poderia ser definido. A execução também é feita utilizando outra versão do solc, a versão 0.8.21.\n\n\n\nListing 8.II- Executando as versões no docker\n\n\n$ sudo docker run -v $(pwd):$(pwd) -w $(pwd) -i ethereum/solc:0.8.21 --version\nsolc, the solidity compiler commandline interface\nVersion: 0.8.21+commit.40a35a09.Linux.g++\n$\n\n\n\nTodas as versões e imagens disponíveis do solc podem ser conferidas no Docker Hub. Detalhes da versão 0.8.21 podem ser vistos no link.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks _Ethereum_: Estudo sobre `Solidity` e `solc`</span>"
    ]
  },
  {
    "objectID": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#compilando-um-exemplo",
    "href": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#compilando-um-exemplo",
    "title": "8  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Estudo sobre Solidity e solc",
    "section": "8.3 Compilando um Exemplo",
    "text": "8.3 Compilando um Exemplo\nPara verificar algumas funcionalidades do compilador solc vamos criar um contrato simples, com o nome Addition.sol e com o conteúdo presente no Código 8.III.\n\n\n\nListing 8.III- Exemplo de Contrato em Solidity\n\n\npragma solidity ^0.8.28;\n\ncontract Addition {\n   uint8 x;\n\n   function addx(uint8 y, uint8 z ) public {\n      x = y + z;\n   }\n   function retrievex() view public returns (uint8) {\n      return x;\n   }\n}\n\n\n\nMais detalhes do uso do solc podem ser vistos em Using the Compiler.\nSalve esse arquivo em um diretório Addition e acesse esse diretório:\n$ mkdir Addition\n$ cd Addition\n[Addition]$ ls \nAddition.sol\n[Addition]$\nSe a versão do solidity na sua máquina for diferente, basta ajustar no arquivo fonte colocando a versão correta no pragma solidity.\nPara a compilação simples execute:\n[Addition]$ solc Addition.sol \nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: &lt;SPDX-License&gt;\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--&gt; Addition.sol\n\n[Addition]$ \nEsse \"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing 'SPDX-License-Identifier: &lt;SPDX-License&gt;'  to each source file. Use 'SPDX-License-Identifier: UNLICENSED' for non-open-source code. Please see https://spdx.org for more information.\" está avisando para colocar uma SPDX-License. Uma lista completa das licenças e seus identificadores pode ser vista em https://spdx.org/licenses/.\nBasta adicionar um comentário na primeira linha com o identificador conforme o Código 9.VI.\n\n\n\nListing 8.IV- Exemplo de Contrato em Solidity\n\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\ncontract Addition {\n   uint8 x;\n\n   function addx(uint8 y, uint8 z ) public {\n      x = y + z;\n   }\n   function retrievex() view public returns (uint8) {\n      return x;\n   }\n}\n\n\n\nIncluindo-se a linha de especificação da licença a saída de uma compilação simples será:\n[Addition]$ solc Addition.sol \nCompiler run successful. No output generated.\n[Addition]$",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks _Ethereum_: Estudo sobre `Solidity` e `solc`</span>"
    ]
  },
  {
    "objectID": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#visualizando-o-bytecode-gerado",
    "href": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#visualizando-o-bytecode-gerado",
    "title": "8  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Estudo sobre Solidity e solc",
    "section": "8.4 Visualizando o bytecode gerado",
    "text": "8.4 Visualizando o bytecode gerado\nO solc tem alguns parâmetros interessantes que nos permite verificar o formato binário do contrato, que é a sequência dos bytecodes gerados para a EVM:\n[Addition]$ solc --bin Addition.sol\nWarning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: &lt;SPDX-License&gt;\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--&gt; Addition.sol\n\n\n======= Addition.sol:Addition =======\nBinary:\n608060405234801561001057600080fd5b506101f6806100206000396000f3fe608060405234801561001057\n600080fd5b50600436106100365760003560e01c806336718d801461003b578063ac04e0a014610057575b60\n0080fd5b610055600480360381019061005091906100f2565b610075565b005b61005f61009e565b60405161\n006c9190610141565b60405180910390f35b8082610081919061018b565b6000806101000a81548160ff0219\n16908360ff1602179055505050565b60008060009054906101000a900460ff16905090565b600080fd5b6000\n60ff82169050919050565b6100cf816100b9565b81146100da57600080fd5b50565b6000813590506100ec81\n6100c6565b92915050565b60008060408385031215610109576101086100b4565b5b60006101178582860161\n00dd565b9250506020610128858286016100dd565b9150509250929050565b61013b816100b9565b82525050\n565b60006020820190506101566000830184610132565b92915050565b7f4e487b7100000000000000000000\n000000000000000000000000000000000000600052601160045260246000fd5b6000610196826100b9565b91\n506101a1836100b9565b9250828201905060ff8111156101ba576101b961015c565b5b9291505056fea26469\n70667358221220e0ec16eaf684603f4f7c74f327a27e4a1a981dfac0cb258479ffe452abda2e4964736f6c63\n430008110033",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks _Ethereum_: Estudo sobre `Solidity` e `solc`</span>"
    ]
  },
  {
    "objectID": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#estimando-a-taxa-gas",
    "href": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#estimando-a-taxa-gas",
    "title": "8  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Estudo sobre Solidity e solc",
    "section": "8.5 Estimando a taxa gas",
    "text": "8.5 Estimando a taxa gas\nComo uma taxa de gas é cobrada para cada operação que a EVM executa, é uma boa prática estimar o gas antes de implantar um contrato em uma rede ativa. O parâmetro --gas pode ser utilizado para fazer essa estimativa.\n[Addition]$ solc --gas Addition.sol\n======= Addition.sol:Addition =======\nGas estimation:\nconstruction:\n   147 + 100400 = 100547\nexternal:\n   addx(uint8,uint8):   infinite\n   retrievex(): 2479",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks _Ethereum_: Estudo sobre `Solidity` e `solc`</span>"
    ]
  },
  {
    "objectID": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#gerando-a-abi",
    "href": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#gerando-a-abi",
    "title": "8  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Estudo sobre Solidity e solc",
    "section": "8.6 Gerando a ABI",
    "text": "8.6 Gerando a ABI\nA Application Binary Interface (ABI) é uma forma padrão de interagir com os contratos, sabermos como os métodos estão disponíveis e quais parâmetros utilizam. Para a gerar a ABI do contrato utilize o solc com o parâmetro --abi, conforme o Código 8.VII.\n\n\n\nListing 8.V- Visualizando a ABI\n\n\n[Addition]$ solc --abi Addition.sol\n======= Addition.sol:Addition =======\nContract JSON ABI\n[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"y\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\n\"name\":\"z\",\"type\":\"uint8\"}],\"name\":\"addx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\n\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrievex\",\"outputs\":[{\"internalType\":\"uint8\",\n\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks _Ethereum_: Estudo sobre `Solidity` e `solc`</span>"
    ]
  },
  {
    "objectID": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#processo-de-compilação-completo",
    "href": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#processo-de-compilação-completo",
    "title": "8  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Estudo sobre Solidity e solc",
    "section": "8.7 Processo de Compilação Completo",
    "text": "8.7 Processo de Compilação Completo\nO processo de compilação completo do contrato Addition.sol pode ser feito com o comando:\n[Addition]$ solc --bin --abi -o bin Addition.sol\nCompiler run successful. Artifact(s) can be found in directory \"bin\".\nSe erros ocorrerem serão mostrados no terminal, caso contrário o compilador irá mostrar uma mensagem de sucesso. Com o parâmetro de diretório de saída -o bin, serão gerados os arquivos no diretório bin:\n\nAddition.abi: Contém a ABI do contrato no formato JSON.\nAddition.bin: Contém a representação binária do código do contrato.\n\nO conteúdo de cada um dos arquivos pode ser visualizado. Código 8.VI apresenta o binário gerado.\n\n\n\nListing 8.VI- Visualizando o código binário\n\n\n[Addition]$ cat bin/Addition.bin\n608060405234801561001057600080fd5b506101f6806100206000396000f3fe608060405234801561001057\n600080fd5b50600436106100365760003560e01c806336718d801461003b578063ac04e0a014610057575b60\n0080fd5b610055600480360381019061005091906100f2565b610075565b005b61005f61009e565b60405161\n006c9190610141565b60405180910390f35b8082610081919061018b565b6000806101000a81548160ff0219\n16908360ff1602179055505050565b60008060009054906101000a900460ff16905090565b600080fd5b6000\n60ff82169050919050565b6100cf816100b9565b81146100da57600080fd5b50565b6000813590506100ec81\n6100c6565b92915050565b60008060408385031215610109576101086100b4565b5b60006101178582860161\n00dd565b9250506020610128858286016100dd565b9150509250929050565b61013b816100b9565b82525050\n565b60006020820190506101566000830184610132565b92915050565b7f4e487b7100000000000000000000\n000000000000000000000000000000000000600052601160045260246000fd5b6000610196826100b9565b91\n506101a1836100b9565b9250828201905060ff8111156101ba576101b961015c565b5b9291505056fea26469\n70667358221220e0ec16eaf684603f4f7c74f327a27e4a1a981dfac0cb258479ffe452abda2e4964736f6c63\n430008110033\n\n\n\nA ABI gerada para o contrato pode ser vista no Código 8.VII.\n\n\n\nListing 8.VII- Visualizando o código ABI\n\n\n[Addition]$ cat bin/Addition.abi \n[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"y\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\n\"name\":\"z\",\"type\":\"uint8\"}],\"name\":\"addx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\n\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrievex\",\"outputs\":[{\"internalType\":\"uint8\",\n\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks _Ethereum_: Estudo sobre `Solidity` e `solc`</span>"
    ]
  },
  {
    "objectID": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#visualizando-os-opcodes",
    "href": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#visualizando-os-opcodes",
    "title": "8  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Estudo sobre Solidity e solc",
    "section": "8.8 Visualizando os Opcodes",
    "text": "8.8 Visualizando os Opcodes\nOs opcodes da instruções geradas para a EVM podem ser visualizados compilando-se com o parâmetro --opcodes:\n[Addition]$ solc --opcodes Addition.sol\n\n======= Addition.sol:Addition =======\nOpcodes:\nPUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E5 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x36718D80 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xAC04E0A0 EQ PUSH2 0x54 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0xE8 JUMP JUMPDEST PUSH2 0x72 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C PUSH2 0x9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69 SWAP2 SWAP1 PUSH2 0x135 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 DUP3 PUSH2 0x7E SWAP2 SWAP1 PUSH2 0x17B JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC7 DUP2 PUSH2 0xB2 JUMP JUMPDEST DUP2 EQ PUSH2 0xD1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE2 DUP2 PUSH2 0xBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFE JUMPI PUSH2 0xFD PUSH2 0xAE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10B DUP6 DUP3 DUP7 ADD PUSH2 0xD4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11C DUP6 DUP3 DUP7 ADD PUSH2 0xD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x12F DUP2 PUSH2 0xB2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x148 PUSH0 DUP4 ADD DUP5 PUSH2 0x126 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x185 DUP3 PUSH2 0xB2 JUMP JUMPDEST SWAP2 POP PUSH2 0x190 DUP4 PUSH2 0xB2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x1A9 JUMPI PUSH2 0x1A8 PUSH2 0x14E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xE0 SWAP1 0xC1 PUSH19 0xC05C2CA051070C65ED8CFCD1170FEA74963B6C LT 0xD9 0xD4 DUP12 SELFDESTRUCT 0xAA PUSH25 0x2764736F6C634300081B003300000000000000000000000000 \n$",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks _Ethereum_: Estudo sobre `Solidity` e `solc`</span>"
    ]
  },
  {
    "objectID": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#gerando-código-assembly-da-evm",
    "href": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#gerando-código-assembly-da-evm",
    "title": "8  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Estudo sobre Solidity e solc",
    "section": "8.9 Gerando Código assembly da EVM",
    "text": "8.9 Gerando Código assembly da EVM\nUm arquivo com o código de montagem para a EVM pode ser gerado compilando-se com o parâmetro --asm:\n[Addition]$ solc --asm Addition.sol\n======= Addition.sol:Addition =======\nEVM assembly:\n    /* \"Addition.sol\":57:236  contract Addition {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\n   /* Parte do Codigo foi suprimida */\n\n    auxdata: 0xa2646970667358221220e5f1966e6e792d9172ed599ecf6962ab997f6ed71728a96f12ff8bce\n    8e7aa41c64736f6c63430008150033\n}",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks _Ethereum_: Estudo sobre `Solidity` e `solc`</span>"
    ]
  },
  {
    "objectID": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#otimizando-o-código",
    "href": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#otimizando-o-código",
    "title": "8  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Estudo sobre Solidity e solc",
    "section": "8.10 Otimizando o Código",
    "text": "8.10 Otimizando o Código\nAntes de implementar seu contrato, ative o otimizador ao compilar usando o parâmetro --optimize. Por padrão, o otimizador otimizará o contrato assumindo que ele é chamado \\(200\\) vezes ao longo de seu tempo de vida (mais especificamente, ele pressupõe que cada opcode seja executado cerca de \\(200\\) vezes).\n[Addition]$ solc --bin --optimize Addition.sol &gt; Addition.sol.opt.bin\n[Addition]$ solc --bin Addition.sol &gt; Addition.sol.nop.bin\n[Addition]$ ls\nAddition.sol          Addition.sol.nop.evm  Addition.sol.opt.evm\nAddition.sol.nop.bin  Addition.sol.opt.bin  bin\nVerificando se o tamanho do arquivo mudou com a opção de otimização.\n[Addition]$ cat Addition.sol.nop.bin \n\n======= Addition.sol:Addition =======\nBinary:\n608060405234801561000f575f80fd5b506101e58061001d5f395ff3fe608060405234801561000f575f80fd\n5b5060043610610034575f3560e01c806336718d8014610038578063ac04e0a014610054575b5f80fd5b6100\n52600480360381019061004d91906100e8565b610072565b005b61005c61009a565b60405161006991906101\n35565b60405180910390f35b808261007e919061017b565b5f806101000a81548160ff021916908360ff1602\n179055505050565b5f805f9054906101000a900460ff16905090565b5f80fd5b5f60ff82169050919050565b\n6100c7816100b2565b81146100d1575f80fd5b50565b5f813590506100e2816100be565b92915050565b5f80\n604083850312156100fe576100fd6100ae565b5b5f61010b858286016100d4565b925050602061011c858286\n016100d4565b9150509250929050565b61012f816100b2565b82525050565b5f6020820190506101485f8301\n84610126565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000\n005f52601160045260245ffd5b5f610185826100b2565b9150610190836100b2565b9250828201905060ff81\n11156101a9576101a861014e565b5b9291505056fea2646970667358221220e5f1966e6e792d9172ed599ecf\n6962ab997f6ed71728a96f12ff8bce8e7aa41c64736f6c63430008150033\n[Addition]$ cat Addition.sol.opt.bin \n\n======= Addition.sol:Addition =======\nBinary:\n608060405234801561000f575f80fd5b5061011c8061001d5f395ff3fe6080604052348015600e575f80fd5b5\n0600436106030575f3560e01c806336718d80146034578063ac04e0a0146045575b5f80fd5b6043603f366004\n6090565b605d565b005b5f546040805160ff9092168252519081900360200190f35b6065818360bc565b5f805\n460ff191660ff929092169190911790555050565b803560ff81168114608b575f80fd5b919050565b5f806040\n838503121560a0575f80fd5b60a783607c565b915060b360208401607c565b90509250929050565b60ff81811\n6838216019081111560e057634e487b7160e01b5f52601160045260245ffd5b9291505056fea2646970667358\n221220e3fcb6de1b60e34fc67ddc7b0261e658b6f68bdd243310b77c486da33ef634c764736f6c63430008150\n033\n[Addition]$\nSe você deseja que a implantação do contrato inicial seja mais barata e as execuções posteriores da função mais caras, defina-o como --optimize-runs=1.\nSe você espera muitas transações e não se importa com custos de implantação e tamanho de saída mais altos, defina --optimize-runs para um número alto. Este parâmetro tem efeitos no seguinte (isso pode mudar no futuro):\n\no tamanho da pesquisa binária na rotina de despacho de função.\na forma como constantes como números grandes ou strings são armazenadas.\n\nVerifique se mudanças aconteceram com os arquivos gerados, sem otimização (nop), com \\(1\\) (opt1) e com \\(1000000\\) (opt1000000) no parâmetro de otimização.\n[Addition]$ solc --bin Addition.sol &gt; Addition.sol.nop.bin\n\n[Addition]$ solc --bin --optimize --optimize-runs=1 Addition.sol &gt; Addition.sol.opt1.bin\n\n[Addition]$ solc --bin --optimize --optimize-runs=1000000 Addition.sol &gt; Addition.sol.opt1000000.bin",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks _Ethereum_: Estudo sobre `Solidity` e `solc`</span>"
    ]
  },
  {
    "objectID": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#gerando-código-para-versões-da-evm",
    "href": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#gerando-código-para-versões-da-evm",
    "title": "8  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Estudo sobre Solidity e solc",
    "section": "8.11 Gerando Código para versões da EVM",
    "text": "8.11 Gerando Código para versões da EVM\nQuando compilamos o código de um contrato podemos especificar a versão da Ethereum Virtual Machine alvo para evitar características e comportamentos particulares. O parâmetro --evm-version &lt;VERSION&gt; pode ser definido com VERSION assumindo um dos valores: homestead, tangerineWhistle, spuriousDragon, byzantium, constantinople, petersburg, istanbul, berlin, london, paris, shanghai.\n[Addition]$ solc --evm-version &lt;VERSION&gt; contract.sol\nSalve o conteúdo em um script.sh ou execute diretamente no terminal.\n#!/bin/bash\nfor version in homestead tangerineWhistle spuriousDragon byzantium constantinople petersburg istanbul berlin london paris shanghai\ndo\n   solc --opcodes --evm-version ${version} Addition.sol &gt; Addition.sol.${version}.opcodes\ndone\nPara comparar duas versões de códigos:\n[Addition]$ solc --asm --evm-version berlin Addition.sol | diff -u - &lt;(solc --asm --evm-version shanghai Addition.sol)\n--- -   2023-09-19 18:12:08.460565670 -0300\n+++ /dev/fd/63  2023-09-19 18:12:08.451646055 -0300\n@@ -436,6 +436,6 @@\n       pop\n       jump     // out\n \n-    auxdata: 0xa2646970667358221220544d507b7aed2fcb193a2143aa69a7bba83bb2bddf725da5759765d1f015\nd92564736f6c63430008150033\n+    auxdata: 0xa2646970667358221220e5f1966e6e792d9172ed599ecf6962ab997f6ed71728a96f12ff8bce8e7a\na41c64736f6c63430008150033\n }\nComparando a quantidade de gas para cada versão de código:\n[Addition]$ solc --gas --evm-version berlin Addition.sol | diff -u - &lt;(solc --gas --evm-version shanghai Addition.sol)\n--- -   2023-09-19 19:09:17.295326849 -0300\n+++ /dev/fd/63  2023-09-19 19:09:17.280724897 -0300\n@@ -2,7 +2,7 @@\n ======= Addition.sol:Addition =======\n Gas estimation:\n construction:\n-   147 + 100400 = 100547\n+   145 + 97000 = 97145\n external:\n    addx(uint8,uint8):  infinite\n-   retrievex():        2479\n+   retrievex():        2473\n[Addition]$ \nMais detalhes sobre targets podem ser vistos em https://docs.soliditylang.org/en/v0.8.21/using-the-compiler.html#target-options.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks _Ethereum_: Estudo sobre `Solidity` e `solc`</span>"
    ]
  },
  {
    "objectID": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#visualizando-uma-saída-mais-completa",
    "href": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#visualizando-uma-saída-mais-completa",
    "title": "8  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Estudo sobre Solidity e solc",
    "section": "8.12 Visualizando uma saída mais completa",
    "text": "8.12 Visualizando uma saída mais completa\nPodemos combinar os parâmetros para ter uma saída mais completa separando em arquivos:\n[rag@ryzen-nitro ]$ solc -o output-dir --bin --ast-compact-json --abi --asm --ir --gas --overwrite --pretty-json Addition.sol\nPara uma lista completa de parâmetros aceitos pelo solc execute no teminal o comando solc --help.\nMais detalhes do uso do solc podem ser vistos na página da documentação: Using the Compiler.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks _Ethereum_: Estudo sobre `Solidity` e `solc`</span>"
    ]
  },
  {
    "objectID": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#linguagem-solidity",
    "href": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#linguagem-solidity",
    "title": "8  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Estudo sobre Solidity e solc",
    "section": "8.13 Linguagem Solidity",
    "text": "8.13 Linguagem Solidity\nSolidity é profundamente influencida por C++, mas também carrega conceitos de linguagens como Python, JavaScript e outras.\nA documentação da Linguagem Solidity pode ser acessada no link.\nA versão atual do compilador é a v0.8.31.\n\nA sintaxe da linguagem Solidity (Gramática) pode ser acessada no link.\nUma documentação sobre Solidity está disponível na seção “The Solidity language”, no Capítulo 14, página \\(448\\) do livro texto (178948620180101?) disponível no link Capítulo-14-Development-Tools-and-Frameworks.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks _Ethereum_: Estudo sobre `Solidity` e `solc`</span>"
    ]
  },
  {
    "objectID": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#atividade-compilar-exemplo-e-testar-comandos-solidity",
    "href": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#atividade-compilar-exemplo-e-testar-comandos-solidity",
    "title": "8  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Estudo sobre Solidity e solc",
    "section": "8.14 Atividade: Compilar Exemplo e testar comandos Solidity",
    "text": "8.14 Atividade: Compilar Exemplo e testar comandos Solidity\nAbra a Remix IDE e digite o código do contrato do exemplo ou utilize a API que aceita passagem de parâmetros na URL.\nO código do contrato exemplo pode ser transformado em Base64 e enviado ao Remix via URL conforme o link.\n[Addition]$ cat Addition.sol | base64\nLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVApwcmFnbWEgc29saWRpdHkgXjAuOC4yMTsKCmNvbnRyYWN0IEFkZGl0aW9uIHsKICAgdWludDggeDsKCiAgIGZ1bmN0aW9uIGFkZHgodWludDggeSwgdWludDggeiApIHB1YmxpYyB7CiAgICAgIHggPSB5ICsgejsKICAgfQogICBmdW5jdGlvbiByZXRyaWV2ZXgoKSB2aWV3IHB1YmxpYyByZXR1cm5zICh1aW50OCkgewogICAgICByZXR1cm4geDsKICAgfQp9Cg==\nO código pode ser passado na URL do Remix com o parâmetro code, conforme no código.\nhttps://remix.ethereum.org/?#language=solidity&version=soljson-v0.8.31+commit.7893614a.js&code=Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVApwcmFnbWEgc29saWRpdHkgXjAuOC4yMTsKCmNvbnRyYWN0IEFkZGl0aW9uIHsKICAgdWludDggeDsKCiAgIGZ1bmN0aW9uIGFkZHgodWludDggeSwgdWludDggeiApIHB1YmxpYyB7CiAgICAgIHggPSB5ICsgejsKICAgfQogICBmdW5jdGlvbiByZXRyaWV2ZXgoKSB2aWV3IHB1YmxpYyByZXR1cm5zICh1aW50OCkgewogICAgICByZXR1cm4geDsKICAgfQp9Cg==&lang=en&optimize=false&runs=200&evmVersion=shanghai&call=fileManager\n\nAo chamar a URL a interface do Remix IDE será carregada com o arquivo do contrato que foi passado codificado no parâmetro code. A Figura 8.I apresenta o contrato carregado no editor da Remix IDE.\n\n\n\n\n\n\nFigure 8.I- Contrato Carregado na Remix IDE\n\n\n\nNa interface do Remix IDE é possível escolher entre as versões do compilador solc:\n\"0.1.1+commit.6ff4cd6\", \"0.1.2+commit.d0d36e3\", \"0.1.3+commit.028f561d\", \"0.1.4+commit.5f6c3cdf\", \"0.1.5+commit.23865e39\", \"0.1.6+commit.d41f8b7c\", \"0.1.7+commit.b4e666cc\", \"0.2.0+commit.4dc2445e\", \"0.2.1+commit.91a6b35f\", \"0.2.2+commit.ef92f566\", \"0.3.0+commit.11d67369\", \"0.3.1+commit.c492d9be\", \"0.3.2+commit.81ae2a78\", \"0.3.3+commit.4dc1cb14\", \"0.3.4+commit.7dab8902\", \"0.3.5+commit.5f97274a\", \"0.3.6+commit.3fc68da5\", \"0.4.0+commit.acd334c9\", \"0.4.10+commit.f0d539ae\", \"0.4.11+commit.68ef5810\", \"0.4.15+commit.8b45bddb\", \"0.4.16+commit.d7661dd9\", \"0.4.17+commit.bdeb9e52\", \"0.4.18+commit.9cf6e910\", \"0.4.19+commit.c4cbbb05\", \"0.4.1+commit.4fc6fc2c\", \"0.4.20+commit.3155dd80\", \"0.4.21+commit.dfe3193c\", \"0.4.22+commit.4cb486ee\", \"0.4.23+commit.124ca40d\", \"0.4.24+commit.e67f0147\", \"0.4.25+commit.59dbf8f1\", \"0.4.26+commit.4563c3fc\", \"0.4.2+commit.af6afb04\", \"0.4.3+commit.2353da71\", \"0.4.4+commit.4633f3de\", \"0.4.5+commit.b318366e\", \"0.4.6+commit.2dabbdf0\", \"0.4.7+commit.822622cf\", \"0.4.8+commit.60cc1668\", \"0.4.9+commit.364da425\", \"0.5.0+commit.1d4f565a\", \"0.5.10+commit.5a6ea5b1\", \"0.5.11+commit.22be8592\", \"0.5.11+commit.c082d0b4\", \"0.5.12+commit.7709ece9\", \"0.5.13+commit.5b0b510c\", \"0.5.14+commit.01f1aaa4\", \"0.5.15+commit.6a57276f\", \"0.5.16+commit.9c3226ce\", \"0.5.17+commit.d19bba13\", \"0.5.1+commit.c8a2cb62\", \"0.5.2+commit.1df8f40c\", \"0.5.3+commit.10d17f24\", \"0.5.4+commit.9549d8ff\", \"0.5.5+commit.47a71e8f\", \"0.5.6+commit.b259423e\", \"0.5.7+commit.6da8b019\", \"0.5.8+commit.23d335f2\", \"0.5.9+commit.c68bc34e\", \"0.5.9+commit.e560f70d\", \"0.6.0+commit.26b70077\", \"0.6.10+commit.00c0fcaf\", \"0.6.11+commit.5ef660b1\", \"0.6.12+commit.27d51765\", \"0.6.1+commit.e6f7d5a4\", \"0.6.2+commit.bacdbe57\", \"0.6.3+commit.8dda9521\", \"0.6.4+commit.1dca32f3\", \"0.6.5+commit.f956cc89\", \"0.6.6+commit.6c089d02\", \"0.6.7+commit.b8d736ae\", \"0.6.8+commit.0bbfe453\", \"0.6.9+commit.3e3065ac\", \"0.7.0+commit.9e61f92b\", \"0.7.1+commit.f4a555be\", \"0.7.2+commit.51b20bc0\", \"0.7.3+commit.9bfce1f6\", \"0.7.4+commit.3f05b770\", \"0.7.5+commit.eb77ed08\", \"0.7.6+commit.7338295f\", \"0.8.0+commit.c7dfd78e\", \"0.8.10+commit.fc410830\", \"0.8.11+commit.d7f03943\", \"0.8.12+commit.f00d7308\", \"0.8.13+commit.abaa5c0e\", \"0.8.14+commit.80d49f37\", \"0.8.15+commit.e14f2714\", \"0.8.16+commit.07a7930e\", \"0.8.17+commit.8df45f5f\", \"0.8.18+commit.87f61d96\", \"0.8.19+commit.7dd6d404\", \"0.8.1+commit.df193b15\", \"0.8.20+commit.a1b79de6\", \"0.8.21+commit.d9974bed\", \"0.8.2+commit.661d1103\", \"0.8.3+commit.8d00100c\", \"0.8.4+commit.c7e474f2\", \"0.8.5+commit.a4f2e591\", \"0.8.6+commit.11564f7e\", \"0.8.7+commit.e28d00a7\", \"0.8.8+commit.dddeac2f\", \"0.8.9+commit.e5eed63a\", ... , \"0.8.26+commit.8a97fa7a\", \"0.8.27+commit.40a35a09\", \"0.8.28+commit.7893614a\", \nE entre as versões da EVM:\n\"cancun\", \"shanghai\", \"paris\", \"london\", \"berlin\", \"istambul\", \"petersburg\", \"constantinople\", \"byzantium\", \"spuriousDragon\", \"tangerineWhistle\", \"homestead\"\nO resultado da compilação pode ser obtido fazendo o download na Opção Compilation Details. A Figura 8.II apresenta a tela para escolha dos itens a serem baixados ou baixar todos os detalhes em um único arquivo `JSON``.\n\n\n\n\n\n\nFigure 8.II- Detalhes de Compilação\n\n\n\nA Figura 8.III mostra a visualização do binário gerado e da estimativa de Gás para a implantação e execução.\n\n\n\n\n\n\nFigure 8.III- Detalhes de Compilação (binário e estimativa de gas)",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks _Ethereum_: Estudo sobre `Solidity` e `solc`</span>"
    ]
  },
  {
    "objectID": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#considerações-finais",
    "href": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#considerações-finais",
    "title": "8  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Estudo sobre Solidity e solc",
    "section": "8.15 Considerações Finais",
    "text": "8.15 Considerações Finais\nA prática apresenta a utilização básica do Remix. Utilize o Capítulo sugerido na Leitura Recomendada e a documentação sobre Solidity para aprender um pouco mais sobre a linguagem. O objetivo principal é a familiaridade com a sintaxe da linguagem Solidity.\nUma documentação sobre Solidity está disponível na seção “The Solidity language”, no Capítulo 14, página \\(448\\) do livro texto (178948620180101?) disponível no link Capítulo-14-Development-Tools-and-Frameworks.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks _Ethereum_: Estudo sobre `Solidity` e `solc`</span>"
    ]
  },
  {
    "objectID": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#leitura-recomendada",
    "href": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#leitura-recomendada",
    "title": "8  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Estudo sobre Solidity e solc",
    "section": "8.16 Leitura Recomendada",
    "text": "8.16 Leitura Recomendada\n\n\n\n\n\n\nLeitura Recomendada\n\n\n\nCapítulo 14: Development Tools and Frameworks\nLivro: IMRAN BASHIR. Mastering Blockchain : Distributed Ledger Technology, Decentralization, and Smart Contracts Explained, 2nd Edition.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks _Ethereum_: Estudo sobre `Solidity` e `solc`</span>"
    ]
  },
  {
    "objectID": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#referências",
    "href": "aula-08-pratica-estudo-sobre-solidity-solc/aula-08-pratica-estudo-sobre-solidity-solc.html#referências",
    "title": "8  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Estudo sobre Solidity e solc",
    "section": "9.1 Referências",
    "text": "9.1 Referências",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks _Ethereum_: Estudo sobre `Solidity` e `solc`</span>"
    ]
  },
  {
    "objectID": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html",
    "href": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html",
    "title": "9  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3",
    "section": "",
    "text": "9.1 Introdução\nA proposta é explorarmos a biblioteca web3 com o cliente Geth, e os métodos de desenvolvimento, implantação e verificação de contratos inteligentes. Testaremos comandos da API RPC e faremos o deploy de contratos inteligentes utilizando o console Javascript, utilizando comandos da API RPC e a IDE Remix.\nA web3 é uma biblioteca JavaScript que pode ser usada na comunicação com um Nó Ethereum expondo métodos que podem ser acessados via RPC.\nA interação com a instância de execução do cliente Geth pode ser feita via console Javascript do Geth com a parâmetro attach. Vários métodos de consulta e gerenciamento do blockchain são expostos e comandos podem ser executados neste console.\nUma outra forma de se comunicar com o cliente geth é via RPC. Já vimos muitos comandos providos pela web3, por exemplo, eth.accounts que retorna a lista de contas locais.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3</span>"
    ]
  },
  {
    "objectID": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#sec-ambiente:execucao",
    "href": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#sec-ambiente:execucao",
    "title": "9  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3",
    "section": "9.2 Ambiente de Execução para a Rede Local",
    "text": "9.2 Ambiente de Execução para a Rede Local\nPara essa prática iremos utilizar os comandos definidos na Aula 05: Criando uma Rede Ethereum Privada: Ethash.\nMinha instalação do cliente geth está em ~/go-ethereum-1.11.6/build/bin/ então lembre-se de colocar o prefixo antes de cada um dos comandos.\n\nIniciar clef em um terminal. O comando para o console do clef pode ser visto no Código 9.I.\n\n\n\n\nListing 9.I- Comando do Terminal – clef\n\n\n[.etherprivate-ethash]$ $HOME/go-ethereum-1.11.6/build/bin/clef --chainid 786 --keystore $HOME/.etherprivate-ethash/keystore --configdir $HOME/.etherprivate-ethash/clef --http\n\n\n\n\nIniciar o cliente de execução geth com suporte ao web3. O comando para o console do geth pode ser visto no Código 9.II.\n\n\n\n\nListing 9.II- Comando do Terminal – Geth\n\n\n[.etherprivate-ethash]$ $HOME/go-ethereum-1.11.6/build/bin/geth --networkid 786 --datadir ~/.etherprivate-ethash/ --syncmode full --allow-insecure-unlock  --identity \"RAGEtherPrivate\"  --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin,debug,miner,txpool\" --keystore ~/.etherprivate-ethash/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.etherprivate-ethash/geth/jwtsecret --nodiscover --maxpeers 15 --miner.etherbase=0x2db017e44b03b37755a4b15e14cd799f83de4c13 --signer=$HOME/.etherprivate-ethash/clef/clef.ipc\n\n\n\n\nO comando para o console do prysm: Não precisa! Estamos usando a versão 1.11.6-stable-ea9e62ca que ainda suporta o ethash, algoritmo de consenso Proof-of-Work (PoW).\nIniciar um console JavaScript para a interação com a instância de execução do geth conforme o Código 9.III.\n\n\n\n\nListing 9.III- Comando do Terminal – Console Javascript\n\n\n[.etherprivate-ethash]$ $HOME/go-ethereum-1.11.6/build/bin/geth attach $HOME/.etherprivate-ethash/geth.ipc\nWelcome to the Geth JavaScript console!\n\ninstance: Geth/RAGEtherPrivate/v1.11.6-stable-ea9e62ca/linux-amd64/go1.21.1\ncoinbase: 0x2db017e44b03b37755a4b15e14cd799f83de4c13\nat block: 0 (Wed Dec 31 1969 21:00:00 GMT-0300 (-03))\n datadir: /home/rogerio/.etherprivate-ethash\n modules: admin:1.0 debug:1.0 engine:1.0 eth:1.0 ethash:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt; \n\n\n\nA Figura 9.I apresenta os comandos executando em cada um dos terminais.\n\n\n\n\n\n\n\nFigure 9.I- Terminais",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3</span>"
    ]
  },
  {
    "objectID": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#explorando-web3-com-geth",
    "href": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#explorando-web3-com-geth",
    "title": "9  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3",
    "section": "9.3 Explorando Web3 com Geth",
    "text": "9.3 Explorando Web3 com Geth\nUtilize o console Javascript para verificar se os recursos web3 estão disponíveis, digite no console web3. e dê um tab. Escolhendo o comando web3.version como apresentado no Código 9.IV serão apresentadas algumas informações.\n\n\n\nListing 9.IV- Console Javascript\n\n\n&gt; web3.\nweb3.BigNumber         web3.miner             \nweb3._extend           web3.net               \nweb3._requestManager   web3.padLeft           \nweb3.admin             web3.padRight          \nweb3.bzz               web3.personal          \nweb3.constructor       web3.providers         \nweb3.createBatch       web3.reset             \nweb3.currentProvider   web3.rpc               \nweb3.db                web3.setProvider       \nweb3.debug             web3.settings          \nweb3.eth               web3.sha3              \nweb3.ethash            web3.shh               \nweb3.fromAscii         web3.toAscii           \nweb3.fromDecimal       web3.toBigNumber       \nweb3.fromICAP          web3.toChecksumAddress \nweb3.fromUtf8          web3.toDecimal         \nweb3.fromWei           web3.toHex             \nweb3.isAddress         web3.toUtf8            \nweb3.isChecksumAddress web3.toWei             \nweb3.isConnected       web3.txpool            \nweb3.isIBAN            web3.version           \n&gt; web3.version\n{\n  api: \"0.20.1\",\n  ethereum: undefined,\n  network: \"786\",\n  node: \"Geth/RAGEtherPrivate/v1.11.6-stable-ea9e62ca/linux-amd64/go1.21.1\",\n  whisper: undefined,\n  getEthereum: function(callback),\n  getNetwork: function(callback),\n  getNode: function(callback),\n  getWhisper: function(callback)\n}\n&gt; \n\n\n\nOs recursos da biblioteca do Ethereum (eth) que estão disponíveis podem ser verificados no console conforme o Código 9.V.\n\n\n\nListing 9.V- Console Javascript\n\n\n&gt; web3.eth.\n..\nweb3.eth.accounts                   \nweb3.eth.blockNumber                \nweb3.eth.chainId                    \nweb3.eth.coinbase                   \n...\nweb3.eth.gasPrice                   \nweb3.eth.getAccounts                \nweb3.eth.getBalance                 \nweb3.eth.getBlock                   \nweb3.eth.getBlockByHash             \nweb3.eth.getBlockByNumber           \nweb3.eth.getBlockNumber             \nweb3.eth.getCoinbase                \nweb3.eth.getGasPrice                \n...\nweb3.eth.getTransaction             \nweb3.eth.getTransactionReceipt      \nweb3.eth.submitTransaction          \nweb3.eth.syncing                    \n&gt; web3.eth.accounts\n[\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\", \"0x1bba02873cc1c11f369a7b692f5f3de8ff7bbe80\", \"0x1170bbdc51d3791be6ba31dd6ed04383c146c2ed\"]\n&gt; web3.eth.chainId\nfunction()\n&gt; web3.eth.chainId()\n\"0x312\"\n&gt; eval(0x312)\n786\n&gt;\n\n\n\nNo exemplo do Código 9.V foram recuperadas as contas com web3.eth.accounts e o id da rede em execução com a função web3.eth.chainId().",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3</span>"
    ]
  },
  {
    "objectID": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#deploy-do-contrato-via-console-javascript",
    "href": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#deploy-do-contrato-via-console-javascript",
    "title": "9  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3",
    "section": "9.4 Deploy do Contrato via Console Javascript",
    "text": "9.4 Deploy do Contrato via Console Javascript\nFaremos o deploy de um contrato usando o console JavaScript. O passo a passo pode ser visto no livro texto e iremos reproduzir aqui a sequência:\n\nExecutar o cliente de execução geth e clef.\nCompilar o código do contrato.\nCriar um script de deployment, usando a ABI e o bytecode, e algum código JavaScript.\nFaremos o deploy do contrato via linha de comando pelo console JavaScript.\nInteragir com o contrato via um frontend web.\n\n\n9.4.1 Web3 deployment: Executar o cliente geth e clef\n\nExecutar o clef. []\nExecutar o geth. []\nExecutar o console JavaScript. []\n\nExecutamos esse passo na Seção 9.2.\n\n\n9.4.2 Web3 deployment: Compilar o código do contrato\nO exemplo de contrato que iremos compilar e fazer o deploy é o valueChecker o Código 9.VI.\n\n\n\nListing 9.VI- Contrato valueChecker\n\n\n// SPDX-License-Identifier: Apache-2.0 OR MIT\npragma solidity ^0.8.19;\ncontract valueChecker {\n    uint price = 10;\n    event valueEvent(bool returnValue);\n    function Matcher (uint8 x) public returns (bool) {\n        if (x&gt;=price) {\n            emit valueEvent(true);\n            return true;\n        }\n    }\n}\n\n\n\nCompile o contrato com o solc ou utilizando o Remix IDE, gerando o binário e a ABI, conforme apresentado no Código 9.VII.\n\n\n\nListing 9.VII- Gerando o bytecode e a ABI\n\n\n$ solc --bin --abi -o bin ValueChecker.sol\n$ ls\nbin  deploy.js  ValueChecker.sol\n$ cd bin\n$ ls\nvalueChecker.abi  valueChecker.bin\n$ cat valueChecker.bin\n6080604052600a60005534801561001557600080fd5b5061018b806100256000396000f3fe60806040523480\n1561001057600080fd5b506004361061002b5760003560e01c8063f9d55e2114610030575b600080fd5b6100\n4a600480360381019061004591906100f2565b610060565b604051610057919061013a565b60405180910390\nf35b600080548260ff16106100ae577f3eb1a229ff7995457774a4bd31ef7b13b6f4491ad1ebb8961af120b8\nb4b6239c600160405161009d919061013a565b60405180910390a1600190506100af565b5b919050565b6000\n80fd5b600060ff82169050919050565b6100cf816100b9565b81146100da57600080fd5b50565b6000813590\n506100ec816100c6565b92915050565b600060208284031215610108576101076100b4565b5b600061011684\n8285016100dd565b91505092915050565b60008115159050919050565b6101348161011f565b82525050565b\n600060208201905061014f600083018461012b565b9291505056fea264697066735822122088a7e63726327b\n857c0d0a6d073976f05d5073826c629671c857a375db35d51c64736f6c63430008110033\n\n$ cat valueChecker.abi \n[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"returnValue\",\n\"type\":\"bool\"}],\"name\":\"valueEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint8\",\n\"name\":\"x\",\"type\":\"uint8\"}],\"name\":\"Matcher\",\"outputs\":[{\"internalType\":\"bool\",\n\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\n\n\nTanto o bytecode, quanto a descrição da ABI serão utilizados na criação do script de deploy.\n\n\n9.4.3 Web3 deployment: Criar um script de deployment\nIremos preparar o código do script JavaScript com as informações geradas pelo solc. Declarando um contrato utilizando a ABI e criando um novo contrato com o código binário do contrato compilado. Crie um arquivo deploy.js e salve o conteúdo do Código 9.VIII.\n\n\n\nListing 9.VIII- Script de deploy\n\n\nvar valuecheckerContract = web3.eth.contract([{ \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"bool\", \"name\": \"returnValue\", \"type\": \"bool\" }], \"name\": \"valueEvent\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"uint8\", \"name\": \"x\", \"type\": \"uint8\" }], \"name\": \"Matcher\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }]);\nvar valuechecker = valuecheckerContract.new({\n    from: web3.eth.accounts[0],\n    data: '0x6080604052600a60005534801561001557600080fd5b5061010d806100256000396000f3006\n          08060405260043610603f576000357c01000000000000000000000000000000000000000000000\n          00000000000900463ffffffff168063f9d55e21146044575b600080fd5b348015604f57600080f\n          d5b50606f600480360381019080803560ff1690602001909291905050506089565b60405180821\n          5151515815260200191505060405180910390f35b600080548260ff1610151560db577f3eb1a22\n          9ff7995457774a4bd31ef7b13b6f4491ad1ebb8961af120b8b4b6239c600160405180821515151\n          5815260200191505060405180910390a16001905060dc565b5b9190505600a165627a7a7230582\n          09ff756514f1ef46f5650d800506c4eb6be2d8d71c0e2c8b0ca50660fde82c7680029', gas: '4700000'\n},\n    function(e, contract) {\n        console.log(e, contract);\n        if (!e) {\n            if (typeof contract.address == 'undefined') {\n                console.log(\"Contract transaction send: TransactionHash: \" +\n                contract.transactionHash + \" waiting to be mined...\");\n            } else {\n                console.log(\"Contract mined! Address: \" + contract.address + ', transactionHash: ' + contract.transactionHash);\n                console.log(contract);\n            }\n        }\n    })",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3</span>"
    ]
  },
  {
    "objectID": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#web3-deployment-fazendo-o-deploy-pelo-console-do-geth",
    "href": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#web3-deployment-fazendo-o-deploy-pelo-console-do-geth",
    "title": "9  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3",
    "section": "9.5 Web3 deployment: Fazendo o deploy pelo console do geth",
    "text": "9.5 Web3 deployment: Fazendo o deploy pelo console do geth\nPara fazer o deploy iremos copiar o código Javascript do arquivo criado e colar no console Javascript, conforme Código 9.IX.\n\n\n\nListing 9.IX- Deploy via console\n\n\n&gt; var valuecheckerContract = web3.eth.contract([{ \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"bool\", \"name\": \"returnValue\", \"type\": \"bool\" }], \"name\": \"valueEvent\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"uint8\", \"name\": \"x\", \"type\": \"uint8\" }], \"name\": \"Matcher\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }]);\nundefined\nvar valuechecker = valuecheckerContract.new({\n    from: web3.eth.accounts[0],\n    data: '0x6080604052600a60005534801561001557600080fd5b5061010d806100256000396000f300608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063f9d55e21146044575b600080fd5b348015604f57600080fd5b50606f600480360381019080803560ff1690602001909291905050506089565b604051808215151515815260200191505060405180910390f35b600080548260ff1610151560db577f3eb1a229ff7995457774a4bd31ef7b13b6f4491ad1ebb8961af120b8b4b6239c6001604051808215151515815260200191505060405180910390a16001905060dc565b5b9190505600a165627a7a723058209ff756514f1ef46f5650d800506c4eb6be2d8d71c0e2c8b0ca50660fde82c7680029', gas: '4700000'\n},\n    function(e, contract) {\n        console.log(e, contract);\n        if (!e) {\n            if (typeof contract.address == 'undefined') {\n                console.log(\"Contract transaction send: TransactionHash: \" +\n                contract.transactionHash + \" waiting to be mined...\");\n            } else {\n                console.log(\"Contract mined! Address: \" + contract.address + ', transactionHash: ' + contract.transactionHash);\n                console.log(contract);\n            }\n        }\n    })\n\n\n\nAtenção pois é necessário confirmar a transação no _console do clef.\nSe na execução do deploy der uma mensagem de erro Error: insufficient funds for gas * price + value undefined, é porque a carteira da conta selecionada não tem saldo suficiente. É necessário minerar com miner.start() para gerar algum saldo e repetir o deploy.\n  Error: insufficient funds for gas * price + value undefined\nundefined\n&gt; \n&gt; miner.start()\nnull\n&gt; miner.stop()\nnull\n&gt; eth.getAccounts()\nundefined\n&gt; eth.accounts\n[\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\", \"0x1bba02873cc1c11f369a7b692f5f3de8ff7bbe80\", \"0x1170bbdc51d3791be6ba31dd6ed04383c146c2ed\"]\n&gt; eth.getBalance(\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\")\n166000000000000300000\nRepetindo-se os comandos no console Javascript e após as confirmações no console do clef:\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n--------- Transaction request-------------\nto:    &lt;contact creation&gt;\nfrom:               0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 [chksum ok]\nvalue:              0 wei\ngas:                0x47b760 (4700000)\ngasprice: 1000000000 wei\nnonce:    0x0 (0)\nchainid:  0x312\ndata:     0x6080604052600a60005534801561001557600080fd5b5061010d806100256000396000f300608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063f9d55e21146044575b600080fd5b348015604f57600080fd5b50606f600480360381019080803560ff1690602001909291905050506089565b604051808215151515815260200191505060405180910390f35b600080548260ff1610151560db577f3eb1a229ff7995457774a4bd31ef7b13b6f4491ad1ebb8961af120b8b4b6239c6001604051808215151515815260200191505060405180910390a16001905060dc565b5b9190505600a165627a7a723058209ff756514f1ef46f5650d800506c4eb6be2d8d71c0e2c8b0ca50660fde82c7680029\n\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\n-------------------------------------------\nApprove? [y/N]:\n&gt; y\n\\#\\# Account password\n\nPlease enter the password for account 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n&gt; \n-----------------------\nTransaction signed:\n {\n    \"type\": \"0x0\",\n    \"nonce\": \"0x0\",\n    \"gasPrice\": \"0x3b9aca00\",\n    \"maxPriorityFeePerGas\": null,\n    \"maxFeePerGas\": null,\n    \"gas\": \"0x47b760\",\n    \"value\": \"0x0\",\n    \"input\": \"0x6080604052600a60005534801561001557600080fd5b5061010d806100256000396000f300608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063f9d55e21146044575b600080fd5b348015604f57600080fd5b50606f600480360381019080803560ff1690602001909291905050506089565b604051808215151515815260200191505060405180910390f35b600080548260ff1610151560db577f3eb1a229ff7995457774a4bd31ef7b13b6f4491ad1ebb8961af120b8b4b6239c6001604051808215151515815260200191505060405180910390a16001905060dc565b5b9190505600a165627a7a723058209ff756514f1ef46f5650d800506c4eb6be2d8d71c0e2c8b0ca50660fde82c7680029\",\n    \"v\": \"0x648\",\n    \"r\": \"0x7085d0359b0cdef9c553d3e6f32a0a0a82dc0a376ed8fa18dae76dc93e274171\",\n    \"s\": \"0x50f8eb26062a35825f0c960856cec0c3d20fab15ed9ab272f9ab85b59bdfedf8\",\n    \"to\": null,\n    \"hash\": \"0xd3422f91fc4063682fcaed37cc7eb8b7b438cae9f0c9b56596bc49ededaf2081\"\n  }\nNo terminal de execução geth irá aparecer a mensagem de que o contrato foi submetido.\nINFO [10-02|16:32:56.551] Submitted contract creation              hash=0xd3422f91fc4063682fcaed37cc7eb8b7b438cae9f0c9b56596bc49ededaf2081 from=0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 nonce=0 contract=0xe0203C7AEE6512789d63b54773dEDaCd84b1d06B value=0\nE no terminal do console Javascript irá aparecer a mensagem que o contrato está aguardando ser minerado:\nnull [object Object]\nContract transaction send: TransactionHash: 0xd3422f91fc4063682fcaed37cc7eb8b7b438cae9f0c9b56596bc49ededaf2081 waiting to be mined...\nundefined\n&gt; \nSe iniciarmos a mineração novamente o contrato será minerado e o endereço atribuído a ele será apresentado 0xe0203c7aee6512789d63b54773dedacd84b1d06b:\n&gt; miner.start()\nnull\n&gt; null [object Object]\nContract mined! Address: 0xe0203c7aee6512789d63b54773dedacd84b1d06b, transactionHash: 0xd3422f91fc4063682fcaed37cc7eb8b7b438cae9f0c9b56596bc49ededaf2081\n[object Object]\n&gt; miner.stop()",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3</span>"
    ]
  },
  {
    "objectID": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#web3-deployment-interagindo-com-o-contrato",
    "href": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#web3-deployment-interagindo-com-o-contrato",
    "title": "9  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3",
    "section": "9.6 Web3 deployment: Interagindo com o contrato",
    "text": "9.6 Web3 deployment: Interagindo com o contrato\nApós o deploy o contrato estará disponível no console. Podemos interagir com o contrato via console Javascript conforme o Código 9.X.\n\n\n\nListing 9.X- Interagindo com o Contrato\n\n\n&gt; valuechecker\nvaluechecker valuecheckerContract \n&gt; valuechecker.\nvaluechecker.Matcher         valuechecker.allEvents       \nvaluechecker._eth            valuechecker.constructor     \nvaluechecker.abi             valuechecker.transactionHash \nvaluechecker.address         valuechecker.valueEvent      \n&gt; valuechecker.address\n\"0xe0203c7aee6512789d63b54773dedacd84b1d06b\"\n&gt; valuechecker.transactionHash\n\"0xd3422f91fc4063682fcaed37cc7eb8b7b438cae9f0c9b56596bc49ededaf2081\"\n\n\n\nPercebam o mesmo address e transactionHash que foram devolvidos no processo de deploy.\nA ABI do valuechecker está disponível conforme o Código 9.XI.\n\n\n\nListing 9.XI- Verificando a ABI do Contrato\n\n\n&gt; valuechecker.abi\n[{\n    anonymous: false,\n    inputs: [{\n        indexed: false,\n        internalType: \"bool\",\n        name: \"returnValue\",\n        type: \"bool\"\n    }],\n    name: \"valueEvent\",\n    type: \"event\"\n}, {\n    inputs: [{\n        internalType: \"uint8\",\n        name: \"x\",\n        type: \"uint8\"\n    }],\n    name: \"Matcher\",\n    outputs: [{\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\"\n    }],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n}]\n&gt; \n\n\n\nO código binário do contrato implantado pode ser recuperado no console javascript. O Código 9.XII apresenta o binário gerado para o Contrato.\n\n\n\nListing 9.XII- Código Binário do Contrato\n\n\n&gt; eth.getCode(\"0xe0203c7aee6512789d63b54773dedacd84b1d06b\")\n\"0x608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063f9d55e21146044575b600080fd5b348015604f57600080fd5b50606f600480360381019080803560ff1690602001909291905050506089565b604051808215151515815260200191505060405180910390f35b600080548260ff1610151560db577f3eb1a229ff7995457774a4bd31ef7b13b6f4491ad1ebb8961af120b8b4b6239c6001604051808215151515815260200191505060405180910390a16001905060dc565b5b9190505600a165627a7a723058209ff756514f1ef46f5650d800506c4eb6be2d8d71c0e2c8b0ca50660fde82c7680029\"\n&gt; \n\n\n\nA função Matcher pode ser invocada para a verificação de valores conforme mostrado no Código 9.XIII.\n\n\n\nListing 9.XIII- Chamada da função Matcher\n\n\n&gt; eth.getBalance(valuechecker.address)\n0\n&gt; valuechecker.Matcher.call(12)\ntrue\n&gt; valuechecker.Matcher.call(10)\ntrue\n&gt; valuechecker.Matcher.call(5)\nfalse\n&gt; \n\n\n\nPara chamar o contrato via eth.call(...) iremos precisar montar a chamada com os parâmetros. Supondo que queiramos chamar o método Matcher com o valor \\(15\\).\nSerão passados \\(68\\) bytes no total subdivididos em:\n\n0xf9d55e21: o ID do método que é derivado dos quatro primeiros bytes do Keccak hash da forma ASCII da assinatura do método Matcher(uint8). O keccak hash de Matcher(uint8) é igual a 0xf9d55e21d289cb5d19e2c60f6f1087d2d0cf1db6bb4037a139606a23599a61f3 que pode ser gerado no console JavaScript ou utilizando a string “Matcher(uint8)” no site https://emn178.github.io/online-tools/keccak_256.html.\n\n&gt; web3.sha3('Matcher(uint8)')\n\"0xf9d55e21d289cb5d19e2c60f6f1087d2d0cf1db6bb4037a139606a23599a61f3\"\n\n0x000000000000000000000000000000000000000000000000000000000000000f: o primeiro parâmetro, um valor uint32 do valor \\(15\\) padded para \\(32\\) _bytes$.\n\nEntão a chamada pode ser feita para o endereço do contrato implantado, o endereço apresentando no momento do deploy 0xe0203c7aee6512789d63b54773dedacd84b1d06b, pode ser recuperado pelo console Javascrip com o comando valuechecker.address. No campo data passamos a codificação da assinatura do método mais o valor a ser verificado como parâmetro.\nNo [Código Listing 9.XIV} é feita a chamada para a função Matcher(15) e o resultado 0x0000000000000000000000000000000000000000000000000000000000000001 representa o valor True.\n\n\n\nListing 9.XIV- Chamada para Matcher(15)\n\n\n&gt; web3.eth.call({\n    to: \"0xe0203c7aee6512789d63b54773dedacd84b1d06b\",\n    data: \"0xf9d55e21000000000000000000000000000000000000000000000000000000000000000F\"\n});\n\"0x0000000000000000000000000000000000000000000000000000000000000001\"\n&gt;\n\n\n\nNo Código 9.XV a mesma chamada é codificado e feita com o valor \\(5\\) e o resultado é do valor 0x0000000000000000000000000000000000000000000000000000000000000000 que representa \\(0\\), logo False.\n\n\n\nListing 9.XV- Chamada para Matcher(5)\n\n\n&gt; web3.eth.call({\n    to: \"0xe0203c7aee6512789d63b54773dedacd84b1d06b\",\n    data: \"0xf9d55e210000000000000000000000000000000000000000000000000000000000000005\"\n});\n\"0x0000000000000000000000000000000000000000000000000000000000000000\"\n\n\n\nNo console Javascript ou em um código de um script que possa ser executado em um Navegador:\nvar result = web3.eth.call({\n    to: \"0xe0203c7aee6512789d63b54773dedacd84b1d06b\",\n    data: \"0xf9d55e21000000000000000000000000000000000000000000000000000000000000000F\"\n});\nundefined\n&gt; console.log(result);\n0x0000000000000000000000000000000000000000000000000000000000000001\nnull\n&gt; result\n\"0x0000000000000000000000000000000000000000000000000000000000000001\"\n&gt;",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3</span>"
    ]
  },
  {
    "objectID": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#deploy-de-contrato-com-transação-de-contract-creation",
    "href": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#deploy-de-contrato-com-transação-de-contract-creation",
    "title": "9  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3",
    "section": "9.7 Deploy de Contrato com Transação de Contract Creation",
    "text": "9.7 Deploy de Contrato com Transação de Contract Creation\nO Código 9.XVI apresenta o deploy do código binário do contrato via transação.\n\n\n\nListing 9.XVI- Deploy do Código do Contrato via transação\n\n\n&gt; src = web3.eth.accounts[0]\n\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\"\n&gt; contract_code = \"0x608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063f9d55e21146044575b600080fd5b348015604f57600080fd5b50606f600480360381019080803560ff1690602001909291905050506089565b604051808215151515815260200191505060405180910390f35b600080548260ff1610151560db577f3eb1a229ff7995457774a4bd31ef7b13b6f4491ad1ebb8961af120b8b4b6239c6001604051808215151515815260200191505060405180910390a16001905060dc565b5b9190505600a165627a7a723058209ff756514f1ef46f5650d800506c4eb6be2d8d71c0e2c8b0ca50660fde82c7680029\"\n\"0x608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063f9d55e21146044575b600080fd5b348015604f57600080fd5b50606f600480360381019080803560ff1690602001909291905050506089565b604051808215151515815260200191505060405180910390f35b600080548260ff1610151560db577f3eb1a229ff7995457774a4bd31ef7b13b6f4491ad1ebb8961af120b8b4b6239c6001604051808215151515815260200191505060405180910390a16001905060dc565b5b9190505600a165627a7a723058209ff756514f1ef46f5650d800506c4eb6be2d8d71c0e2c8b0ca50660fde82c7680029\"\n&gt; web3.eth.sendTransaction({from: src, data: contract_code, gas: 113558, gasPrice: 200000000000})\n\"0xf374e98fb632d5036f56ad5674e8f304fcb812fcd1be790f370e9e8a9adf806e\"\n&gt; \n\n\n\nApprove? [y/N]:\n&gt; y\n## Account password\n\nPlease enter the password for account 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n&gt; \n-----------------------\nTransaction signed:\n {\n    \"type\": \"0x0\",\n    \"nonce\": \"0x11\",\n    \"gasPrice\": \"0x2e90edd000\",\n    \"maxPriorityFeePerGas\": null,\n    \"maxFeePerGas\": null,\n    \"gas\": \"0x1bb96\",\n    \"value\": \"0x0\",\n    \"input\": \"0x608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063f9d55e21146044575b600080fd5b348015604f57600080fd5b50606f600480360381019080803560ff1690602001909291905050506089565b604051808215151515815260200191505060405180910390f35b600080548260ff1610151560db577f3eb1a229ff7995457774a4bd31ef7b13b6f4491ad1ebb8961af120b8b4b6239c6001604051808215151515815260200191505060405180910390a16001905060dc565b5b9190505600a165627a7a723058209ff756514f1ef46f5650d800506c4eb6be2d8d71c0e2c8b0ca50660fde82c7680029\",\n    \"v\": \"0x647\",\n    \"r\": \"0xf323a86945330628a8746a8a079639de0d6d6f5ad65c006c16c09b3c50f3ff5e\",\n    \"s\": \"0x3b0d13eaac7523fea6e22b0df01724232999d7ac22b3993464348bebc8059874\",\n    \"to\": null,\n    \"hash\": \"0xf374e98fb632d5036f56ad5674e8f304fcb812fcd1be790f370e9e8a9adf806e\"\n  }\nINFO [10-23|15:40:23.825] Submitted contract creation              hash=0xf374e98fb632d5036f56ad5674e8f304fcb812fcd1be790f370e9e8a9adf806e from=0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 nonce=17 contract=0x2Ec04170e7b52d40D494F149Bd5E29e0Bf0c8Dd8 value=0",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3</span>"
    ]
  },
  {
    "objectID": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#interagir-com-o-contrato-via-um-frontend-web.",
    "href": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#interagir-com-o-contrato-via-um-frontend-web.",
    "title": "9  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3",
    "section": "9.8 Interagir com o contrato via um frontend web.",
    "text": "9.8 Interagir com o contrato via um frontend web.\nPodemos utilizar qualquer uma das redes locais ou simuladas para testar os comandos RPC. Primeiro utilizaremos a rede simulada do ganache-ui da Aula 07: Simulando uma Rede Ethereum Local com Ganache e Metamask. Executando a versão appmimage, versão atual ganache-2.7.1-linux-x86_64.AppImage, que pode ser executada sem a necessidade de instalação.\nExecutando o ganache-ui e indo na aba da lista de contas, conforme a Figura 9.II.\n\n\n\n\n\n\nFigure 9.II- Lista de Contas\n\n\n\nO comando RPC para a recuperação de contas via terminal utilizando o curl pode ser visto no Código 9.XVII.\n\n\n\nListing 9.XVII- Comando RPC para recuperação das contas\n\n\n$ curl -X POST --insecure --header \"Content-Type: application/json\" --location http://localhost:7545  --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_accounts\",\"params\":[],\"id\":83}'\n{\"id\":83,\"jsonrpc\":\"2.0\",\"result\":[\"0x94c5ce22ba980e37c0b3a5105fec398ddcba711d\",\n\"0x7fd63437b01daf6674c11f77a0a3e86dd2291221\",\"0x8550abcf33308c521d8cd660a57ea2c9184dd33e\",\n\"0xbb940857f76e328cfb9c36ba4c3a7b301d432f40\",\"0x335c3af881896f490bfabf819c2200a9289eaace\",\n\"0x91c2283b5053111baddc60cdd5f7db44b52614d7\",\"0x3d806bdec35c37e0771bd6d67363c7b2d36eb631\",\n\"0x91b318a4e2ec781404f1334698a897f2aceb3284\",\"0xa7b91fe78a00c2003b49b92a39fb90e2fb67463c\",\n\"0x05660e2dde69604288c632cc7b98e3f29d054316\"]}\n\n\n\nA lista de blocos pode ser vista na Figura 9.III. O número do bloco mais recente presente na lista no meu caso é o \\(2\\) (hexadecimal \\(0x2\\)).\n\n\n\n\n\n\nFigure 9.III- Lista de Blocos\n\n\n\nO número do último bloco pode ser recuperado utilizando o eth.blockNumber via RPC com o comando:\n$ curl -X POST --insecure --header \"Content-Type: application/json\" --location http://localhost:7545  --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":83}'\n{\"id\":83,\"jsonrpc\":\"2.0\",\"result\":\"0x2\"}\nRecuperar o recibo de uma transação: link\n$ curl -X POST --insecure --header \"Content-Type: application/json\" --location http://localhost:7545 --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionReceipt\",\"params\":\n[\"0xc22b72d8469b0dc3676e61dfd09ead8faa3ff08a0f67e622232070587158cc9e\"],\"id\":1}'\n{\"id\":1,\"jsonrpc\":\"2.0\",\"result\":{\"transactionHash\":\n\"0xc22b72d8469b0dc3676e61dfd09ead8faa3ff08a0f67e622232070587158cc9e\",\n\"transactionIndex\":\"0x0\",\"blockNumber\":\"0x2\",\n\"blockHash\":\"0xf00b1600c68890bbf9a953bdaa87551072ccf1081febb99e2d5f03bf49f11cff\",\n\"from\":\"0x94c5ce22ba980e37c0b3a5105fec398ddcba711d\",\n\"to\":\"0x7fd63437b01daf6674c11f77a0a3e86dd2291221\",\n\"cumulativeGasUsed\":\"0x5208\",\"gasUsed\":\"0x5208\",\"contractAddress\":null,\"logs\":[],\n\"logsBloom\":\"0x0000000000000000000000000000000000000000000000000000000000000000000000000\n0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n\"status\":\"0x1\",\"effectiveGasPrice\":\"0x4a817c800\",\"type\":\"0x2\"}}\n\nMais comandos da API RPC podem ser consultados na documentação JSON-RPC API.\nTodos os comandos que vimos até o momento para a execução continuam válidos. Iremos testar o deploy na Rede Privada Local que criamos e com a Rede Simulada do Ganache.\n\nVimos que é possível interagir com o cliente de execução geth via POST requests utilizando a API JSON RPC sobre o HTTP. Para esse teste utilizaremos o curl. Lembrando que a porta utilizando foi a \\(8559\\).\nVimos que a lista de contas podem ser recuperadas com o comando:\n[.etherprivate]$ curl -X POST --insecure --header \"Content-Type: application/json\" --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_accounts\",\"params\":[], \"id\":64}' --location http://localhost:8559\n{\"jsonrpc\":\"2.0\",\"id\":64,\"result\":[\"0x2db017e44b03b37755a4b15e14cd799f83de4c13\",\"0x7a7686ad451d2865a2246e239b674aefd4c6c27c\",\"0x1bba02873cc1c11f369a7b692f5f3de8ff7bbe80\"]}\n[.etherprivate]$ \nUm objeto JSON é retornado com a lista de contas.\nNo comando curl, o parâmetro --request é usado para especificar que o comando é uma requisição do tipo POST e --data é usado para especificar os parâmetros e valores. Finalmente, o localhost:8559 é usando para indicar o endereço que o HTTP endpoint do geth está respondendo.\nUma estimativa de custo para a o deploy do contrato poderia ser dada pela função eth_estimateGas via RPC:\n$ curl -X POST --insecure --header \"Content-Type: application/json\" --location http://localhost:8559 --data '{\"jsonrpc\":\"2.0\",\"method\": \"eth_estimateGas\", \"params\": [{\"from\": \"0x94c5Ce22ba980e37C0B3a5105FEc398dDCbA711d\", \"data\": \"0x6060604052341561000f57600080fd5b60eb8061001d6000396000f300606060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063c6888fa1146044575b600080fd5b3415604e57600080fd5b606260048080359060200190919050506078565b6040518082815260200191505060405180910390f35b60007f24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da600783026040518082815260200191505060405180910390a16007820290509190505600a165627a7a7230582040383f19d9f65246752244189b02f56e8d0980ed44e7a56c0b200458caad20bb0029\"}], \"id\": 5}'\n{\"jsonrpc\":\"2.0\",\"id\":5,\"result\":\"0x1959e\"}\n$ echo $((0x1959e))\n103838\nE o deploy do contrato:\n$ curl -X POST --insecure --header \"Content-Type: application/json\" --location http://localhost:7545 --data '{\"jsonrpc\":\"2.0\",\"method\": \"eth_sendTransaction\", \"params\": [{\"from\": \"0x94c5Ce22ba980e37C0B3a5105FEc398dDCbA711d\", \"gas\": \"0x1c31e\", \"data\": \"0x6060604052341561000f57600080fd5b60eb8061001d6000396000f300606060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063c6888fa1146044575b600080fd5b3415604e57600080fd5b606260048080359060200190919050506078565b6040518082815260200191505060405180910390f35b60007f24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da600783026040518082815260200191505060405180910390a16007820290509190505600a165627a7a7230582040383f19d9f65246752244189b02f56e8d0980ed44e7a56c0b200458caad20bb0029\"}], \"id\": 6}'\n{\"id\":6,\"jsonrpc\":\"2.0\",\"result\":\"0x15d7ed0c9f19e98f6d8d82fd8a658d10fb3c4cdd7b510fbfb577b062f81bf9a7\"}$ \nA transação 0x15d7ed0c9f19e98f6d8d82fd8a658d10fb3c4cdd7b510fbfb577b062f81bf9a7 de Contract Creation foi inserida na lista de transações, conforme Figura 9.IV.\n\n\n\n\n\n\nFigure 9.IV- Transação de Criação de Contrato\n\n\n\n\nPara chamar o contrato via RPC iremos precisar montar a chamada com os parâmetros. Supondo que queiramos chamar o método Matcher com o valor \\(15\\).\nSerão passados \\(68\\) bytes no total subdivididos em:\n\n0xf9d55e21: o ID do método que é derivado dos quatro primeiros bytes do Keccak hash da forma ASCII da assinatura do método Matcher(uint8). keccak: 0xf9d55e21d289cb5d19e2c60f6f1087d2d0cf1db6bb4037a139606a23599a61f3 que pode ser gerado no console JavaScript ou utilizando a string “Matcher(uint8)” no site https://emn178.github.io/online-tools/keccak_256.html.\n\n&gt; web3.sha3('Matcher(uint8)')\n\"0xf9d55e21d289cb5d19e2c60f6f1087d2d0cf1db6bb4037a139606a23599a61f3\"\n\n0x000000000000000000000000000000000000000000000000000000000000000f: o primeiro parâmetro, um valor uint32 do valor \\(15\\) padded para \\(32\\) _bytes$.\n\n$ curl --location http://localhost:8559 -X POST --insecure --header \"Content-Type: application/json\" --data '{\"jsonrpc\":\"2.0\", \"method\":\"eth_call\", \"params\":[{\"from\": \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"to\": \"0xe0203c7aee6512789d63b54773dedacd84b1d06b\", \"data\": \"0xf9d55e21000000000000000000000000000000000000000000000000000000000000000f\"}, \"latest\"], \"id\":1}'\n{\"jsonrpc\":\"2.0\",\"id\":1,\"result\":\"0x0000000000000000000000000000000000000000000000000000000000000001\"}\n$ curl --location http://localhost:8559 -X POST --insecure --header \"Content-Type: application/json\" --data '{\"jsonrpc\":\"2.0\", \"method\":\"eth_call\", \"params\":[{\"from\": \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\", \"to\": \"0xe0203c7aee6512789d63b54773dedacd84b1d06b\", \"data\": \"0xf9d55e210000000000000000000000000000000000000000000000000000000000000005\"}, \"latest\"], \"id\":1}'\n{\"jsonrpc\":\"2.0\",\"id\":1,\"result\":\"0x0000000000000000000000000000000000000000000000000000000000000000\"}",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3</span>"
    ]
  },
  {
    "objectID": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#sec:remix:ide",
    "href": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#sec:remix:ide",
    "title": "9  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3",
    "section": "9.9 Utilizando o REMIX IDE para os deploys",
    "text": "9.9 Utilizando o REMIX IDE para os deploys\nA REMIX é uma IDE que funciona online, sem a necessidade de instalação. A Figura 9.V apresenta a tela inicial da ferramenta que pode ser acessada em https://remix.ethereum.org/.\n\n\n\n\n\n\nFigure 9.V- Interface do remix.ethereum.org\n\n\n\nNa interface do REMIX podemos configurar a versão do compilador solc conforme apresentado na Figura 9.VI, a versão atual apresentada é a 0.8.27+commit.40a35a09, porém por estarmos executando a versão 1.11.6 do geth, a EVM é a Paris, logo para o conjunto de instruções ser compatível é necessário que compilemos com a versão 0.8.19 do solc.\n\n\n\n\n\n\nFigure 9.VI- Configurando Versão do solc\n\n\n\nO tipo de ambiente de deploy e a conta principal podem ser escolhidos na tela apresentada na Figura 9.VII.\n\n\n\n\n\n\nFigure 9.VII- Configurando Ambiente de Deploy}\n\n\n\nO ambiente para deploy e execução de transações pode ser escolhido conforme Figura 9.VIII.\n\n\n\n\n\n\nFigure 9.VIII- Configurando Ambiente de Deploy\n\n\n\nDentre os possíveis temos: Injected Provider - Metamask, Remix VM (Cancun), Remix VM (Mainnet fork), Remix VM (Sepolia fork), Remix VM (Shangai), Dev - Hardhat Provider e Dev - Ganache Provider, entre outros que podem ser inseridos na lista na opção Customize this list….\n\n9.9.1 Executando o geth para aceitar conexão com o REMIX\n\nÉ necessário que executemos o geth para aceitar conexão com REMIX e nas configurações da IDE indicar a rede que será utilizada.\nPara aceitar conexões da IDE REMIX inicie o cliente de execução geth com alguns parâmetros extras -http.corsdomain=\"https://remix.ethereum.org\" --vmdebug, o Código 9.XVIII.\n\n\n\nListing 9.XVIII- Comando geth para conexão com REMIX\n\n\n$ $HOME/go-ethereum-1.11.6/build/bin/geth --networkid 786 --datadir ~/.etherprivate-ethash/ --syncmode full --allow-insecure-unlock  --identity \"RAGEtherPrivate\"  --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin,debug,miner,txpool\" --http.corsdomain=\"https://remix.ethereum.org\" --vmdebug --keystore ~/.etherprivate-ethash/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.etherprivate-ethash/geth/jwtsecret --nodiscover --maxpeers 15 --miner.etherbase=0x2db017e44b03b37755a4b15e14cd799f83de4c13 --signer=$HOME/.etherprivate-ethash/clef/clef.ipc --dev console\n\n\n\n\n\n\n9.9.2 Conectando o REMIX ao Metamask\nCaso não tenha uma rede conectada ao Metamask acesse a Aula 07: Simulando uma Rede Ethereum Local com Ganache e Metamask.\nNa interface do Remix, a conexão com o Metamask pode ser feita utilizando a opção Injected Provider - Metamask, que por sua vez está conectado à Rede Privada Local. Escolha uma conta entre as listadas, a conta \\(0\\) que é retornada no eth.accounts.\n\n\n\nConexão com o Metamask\n\n\nA rede será detectada e podemos escolher uma conta entras as conectadas no Metamask para ser a conta que receberá cobrança pelos deploys, conforme Figura 9.IX.\n\n\n\n\n\n\nFigure 9.IX- Remix conectado ao Metamask}\n\n\n\nAgora temos o Remix configurado e conectado à Rede Local via Metamask.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3</span>"
    ]
  },
  {
    "objectID": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#fazendo-o-deploy-pelo-remix",
    "href": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#fazendo-o-deploy-pelo-remix",
    "title": "9  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3",
    "section": "9.10 Fazendo o deploy pelo REMIX",
    "text": "9.10 Fazendo o deploy pelo REMIX\nUma vez conectado à Rede Privada Local via Metamask é possível fazer deploy do contrato. Clicando em Deploy e fazendo as confirmações no Metamask.\n\n\n\nDeploy do Contrato\n\n\nA implantação aparecerá como pendente.\n\n\n\nImplantação (Pendente)\n\n\nO processo de mineração pode ser acelerado, clicando na opção eu salvando.\n\n\n\nAcelerar o processamento\n\n\nINFO [10-03|23:17:32.431] Submitted contract creation              hash=0xca3fede5fa596e4b93f50002d81fc1d025d6220fc984400d3be94508adbff802 from=0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 nonce=6 contract=0x0c792147d011841783Da2C53815A7Dc9a19Cc9FC value=0\nUm erro apareceu no console da REMIX.\ncreation of valueChecker pending...\ncreation of valueChecker errored: Error occurred: Transaction started at 440 but was not mined within 122 blocks. Please make sure your transaction was properly sent and there no pervious pending transaction for the same account. However, be aware that it might still be mined!\n    Transaction Hash: 0xc2efdbae4744516ce7c9c17dbe9bf766f21604c4d1b9f39550a487028cf5a100.\n\nTransaction started at 440 but was not mined within 122 blocks. Please make sure your transaction was properly sent and there no pervious pending transaction for the same account. However, be aware that it might still be mined!\n    Transaction Hash: 0xc2efdbae4744516ce7c9c17dbe9bf766f21604c4d1b9f39550a487028cf5a100\n\nYou may want to cautiously increase the gas limit if the transaction went out of gas.\n\n\n\nErro por gas limite\n\n\nInicie a mineração e deixe ser acumulado algum saldo na carteira, se o saldo for suficiente o contrato será minerado:\n&gt; miner.start()\nnull\n&gt; null [object Object]\nContract mined! address: 0xe0203c7aee6512789d63b54773dedacd84b1d06btransactionHash: 0xd3422f91fc4063682fcaed37cc7eb8b7b438cae9f0c9b56596bc49ededaf2081\n\n&gt; miner.stop()\nTentando o deploy novamente, o erro ainda ocorre:\ncreation of valueChecker pending...\ncreation of valueChecker errored: Error occurred: Transaction started at 1825 but was not mined within 92 blocks. Please make sure your transaction was properly sent and there no pervious pending transaction for the same account. However, be aware that it might still be mined!\n    Transaction Hash: 0x5cd14a7785878c22c8eaec8da1124ca574babcdaec44c4b66ecd1a6b33838899.\n\nTransaction started at 1825 but was not mined within 92 blocks. Please make sure your transaction was properly sent and there no pervious pending transaction for the same account. However, be aware that it might still be mined!\n    Transaction Hash: 0x5cd14a7785878c22c8eaec8da1124ca574babcdaec44c4b66ecd1a6b33838899\n\nYou may want to cautiously increase the gas limit if the transaction went out of gas.\nhttps://support.metamask.io/pt-br/transactions-and-gas/gas-fees/why-did-my-transaction-fail-with-an-out-of-gas-error-how-can-i-fix-it/\nEnquanto isso você pode acompanhar o status da transação pelo hash.\n&gt; eth.getTransaction(\"0x56482105054dd8d57f0cea35a58544d8327891870347c62d03853456bedb724c\")\n{\n  blockHash: null,\n  blockNumber: null,\n  chainId: \"0x312\",\n  from: \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\",\n  gas: 183137,\n  gasPrice: 1331000000,\n  hash: \"0x56482105054dd8d57f0cea35a58544d8327891870347c62d03853456bedb724c\",\n  input: \"0x\",\n  nonce: 4,\n  r: \"0xbd884444908c5f0b97631bbf93e2c0fa451522a9a17d1cced4b8019201168161\",\n  s: \"0x5137f387d7c3159b20533fc99c2b3dfad7c231b3e46e0e2bc78c058ebc0145d2\",\n  to: \"0x2db017e44b03b37755a4b15e14cd799f83de4c13\",\n  transactionIndex: null,\n  type: \"0x0\",\n  v: \"0x647\",\n  value: 0\n}\n&gt; \nQuando o contrato for minerado um retorno no console será apresentando:\n&gt; miner.start()\nnull\n&gt; null [object Object]\nContract mined! address: 0xe0203c7aee6512789d63b54773dedacd84b1d06btransactionHash: 0xd3422f91fc4063682fcaed37cc7eb8b7b438cae9f0c9b56596bc49ededaf2081\n\n&gt; miner.stop()",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3</span>"
    ]
  },
  {
    "objectID": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#conectando-o-remix-ao-ganache",
    "href": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#conectando-o-remix-ao-ganache",
    "title": "9  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3",
    "section": "9.11 Conectando o REMIX ao Ganache",
    "text": "9.11 Conectando o REMIX ao Ganache\nO Remix pode se conectar diretamente ao Ganache através da opção Dev - Ganache Provider, precisa estar executando com o mesmo endereço e porta que o Ganache está respondendo.\n\n\n\nConfigurando Remix para acessar o Ganache\n\n\nAo fazermos o deploy do contrato irá aparecer na lista de transações como CONTRACT CREATION.\n\n\n\nDeploy de Contrato\n\n\nQuando o contrato for implantado vai aparecer no bloco que foi minerado na lista de blocos do Ganache.\n\n\n\nBloco Minerado\n\n\nSe forem feitas chamadas à função do contrato implantado, essas transações irão aparecer como CONTRACT CALL na lista de transações.\n\n\n\nContract Call",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3</span>"
    ]
  },
  {
    "objectID": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#interagindo-com-contratos-via-frontends-web",
    "href": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#interagindo-com-contratos-via-frontends-web",
    "title": "9  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3",
    "section": "9.12 Interagindo com contratos via frontends web ",
    "text": "9.12 Interagindo com contratos via frontends web \nA interação com smart contracts como parte de uma DApps é normalmente feito usando uma interface web desenvolvida utilizando HTML/JS/CSS. Algumas bibliotecas e frameworks como React, Redux, e Drizzle, podem também ser usadas. A Figura 9.X apresenta uma arquitetura básica de funcionamento de uma aplicação web que se comunica com a blockchain do Ethereum via comandos de cobertura da biblioteca web3.\n\n\n\n\n\n\nFigure 9.X- Interação com Aplicações Web",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3</span>"
    ]
  },
  {
    "objectID": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#considerações-finais",
    "href": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#considerações-finais",
    "title": "9  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3",
    "section": "9.13 Considerações Finais",
    "text": "9.13 Considerações Finais\nNesta prática fizemos o deploy ou implantação de um exemplo de contrato, via console Javascript, via chamada RPC e utilizando a REMIX conectada à Rede Privada Local via Metamask. Todas as redes privadas locais ou simuladas que testamos podem ser utilizadas para a execução de comandos de implantação de contratos.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3</span>"
    ]
  },
  {
    "objectID": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#leitura-recomendada",
    "href": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#leitura-recomendada",
    "title": "9  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3",
    "section": "9.14 Leitura Recomendada",
    "text": "9.14 Leitura Recomendada\n\n\n\n\n\n\nLeitura Recomendada\n\n\n\nCapítulo 15: Introducing Web3\nLivro: IMRAN BASHIR. Mastering Blockchain : Distributed Ledger Technology, Decentralization, and Smart Contracts Explained, 2nd Edition.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3</span>"
    ]
  },
  {
    "objectID": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#referências",
    "href": "aula-09-pratica-ethereum-introducao-ao-web3/aula-09-pratica-ethereum-introducao-ao-web3.html#referências",
    "title": "9  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3",
    "section": "10.1 Referências",
    "text": "10.1 Referências",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução ao Web3</span>"
    ]
  },
  {
    "objectID": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html",
    "href": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html",
    "title": "10  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução aos Testes e Deploy com Truffle",
    "section": "",
    "text": "10.1 Introdução\nNesta prática são apresentadas algumas ferramentas de Desenvolvimento e Frameworks para o desenvolvimento e implantação de Contratos Inteligentes. Introduz o Truffle framework, que também pode ser usado para testar, migrar contratos inteligentes.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e _Frameworks_ Ethereum: Introdução aos Testes e _Deploy_ com `Truffle`</span>"
    ]
  },
  {
    "objectID": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#introdução",
    "href": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#introdução",
    "title": "10  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução aos Testes e Deploy com Truffle",
    "section": "",
    "text": "Apresentação de Ferramentas de Desenvolvimento e Frameworks.\nExplorar o uso do Truffle para testar e implantar contratos.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e _Frameworks_ Ethereum: Introdução aos Testes e _Deploy_ com `Truffle`</span>"
    ]
  },
  {
    "objectID": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#instalação-das-ferramentas",
    "href": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#instalação-das-ferramentas",
    "title": "10  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução aos Testes e Deploy com Truffle",
    "section": "10.2 Instalação das Ferramentas",
    "text": "10.2 Instalação das Ferramentas\n\nInstale as outras ferramentas: Node.js, Ganache e Ganache-CLI, Truffle, Drizzle, Embark e outras ferramentas indicadas no capítulo. O truffle utiliza o nodejs nas versões v14-v18 (https://trufflesuite.com/docs/truffle/how-to/install/)\nInstale o nvm para configurar a versão desejada para o Node.js e as bibliotecas necessárias.\n\n$ sudo apt-get install nvm\n$ nvm install 18\n\nInstale o Truffle.\n\n$ npm install -g truffle\n\nVerifique a versão instalada das ferramentas.\n\n$ truffle --version\nTruffle v5.11.5 (core: 5.11.5)\nGanache v7.9.1\nSolidity v0.5.16 (solc-js)\nNode v18.16.0\nWeb3.js v1.10.0\n$\nComandos possíves com o Truffle:\n$ truffle --help\nTruffle v5.11.5 - a development framework for Ethereum\n\nUsage: truffle &lt;command&gt; [options]\n\nCommands:\n  truffle build      Execute build pipeline (if configuration present)\n  truffle call       Call read-only contract function with arguments\n  truffle compile    Compile contract source files\n  truffle config     Set user-level configuration options\n  truffle console    Run a console with contract abstractions and commands\n                     available\n  truffle create     Helper to create new contracts, migrations and tests\n  truffle dashboard  Start Truffle Dashboard to sign development transactions\n                     using browser wallet\n  truffle db         Database interface commands\n  truffle debug      Interactively debug any transaction on the blockchain\n  truffle deploy     (alias for migrate)\n  truffle develop    Open a console with a local development blockchain\n  truffle exec       Execute a JS module within this Truffle environment\n  truffle help       List all commands or provide information about a specific\n                     command\n  truffle init       Initialize new and empty Ethereum project\n  truffle migrate    Run migrations to deploy contracts\n  truffle networks   Show addresses for deployed contracts on each network\n  truffle obtain     Fetch and cache a specified compiler\n  truffle opcode     Print the compiled opcodes for a given contract\n  truffle preserve   Save data to decentralized storage platforms like IPFS and\n                     Filecoin\n  truffle run        Run a third-party command\n  truffle test       Run JavaScript and Solidity tests\n  truffle unbox      Download a Truffle Box, a pre-built Truffle project\n  truffle version    Show version number and exit\n  truffle watch      Watch filesystem for changes and rebuild the project\n                     automatically\n\nOptions:\n  --help     Show help                                                 [boolean]\n  --version  Show version number                                       [boolean]\n\nSee more at https://trufflesuite.com/docs/\nFor Ethereum JSON-RPC documentation see https://ganache.dev\n$",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e _Frameworks_ Ethereum: Introdução aos Testes e _Deploy_ com `Truffle`</span>"
    ]
  },
  {
    "objectID": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#criando-a-estrutura-básica-do-projeto-com-o-truffle",
    "href": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#criando-a-estrutura-básica-do-projeto-com-o-truffle",
    "title": "10  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução aos Testes e Deploy com Truffle",
    "section": "10.3 Criando a estrutura básica do projeto com o Truffle",
    "text": "10.3 Criando a estrutura básica do projeto com o Truffle\nIremos criar a estrutura de um projeto básico. Crie um diretório com o nome do projeto, aqui estou utilizando o nome projeto-helloworld-truffle, crie e acesse o diretório.\n[src]$ mkdir projeto-helloworld-truffle\n[src]$ cd projeto-helloworld-truffle/\nUtilize o comando truffle init para inicializar a estrutura básica do projeto (skeleton).\n[projeto-helloworld-truffle]$ truffle init\n\nStarting init...\n================\n\n&gt; Copying project files to .../src/projeto-helloworld-truffle\n\nInit successful, sweet!\n\nTry our scaffold commands to get started:\n  $ truffle create contract YourContractName # scaffold a contract\n  $ truffle create test YourTestName         # scaffold a test\n\nhttp://trufflesuite.com/docs\n\n[projeto-helloworld-truffle]$ ls\ncontracts  migrations  test  truffle-config.js\n[projeto-helloworld-truffle]$\n[src]$ tree projeto-helloworld-truffle/\nprojeto-helloworld-truffle/\n|-- contracts\n|-- migrations\n|-- test\n|-- truffle-config.js\n\n3 directories, 1 files\nSe verificarem os diretórios criados contracts, migrations e test estão vazios e foi criado um arquivo de configuração truffle-config.js.\n\ncontracts: diretório para os contratos.\nmigrations: diretório para os scripts de implantação (deploy).\ntest: diretório para os arquivos de teste.\ntruffle-config.js: Arquivo de configuração do Truffle.\n\nVamos criar um contrato com nome de Greeter para testarmos.\n[projeto-helloworld-truffle]$ truffle create contract Greeter\n[projeto-helloworld-truffle]$ ls contracts/\nGreeter.sol\nNotem que o arquivo Greeter.sol foi criado dentro do diretório contracts.\n[src]$ tree projeto-helloworld-truffle/\nprojeto-helloworld-truffle/\n|-- contracts\n  |-- Greeter.sol\n|-- migrations\n|-- test\n|-- truffle-config.js\n\n3 directories, 2 files\nEditando o contrato Greeter.sol temos uma estrutura básica já criada pelo Truffle.\n// SPDX-License-Identifier: MIT\npragma solidity &gt;=0.4.22 &lt;0.9.0;\n\ncontract Greeter {\n  constructor() public {\n  }\n}\nAltere o código do Greeter.sol para:\n// SPDX-License-Identifier: MIT\npragma solidity &gt;=0.4.22 &lt;0.9.0;\n\ncontract Greeter {\n    string private _greeting = \"Hello, World!\";\n    \n    function greet() external view returns(string memory) {\n        return _greeting;\n    }\n    function setGreeting(string calldata greeting) external {\n        _greeting = greeting;\n    }\n}\nVamos criar um teste para o contrato Greeter:\n[projeto-helloworld-truffle]$ truffle create test greeter_test\n[projeto-helloworld-truffle]$ tree ../projeto-helloworld-truffle\n../projeto-helloworld-truffle\n|-- contracts\n    |-- Greeter.sol\n|-- migrations\n|-- test\n    |-- greeter_test.js\n|-- truffle-config.js\n\n4 directories, 3 files\nEdite o arquivo test/greeter_test.js e altere o código para:\nconst GreeterContract = artifacts.require(\"Greeter\");\n\n/*\n * uncomment accounts to access the test accounts made available by the\n * Ethereum client\n * See docs: https://www.trufflesuite.com/docs/truffle/testing/writing-tests-in-javascript\n */\ncontract(\"Greeter\", () =&gt; {\n  it(\"has been deployed successfully\", async () =&gt; {\n    const greeter = await GreeterContract.deployed();\n    assert(greeter, \"contract was not deployed\");\n  });\n});\nSe tentarmos executar o teste para o Greeter, o teste irá falhar e emitirá uma mensagem que o contrato não existe, pois não foi feito o deploy para a rede detectada.\n[projeto-helloworld-truffle]$ truffle test\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Artifacts written to /tmp/test--524485-YnO69Mn4D3rq\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\n\n\n  Contract: Greeter\n    1) has been deployed successfully\n    &gt; No events were emitted\n\n\n  0 passing (68ms)\n  1 failing\n\n  1) Contract: Greeter\n       has been deployed successfully:\n     Error: Greeter has not been deployed to detected network (network/artifact mismatch)\n      at Object.checkNetworkArtifactMatch (/home/rogerio/.nvm/versions/node/v18.16.0/lib/node_modules/truffle/build/ webpack:/packages/contract/lib/utils/index.js:256:1)\n      at Function.deployed (/home/rogerio/.nvm/versions/node/v18.16.0/lib/node_modules/truffle/build/ webpack:/packages/contract/lib/contract/constructorMethods.js:83:1)\n      at processTicksAndRejections (node:internal/process/task_queues:95:5)\n      at Context.&lt;anonymous&gt; (test/greeter_test.js:10:21)\nToda vez que executamos o comando truffle test, o Truffle compila os contratos e então implanta eles para uma rede de teste. Para fazer o deploy precisamos de um outro arquivo migrations.\nMigrations são scripts escritos em JavaScript que são usados para automatizar a implantação dos contratos.\n\nCrie o arquivo migrations/2_deploy_greeter.js:\n[projeto-helloworld-truffle]$ touch migrations/2_deploy_greeter.js\nEdite o arquivo migrations/2_deploy_greeter.js e altere seu conteúdo para:\nconst GreeterContract = artifacts.require(\"Greeter\");\n\nmodule.exports = function(deployer) {\n    deployer.deploy(GreeterContract);\n}\nAgora o comando de teste pode ser executado novamente:\n\n[projeto-helloworld-truffle]$ truffle test\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Artifacts written to /tmp/test--525087-Mn9TjRLsIpEK\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\n\n\n  Contract: Greeter\n    [ok] has been deployed successfully\n\n\n  1 passing (48ms)\nVoltemos ao arquivo de teste test/greeter_test.js para adicionarmos um teste para a função greet().\ndescribe(\"greet()\", () =&gt; {\n  it(\"returns 'Hello, World!'\", async () =&gt; {\n  const greeter = await GreeterContract.deployed();\n  const expected = \"Hello, World!\";\n  const actual = await greeter.greet();\n  assert.equal(actual, expected, \"greeted with 'Hello, World!'\");\n  });\n});\nExecutando o teste novamente:\n[projeto-helloworld-truffle]$ truffle test\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Artifacts written to /tmp/test--525218-DtJhC1dxt2xO\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\n\n\n  Contract: Greeter\n    [ok] has been deployed successfully\n\n  greet()\n    [ok] returns 'Hello, World!'\n\n\n  2 passing (72ms)\nCaso a função greet() não estivesse definida em Greeter.sol o teste falharia e uma mensagem de erro que ela não está definida seria emitida. (Comentei a função para vermos a mensagem).\n[projeto-helloworld-truffle]$ truffle test\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Artifacts written to /tmp/test--525417-6OKN7bdHq2gv\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\n\n\n  Contract: Greeter\n    [ok] has been deployed successfully\n\n  greet()\n    1) returns 'Hello, World!'\n\n\n  1 passing (36ms)\n  1 failing\n\n  1) greet()\n       returns 'Hello, World!':\n     TypeError: greeter.greet is not a function\n      at Context.&lt;anonymous&gt; (test/greeter_test.js:19:32)\n      at processTicksAndRejections (node:internal/process/task_queues:95:5)\nA função function setGreeting(string calldata greeting) pode ser utilizada para definirmos a mensagem de saudação, deixando o comportamento dinâmico. Adicionemos ao arquivo de teste test/greeter_test.js o código para testar a função setGreeting(string...).\ncontract(\"Greeter: update greeting\", () =&gt; {\n  describe(\"setGreeting(string)\", () =&gt; {\n    it(\"sets greeting to passed in string\", async () =&gt; {\n      const greeter = await GreeterContract.deployed()\n      const expected = \"Hi there!\";\n      await greeter.setGreeting(expected);\n      const actual = await greeter.greet();\n    \n      assert.equal(actual, expected, \"greeting was not updated\");\n    });\n  });\n});\nExecutando o teste novamente:\n[projeto-helloworld-truffle]$ truffle test\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Artifacts written to /tmp/test--525963-QrnPaijOOsvy\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\n\n\n  Contract: Greeter\n    [ok] has been deployed successfully\n\n  greet()\n    [ok] returns 'Hello, World!'\n\n  Contract: Greeter: update greeting\n    setGreeting(string)\n      [ok] sets greeting to passed in string (75ms)\n\n\n  3 passing (153ms)\nAté aqui temos um projeto básico com teste.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e _Frameworks_ Ethereum: Introdução aos Testes e _Deploy_ com `Truffle`</span>"
    ]
  },
  {
    "objectID": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#definindo-um-dono-para-o-contrato",
    "href": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#definindo-um-dono-para-o-contrato",
    "title": "10  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução aos Testes e Deploy com Truffle",
    "section": "10.4 Definindo um dono para o Contrato",
    "text": "10.4 Definindo um dono para o Contrato\nAdicionemos ao arquivo de teste do contrato o teste para uma função que retorna o proprietário do contrato.\ncontract(\"owner()\", (accounts) =&gt; {\n    it(\"returns the address of the owner\", async () =&gt; {\n        const greeter = await GreeterContract.deployed();\n        const owner = await greeter.owner();\n        assert(owner, \"the current owner\");\n    });\n  });\nExecutando os testes novamente irá dar erro pois a função owner() não foi definida.\n[projeto-helloworld-truffle]$ truffle test\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Artifacts written to /tmp/test--526818-prsf62z8pH8F\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\n\n\n  Contract: Greeter\n    [ok] has been deployed successfully\n    greet()\n      [ok] returns 'Hello, World!'\n    Contract: Greeter: update greeting\n      setGreeting(string)\n        [ok] sets greeting to passed in string (82ms)\n    owner()\n      1) returns the address of the owner\n    &gt; No events were emitted\n\n\n  3 passing (190ms)\n  1 failing\n\n  1) Contract: Greeter\n       owner()\n         returns the address of the owner:\n     TypeError: greeter.owner is not a function\n      at Context.&lt;anonymous&gt; (test/greeter_test.js:41:35)\n      at processTicksAndRejections (node:internal/process/task_queues:95:5)\nAdicionemos um atributo _owner e a função no Greeter.sol.\n// SPDX-License-Identifier: MIT\npragma solidity &gt;=0.4.22 &lt;0.9.0;\n\ncontract Greeter {\n    string private _greeting = \"Hello, World!\";\n    address private _owner;\n    \n    function greet() external view returns(string memory) {\n        return _greeting;\n    }\n    \n    function setGreeting(string calldata greeting) external {\n        _greeting = greeting;\n    }\n\n    function owner() public view returns(address) {\n        return _owner;\n    }\n}\nExecutando o teste novamente.\n[projeto-helloworld-truffle]$ truffle test\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Artifacts written to /tmp/test--527178-w5UnYmv6jPUK\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\n\n\n  Contract: Greeter\n    [ok] has been deployed successfully\n    greet()\n      [ok] returns 'Hello, World!'\n    Contract: Greeter: update greeting\n      setGreeting(string)\n        [ok] sets greeting to passed in string (84ms)\n    owner()\n      [ok] returns the address of the owner\n\n\n  4 passing (200ms)\nO que realmente queremos testar é se o endereço em owner é o mesmo endereço que de quem fez o deploy. Adicionemos para isso uma verificação se o endereço de propriedade é o mesmo da conta padrão que fez a implantação do contrato. Para testarmos isso, precisamos recuperar a variável accounts do ambiente de teste do Truffle.\nAltere o arquivo de teste para fazer a verificação:\ncontract(\"owner()\", (accounts) =&gt; {\n    it(\"returns the address of the owner\", async () =&gt; {\n        const greeter = await GreeterContract.deployed();\n        const owner = await greeter.owner();\n        assert(owner, \"the current owner\");\n    });\n    \n    it(\"matches the address that originally deployed the contract\", async () =&gt; {\n        const greeter = await GreeterContract.deployed();\n        const owner = await greeter.owner();\n        const expected = accounts[0];\n        assert.equal(owner, expected, \"matches address used to deploy contract\");\n    });\n    \n  });\nA conta também pode ser verificada com o console do Truffle:\n[projeto-helloworld-truffle]$ truffle console\ntruffle(ganache)&gt; accounts\n[\n  '0x5C93A5B7BDB9bDc43322F774Cb968e3b01Ab3279',\n  '0xd6724701fF337dD6512dD7FaD102F58fCA66570f',\n  '0x96E3D79D3D7520096302058d28D148D115F7Beba',\n  '0x6d68B588E706d70625A9B233F0e750c75dCc5B17',\n  '0xD2E25790e56eE9C1E7E2DeD6d52b8fad745F3de6',\n  '0x1ED231Ce2f5217C3Ea1714ce93364edC162FB028',\n  '0x8F0F639B591219A6221E64D5810E82b6ce22Df23',\n  '0x07744DDa152A9ADEEFEae37C7E773a9d4c75b67E',\n  '0x339A0d1f045794cfB6e8e78119E8a2C766d61492',\n  '0x344b14B22d9EDf6cCdCadf00Fe9Aa78730a66A49'\n]\ntruffle(ganache)&gt; \nAdicione o construtor ao contrato Greeter.sol\n// SPDX-License-Identifier: MIT\npragma solidity &gt;=0.4.22 &lt;0.9.0;\n\ncontract Greeter {\n    string private _greeting = \"Hello, World!\";\n    address private _owner;\n\n    constructor() public {\n        _owner = msg.sender;\n    }\n    \n    function greet() external view returns(string memory) {\n        return _greeting;\n    }\n    \n    function setGreeting(string calldata greeting) external {\n        _greeting = greeting;\n    }\n\n    function owner() public view returns(address) {\n        return _owner;\n    }\n}\nExecutando o teste novamente.\n[projeto-helloworld-truffle]$ truffle test\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Compilation warnings encountered:\n\n    Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --&gt; project:/contracts/Greeter.sol:8:5:\n  |\n8 |     constructor() public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n\n&gt; Artifacts written to /tmp/test--11618-Leo1b6jeqjDA\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\n\n\n  Contract: Greeter\n    [ok] has been deployed successfully\n    greet()\n      [ok] returns 'Hello, World!'\n    Contract: Greeter: update greeting\n      setGreeting(string)\n        [ok] sets greeting to passed in string (74ms)\n    Contract: owner()\n      [ok] returns the address of the owner\n      [ok] matches the address that originally deployed the contract\n\n\n  5 passing (212ms)\n\n[projeto-helloworld-truffle]$ \nAtualize o teste para verificar quando a mensagem for enviada por outra conta.\ncontract(\"Greeter: update greeting\", (accounts) =&gt; {\n    describe(\"setGreeting(string)\", () =&gt; {\n      describe(\"when message is sent by the owner\", () =&gt; {\n        it(\"sets greeting to passed in string\", async () =&gt; {\n          const greeter = await GreeterContract.deployed()\n          const expected = \"The owner changed the message\";\n          await greeter.setGreeting(expected);\n          const actual = await greeter.greet();\n          assert.equal(actual, expected, \"greeting updated\");\n        });\n      });\n    });\n    describe(\"when message is sent by another account\", () =&gt; {\n      it(\"does not set the greeting\", async () =&gt; {\n        const greeter = await GreeterContract.deployed()\n        const expected = await greeter.greet();\n        try {\n          await greeter.setGreeting(\"Not the owner\", { from: accounts[1] });\n        } catch(err) {\n          const errorMessage = \"Ownable: caller is not the owner\"\n          assert.equal(err.reason, errorMessage, \"greeting should not update\");\n          return;\n        }\n        assert(false, \"greeting should not update\");\n      });\n    });\n  });\nExecutando o teste novamente irá dar uma falha com a mensagem AssertionError: greeting should not update.\n[projeto-helloworld-truffle]$ truffle test\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Compilation warnings encountered:\n\n    Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --&gt; project:/contracts/Greeter.sol:8:5:\n  |\n8 |     constructor() public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n\n&gt; Artifacts written to /tmp/test--12088-cfSID7YBzW9j\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\n\n\n  Contract: Greeter\n    [ok] has been deployed successfully\n    greet()\n      [ok] returns 'Hello, World!'\n    Contract: Greeter: update greeting\n      setGreeting(string)\n        [ok] sets greeting to passed in string (72ms)\n    Contract: owner()\n      [ok] returns the address of the owner\n      [ok] matches the address that originally deployed the contract\n    Contract: Greeter: update greeting\n      setGreeting(string)\n        when message is sent by the owner\n          [ok] sets greeting to passed in string (66ms)\n      when message is sent by another account\n        1) does not set the greeting\n    &gt; No events were emitted\n    &gt; No events were emitted\n\n\n  6 passing (361ms)\n  1 failing\n\n  1) Contract: Greeter\n       Contract: Greeter: update greeting\n         when message is sent by another account\n           does not set the greeting:\n     AssertionError: greeting should not update\n      at Context.&lt;anonymous&gt; (test/greeter_test.js:94:9)\n      at processTicksAndRejections (node:internal/process/task_queues:95:5)\nPara corrigir esse falha, adicione o código em Greeter.sol após o construtor.\nmodifier onlyOwner() {\n  require(\n    msg.sender == _owner,\n    \"Ownable: caller is not the owner\"\n  );\n  _;\n}\n\nE altere a função setGreeting(...) com o modificador onlyOwner.\nfunction setGreeting(string calldata greeting) external onlyOwner {\n  _greeting = greeting;\n}\nRunning our tests, we see they are all passing!\n[projeto-helloworld-truffle]$ truffle test\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Compilation warnings encountered:\n\n    Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --&gt; project:/contracts/Greeter.sol:8:5:\n  |\n8 |     constructor() public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n\n&gt; Artifacts written to /tmp/test--12355-rIMOxZTykP2W\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\n\n\n  Contract: Greeter\n    [ok] has been deployed successfully\n    greet()\n      [ok] returns 'Hello, World!'\n    Contract: Greeter: update greeting\n      setGreeting(string)\n        [ok] sets greeting to passed in string (84ms)\n    Contract: owner()\n      [ok] returns the address of the owner\n      [ok] matches the address that originally deployed the contract\n    Contract: Greeter: update greeting\n      setGreeting(string)\n        when message is sent by the owner\n          [ok] sets greeting to passed in string (80ms)\n      when message is sent by another account\n        [ok] does not set the greeting (363ms)\n\n\n  7 passing (751ms)",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e _Frameworks_ Ethereum: Introdução aos Testes e _Deploy_ com `Truffle`</span>"
    ]
  },
  {
    "objectID": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#utilizando-o-openzeppelin",
    "href": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#utilizando-o-openzeppelin",
    "title": "10  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução aos Testes e Deploy com Truffle",
    "section": "10.5 Utilizando o OpenZeppelin",
    "text": "10.5 Utilizando o OpenZeppelin\nUma outra forma de fazer essa implementação de verificação de propriedade pode ser feita com a biblioteca OpenZeppelin que além de já ter algumas implementações que ajudam na criação de contratos que podem ser usadas na criação de tokens, ele também tem contratos que implementam a ideia de propriedade (ownership), e no que implementamos duplicamos esse comportamento. Vamos atualizar o Greeter.sol para utilizar o que já tem pronto na OpenZeppelin.\nInstale o pacote openzeppelin-solidity.\n[projeto-helloworld-truffle]$ npm install openzeppelin-solidity\n\nadded 1 package in 4s\nAltere o código do Greeter.sol para:\npragma solidity &gt;=0.4.22 &lt;0.9.0;\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\ncontract Greeter is Ownable {\n...rest of file...\nO código do Greeter.sol ficando como segue:\n// SPDX-License-Identifier: MIT\npragma solidity &gt;=0.4.22 &lt;0.9.0;\n\nimport \"openzeppelin-solidity/contracts/access/Ownable.sol\";\n\ncontract Greeter is Ownable {\n  string private _greeting = \"Hello, World!\";\n\n  function greet() external view returns(string memory) {\n    return _greeting;\n  }\n\n  function setGreeting(string calldata greeting) external onlyOwner {\n    _greeting = greeting;\n  }\n}\n\nReexecutando os testes:\n[projeto-helloworld-truffle]$ truffle test\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Compiling ./contracts/Greeter_orig.sol\n&gt; Compiling openzeppelin-solidity/contracts/access/Ownable.sol\n\nParserError: Source file requires different compiler version (current compiler is 0.8.21+commit.d9974bed.Emscripten.clang) - note that nightly builds are considered to be strictly less than the released version\n --&gt; openzeppelin-solidity/contracts/access/Ownable.sol:3:1:\n  |\n3 | pragma solidity &gt;=0.6.0 &lt;0.8.0;\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\nError: Truffle is currently using solc 0.8.21, but one or more of your contracts specify \"pragma solidity &gt;=0.6.0 &lt;0.8.0\".\nPlease update your truffle config or pragma statement(s).\n(See https://trufflesuite.com/docs/truffle/reference/configuration#compiler-configuration for information on\nconfiguring Truffle to use a specific solc compiler version.)\n\nCompilation failed. See above.\nTruffle v5.11.5 (core: 5.11.5)\nNode v18.16.0\nEdite o arquivo projeto-helloworld-truffle/node_modules/openzeppelin-solidity/contracts/access/ Ownable.sol e node_modules/openzeppelin-solidity/contracts/utils/Context.sol e altere a versão \"pragma solidity &gt;=0.4.22 &lt;0.9.0;\". No Context.sol para evitar o erro:\nTypeError: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.\n  --&gt; openzeppelin-solidity/contracts/utils/Context.sol:17:16:\n   |\n17 |         return msg.sender;\n   |                ^^^^^^^^^^\nAlterei o retorno da função com \"return payable(msg.sender);\" conforme esse link.\nReexecutando o teste:\n[projeto-helloworld-truffle]$ truffle test\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Compiling ./contracts/Greeter_orig.sol\n&gt; Compiling openzeppelin-solidity/contracts/access/Ownable.sol\n&gt; Compiling openzeppelin-solidity/contracts/utils/Context.sol\n&gt; Compilation warnings encountered:\n\n    Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --&gt; openzeppelin-solidity/contracts/access/Ownable.sol:26:5:\n   |\n26 |     constructor () internal {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n,Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --&gt; project:/contracts/Greeter_orig.sol:8:5:\n  |\n8 |     constructor() public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n\n&gt; Artifacts written to /tmp/test--16938-FERyshjfYd95\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\n\n&gt; Duplicate contract names found for Greeter.\n&gt; This can cause errors and unknown behavior. Please rename one of your contracts.\n\n\n  Contract: Greeter\n    [ok] has been deployed successfully\n    greet()\n      [ok] returns 'Hello, World!'\n    Contract: Greeter: update greeting\n      setGreeting(string)\n        [ok] sets greeting to passed in string (100ms)\n    Contract: owner()\n      [ok] returns the address of the owner\n      [ok] matches the address that originally deployed the contract\n    Contract: Greeter: update greeting\n      setGreeting(string)\n        when message is sent by the owner\n          [ok] sets greeting to passed in string (70ms)\n      when message is sent by another account\n        [ok] does not set the greeting (337ms)\n\n\n  7 passing (731ms)",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e _Frameworks_ Ethereum: Introdução aos Testes e _Deploy_ com `Truffle`</span>"
    ]
  },
  {
    "objectID": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#deploy-de-contratos-com-truffle",
    "href": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#deploy-de-contratos-com-truffle",
    "title": "10  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução aos Testes e Deploy com Truffle",
    "section": "10.6 Deploy de Contratos com Truffle",
    "text": "10.6 Deploy de Contratos com Truffle",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e _Frameworks_ Ethereum: Introdução aos Testes e _Deploy_ com `Truffle`</span>"
    ]
  },
  {
    "objectID": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#deploy-de-contratos-na-rede-simulada-do-truffle",
    "href": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#deploy-de-contratos-na-rede-simulada-do-truffle",
    "title": "10  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução aos Testes e Deploy com Truffle",
    "section": "10.7 Deploy de Contratos na rede simulada do Truffle",
    "text": "10.7 Deploy de Contratos na rede simulada do Truffle\nO comando truffle develop instancia uma rede develop do próprio truffle para que possamos executar os mesmos comandos que foram executados na prática anterior: compile, test e migrate. Ao executar o truffle com develop ele cria a rede com contas e uma chave privada que pode ser adicionada inclusive em carteiras como o Metamask para o desenvolvimento. Também disponibiliza um console javascript no qual podemos executar os comandos compile, test e migrate e interagir com o contrato implantado.\n[projeto-helloworld-truffle]$ truffle develop\nTruffle Develop started at http://127.0.0.1:9545/\n\nAccounts:\n(0) 0xfb3e8f1ca22e8455755562f1079c624b1d275a40\n(1) 0xa356061b85e3fde50748ecff8a0380a32a8fbe21\n(2) 0x91ecc890cd39950ca9bba8bebe97d09ca2923a1c\n(3) 0x2b4054dda869aecc226339aa4eb82d314dbb5cea\n(4) 0xd4fd1597e66ffa10b1b1018ec43606e460a3e01d\n(5) 0x3f7cee18d311f75cd88793d90e9e2a7df66c42f3\n(6) 0x95b3caf69bce253b32789473657f20ad4b6e7bc4\n(7) 0x302b59284ebdf2db41fced870a5065a68378de41\n(8) 0x79fbbd7ca4f9c410dbe088124052b36b5c3c1834\n(9) 0xdab16f7d6242ff621125599368e0394139bbe518\n\nPrivate Keys:\n(0) 4001289ac49b138e0b9bc8dc84d2efc7ff65a762222172e0f209c10066868b3e\n(1) 595e967e88f985ce432eb81b66310b0e46af411573a21b1eb3bc0cde537c7d16\n(2) 35e65622b2275fb776895b100a910d98465525d8b26f6c7af8b255ea94ea46a7\n(3) 0bbefd049bba646f1d12f6951609d11eee7c6c9ce60165e8b7846151f0b9038c\n(4) fadefaf5addd9c405ded5abfac3a3fe8353d9851ff4c07db69f0c419088fb51c\n(5) 40c1f59c548a95193b0c29a08de44b86e8e00febd5a5f472f07f608c6800794e\n(6) cd3fe312a1e5cea9de7e5c682b490a705c9a5fa3865453d3e20856ed7e28ff18\n(7) 8f2149d53bb179e8214f831e1a81df9427397d673fb7b1c50bbf83a1dfe8cf40\n(8) e0266f03fa1d8e42cfc442a067252815e045fc4d9fee8cdc99a96948b885c7f0\n(9) 2970a0dc7a753bbc4ddf49016f4b64fe2b57d93ecc872b5396c40e9688860c33\n\nMnemonic: enable grace credit robust flight demand excuse airport replace episode real emerge\n\n\\warning  Important \\warning  : This mnemonic was created for you by Truffle. It is not secure.\nEnsure you do not use it on production blockchains, or else you risk losing funds.\nResultado para o comando compile:\ntruffle(develop)&gt; compile\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Compiling ./contracts/Greeter_orig.sol\n&gt; Compiling openzeppelin-solidity/contracts/access/Ownable.sol\n&gt; Compiling openzeppelin-solidity/contracts/utils/Context.sol\n&gt; Compilation warnings encountered:\n\n    Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --&gt; project:/contracts/Greeter_orig.sol:8:5:\n  |\n8 |     constructor() public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n\n&gt; Artifacts written to /run/media/rogerio/BK-RAG-HP1TB/repositorios/Dropbox/dados/rogerio/UTFPR/docencia/disciplinas/2023/DLT-PPGCC17/2023-2/aulas/md/aula-16-pratica-implementacao-patentidea-app/src/projeto-helloworld-truffle/build/contracts\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\nResultado para o comando test:\ntruffle(develop)&gt; test\nUsing network 'develop'.\n\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Artifacts written to /tmp/test--91695-qVv3c3FelTwd\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\n\n\n  Contract: Greeter\n    \\checkmark has been deployed successfully\n    greet()\n      \\checkmark returns 'Hello, World!'\n    Contract: Greeter: update greeting\n      setGreeting(string)\n        \\checkmark sets greeting to passed in string (58ms)\n    Contract: owner()\n      \\checkmark returns the address of the owner\n      \\checkmark matches the address that originally deployed the contract\n    Contract: Greeter: update greeting\n      setGreeting(string)\n        when message is sent by the owner\n          \\checkmark sets greeting to passed in string (60ms)\n      when message is sent by another account\n        \\checkmark does not set the greeting (321ms)\n\n\n  7 passing (612ms)\nResultado para o comando migrate:\ntruffle(develop)&gt; migrate\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Artifacts written to /run/media/rogerio/BK-RAG-HP1TB/repositorios/Dropbox/dados/rogerio/UTFPR/docencia/disciplinas/2023/DLT-PPGCC17/2023-2/aulas/md/aula-16-pratica-implementacao-patentidea-app/src/projeto-helloworld-truffle/build/contracts\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\n\n\nStarting migrations...\n======================\n&gt; Network name:    'develop'\n&gt; Network id:      5777\n&gt; Block gas limit: 6721975 (0x6691b7)\n\n\n2_deploy_greeter.js\n===================\n\n   Replacing 'Greeter'\n   -------------------\n   &gt; transaction hash:    0xb05207d74bae76c3161d9980eff7aa28410658d34d8bc1efb288f9ec37cabb8f\n   &gt; Blocks: 0            Seconds: 0\n   &gt; contract address:    0xB4B2090600ac50540d72f923c1B1D82CFd03588E\n   &gt; block number:        3\n   &gt; block timestamp:     1700072774\n   &gt; account:             0xFb3E8f1cA22E8455755562f1079C624b1D275A40\n   &gt; balance:             99.994969481844831555\n   &gt; gas used:            750889 (0xb7529)\n   &gt; gas price:           3.192189957 gwei\n   &gt; value sent:          0 ETH\n   &gt; total cost:          0.002396980324621773 ETH\n\n   &gt; Saving artifacts\n   -------------------------------------\n   &gt; Total cost:     0.002396980324621773 ETH\n\nSummary\n=======\n&gt; Total deployments:   1\n&gt; Final cost:          0.002396980324621773 ETH\n\ntruffle(develop)&gt; \nNo console é possível interagirmos com o contrato implantado, verificando suas propriedades e instanciando-o e fazendo chamadas a seus métodos.\ntruffle(develop)&gt; Greeter.isDeployed()\ntrue\ntruffle(develop)&gt; Greeter.address\n'0xA29E4Ac8fF0eA3ae093D229F21317a9afacefae3'\n\ntruffle(develop)&gt; Greeter.deployed().then(function(instance){app = instance})\nundefined\ntruffle(develop)&gt; app.\napp.__proto__             app.hasOwnProperty        app.isPrototypeOf         app.propertyIsEnumerable\napp.toLocaleString        app.toString              app.valueOf\n\napp.abi                   app.address               app.allEvents             app.call\napp.constructor           app.contract              app.estimateGas           app.getPastEvents\napp.greet                 app.methods               app.owner                 app.send\napp.sendTransaction       app.setGreeting           app.transactionHash\n\ntruffle(develop)&gt; app.setGreeting(\"Olá\")\n{\n  tx: '0x3dca60061687b1c83b91a585f1bcaf774c5de598686dcecd2b450510cc0cf3cc',\n  receipt: {\n    transactionHash: '0x3dca60061687b1c83b91a585f1bcaf774c5de598686dcecd2b450510cc0cf3cc',\n    transactionIndex: 0,\n    blockNumber: 5,\n    blockHash: '0x0b0a0a08c735261a5bee202d2154b0fcf94b964807ca93ea6d8b6878e61f2954',\n    from: '0xfb3e8f1ca22e8455755562f1079c624b1d275a40',\n    to: '0xa29e4ac8ff0ea3ae093d229f21317a9afacefae3',\n    cumulativeGasUsed: 29786,\n    gasUsed: 29786,\n    contractAddress: null,\n    logs: [],\n    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n    status: true,\n    effectiveGasPrice: 3059154467,\n    type: '0x2',\n    rawLogs: []\n  },\n  logs: []\n}\ntruffle(develop)&gt; app.greet()\n'Olá'\ntruffle(develop)&gt;",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e _Frameworks_ Ethereum: Introdução aos Testes e _Deploy_ com `Truffle`</span>"
    ]
  },
  {
    "objectID": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#deploy-de-contratos-em-outras-redes",
    "href": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#deploy-de-contratos-em-outras-redes",
    "title": "10  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução aos Testes e Deploy com Truffle",
    "section": "10.8 Deploy de Contratos em outras Redes",
    "text": "10.8 Deploy de Contratos em outras Redes\nNesta prática iremos utilizar o truffle para fazermos o deploy (implantação) de contratos para as redes de teste que utilizamos até o momento.\nEstamos utilizando as redes simuladas do ganache, a ganache ou ganache-cli no console e a ganache-ui (AppImage), e a Rede Privada Local, a etherprivate.\nA etherprivate está executando o servidor RPC no endereço http://127.0.0.1:8559 com o id \\(786\\), a rede do ganache via console com os comandos ganache ou ganache-cli no http://127.0.0.1:8545 com id \\(2525\\) e a ganache-ui está executando no endereço http://127.0.0.1:7545 com id \\(5777\\).\nAs configurações das redes podem ser passadas para o arquivo truffle-config.js:\n networks: {\n    // Useful for testing. The `development` name is special - truffle uses it by default\n    // if it's defined here and no other network is specified at the command line.\n    // You should run a client (like ganache, geth, or parity) in a separate terminal\n    // tab if you use this network and you must also set the `host`, `port` and `network_id`\n    // options below to some value.\n    //\n    // development: {\n    //  host: \"127.0.0.1\",     // Localhost (default: none)\n    //  port: 8545,            // Standard Ethereum port (default: none)\n    //  network_id: \"*\",       // Any network (default: none)\n    // },\n        // Ganache AppImage (ganache-ui).\n    ganacheui: { \n      host: \"127.0.0.1\",     // Localhost (default: none)\n      port: 7545,            // Standard Ethereum port (default: none)\n      network_id: \"5777\",       // Any network (default: none)\n    },\n    // RAGEtherPrivate.\n    etherprivate: {\n      host: \"127.0.0.1\",     // Localhost (default: none)\n      port: 8559,            // Standard Ethereum port (default: none)\n      network_id: \"786\",       // Any network (default: none)\n    },\n    // ganache ou ganache-cli (console)\n    ganachecli: {\n      host: \"127.0.0.1\",\n      port: 8545,\n      network_id: \"2525\",\n    },    \n  }",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e _Frameworks_ Ethereum: Introdução aos Testes e _Deploy_ com `Truffle`</span>"
    ]
  },
  {
    "objectID": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#deploy-na-rede-do-ganache-ui",
    "href": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#deploy-na-rede-do-ganache-ui",
    "title": "10  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução aos Testes e Deploy com Truffle",
    "section": "10.9 Deploy na Rede do Ganache-UI",
    "text": "10.9 Deploy na Rede do Ganache-UI\nPara executarmos o teste semelhante ao que fizemos com o truffle utilizando uma instância própria do ganache, a execução padrão, vamos executar o teste utilizando uma das redes.\nPara listarmos as redes disponíveis podemos executar o comando truffle networks:\n[projeto-helloworld-truffle]$ truffle networks\n\nNetwork: etherprivate (id: 786)\n  No contracts deployed.\n\nNetwork: ganachecli (id: 2525)\n  No contracts deployed.\n\nNetwork: ganacheui (id: 5777)\n  No contracts deployed.\nVamos iniciar os testes com a rede criada pelo ganache-ui:\n[projeto-helloworld-truffle]$ truffle test --network ganacheui\nUsing network 'ganacheui'.\n\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Artifacts written to /tmp/test--66083-j6FX1wSHRuN8\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\nError:  *** Deployment Failed ***\n\n\"Greeter\" hit an invalid opcode while deploying. Try:\n   * Verifying that your constructor params satisfy all assert conditions.\n   * Verifying your constructor code doesn't access an array out of bounds.\n   * Adding reason strings to your assert statements.\n\n    at /home/rogerio/.nvm/versions/node/v18.16.0/lib/node_modules/truffle/build/webpack: /packages/deployer/src/deployment.js:330:1\nTruffle v5.11.5 (core: 5.11.5)\nNode v18.16.0\nDeu um erro de falha no deploy por invalid opcode. Aparecendo na interface do ganache que o contrato não foi implantado:\n\n\n\nContrato não implantado",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e _Frameworks_ Ethereum: Introdução aos Testes e _Deploy_ com `Truffle`</span>"
    ]
  },
  {
    "objectID": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#deploy-na-rede-privada-local",
    "href": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#deploy-na-rede-privada-local",
    "title": "10  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução aos Testes e Deploy com Truffle",
    "section": "10.10 Deploy na Rede Privada Local",
    "text": "10.10 Deploy na Rede Privada Local\nExecutando a Rede Privada Local (etherprivate) que criamos nas aulas anteriores com o geth e tentando fazer o teste assim como fizemos com a rede do ganache.\nComando para executar o clef:\n[.etherprivate]$ ~/go-ethereum/build/bin/clef --chainid 786 --keystore ~/.etherprivate/keystore --configdir ~/.etherprivate/clef --http\nComando para executar o geth:\n[.etherprivate]$ ~/go-ethereum/build/bin/geth --networkid 786 --datadir ~/.etherprivate/ --syncmode full --allow-insecure-unlock  --identity \"RAGEtherPrivate\" --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin,debug\" --keystore ~/.etherprivate/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.etherprivate/geth/jwtsecret --nodiscover --maxpeers 15 --miner.etherbase=0x2db017e44b03b37755a4b15e14cd799f83de4c13 --signer=/home/rogerio/.etherprivate/clef/clef.ipc\nExecutando o teste com a Rede Privada Local:\n[projeto-helloworld-truffle]$ truffle test --network etherprivate\nUsing network 'etherprivate'.\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Artifacts written to /tmp/test--67698-I4SVtxqgxyeZ\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\nError:  *** Deployment Failed ***\n\n\"Greeter\" hit an invalid opcode while deploying. Try:\n   * Verifying that your constructor params satisfy all assert conditions.\n   * Verifying your constructor code doesn't access an array out of bounds.\n   * Adding reason strings to your assert statements.\n\n    at /home/rogerio/.nvm/versions/node/v18.16.0/lib/node_modules/truffle/build/webpack: /packages/deployer/src/deployment.js:330:1\nTruffle v5.11.5 (core: 5.11.5)\nNode v18.16.0\nConseguimos mensagens de confirmação no console do clef:\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n-------- List Account request--------------\nA request has been made to list all accounts. \nYou can select which accounts the caller can see\n  [x] 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-22-11.261468773Z--  2db017e44b03b37755a4b15e14cd799f83de4c13\n  [x] 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-28-54.934614755Z--  7a7686ad451d2865a2246e239b674aefd4c6c27c\n  [x] 0x1BbA02873cC1C11f369a7B692F5F3dE8Ff7bbe80\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-09-05T20-26-34.695386684Z--  1bba02873cc1c11f369a7b692f5f3de8ff7bbe80\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n-------- List Account request--------------\nA request has been made to list all accounts. \nYou can select which accounts the caller can see\n  [x] 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-22-11.261468773Z--  2db017e44b03b37755a4b15e14cd799f83de4c13\n  [x] 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-28-54.934614755Z--  7a7686ad451d2865a2246e239b674aefd4c6c27c\n  [x] 0x1BbA02873cC1C11f369a7B692F5F3dE8Ff7bbe80\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-09-05T20-26-34.695386684Z--  1bba02873cc1c11f369a7b692f5f3de8ff7bbe80\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\nE mensagens na janela de execução do geth:\nWARN [10-05|21:31:02.588] Served eth_estimateGas                   conn=127.0.0.1:39264 reqid=12 duration=1.742993ms  err=\"invalid opcode: PUSH0\"\nO que explica a mensagem recebida de opcode inválido. Está ocorrendo algum problema de versão entre compilador e conjunto de instruções suportado pela EVM da versão do cliente geth.\nProcurando pelo erro “invalid opcode: PUSH0” encontramos uma possível solução no link.\n\n\nWith Solc version 0.8.20, the default EVM version is set to “Shanghai”. A new opcode, PUSHO, was added to the Ethereum Virtual Machine in the Shanghai upgrade. That means the PUSH0 opcode can now be part of the contract’s bytecode. If your private chain does not support it, it will error with the “Invalid opcode” error.\n\n\n\n\nThe solution is to manually set the EVM version to some previous version, for example, “Paris” (the version before, also known as The Merge), instead of “Shanghai”, which is the default now.\n\n\nDando a solução do que fazer em cada uma das ferramentas. A problema é o que suspeitávamos, erro de versões do código gerado pelo solc e o conjunto de instruções aceito pela EVM.\nComo no material cita que a instrução PUSH0 foi adicionada na versão Shanghai da EVM, vamos voltar ao Ganache e configura o hardfork para esta versão.\nA versão do Ganache que estávamos rodando é a v2.71 via AppImage\nVamos baixar o código da última release Versão 7.9.0\n\nInstalando diretamente com npm install ganache --global a versão instalada é a \\(7.9.1\\), mas só tem o ganache e o ganache-cli. O ganache-ui está na versão \\(2.7.1\\).",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e _Frameworks_ Ethereum: Introdução aos Testes e _Deploy_ com `Truffle`</span>"
    ]
  },
  {
    "objectID": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#deploy-na-rede-do-ganache-cli",
    "href": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#deploy-na-rede-do-ganache-cli",
    "title": "10  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução aos Testes e Deploy com Truffle",
    "section": "10.11 Deploy na Rede do Ganache-cli",
    "text": "10.11 Deploy na Rede do Ganache-cli\nIremos testar o deploy no ganache-cli.\n[.etherprivate]$ ganache-cli --chain.chainId 1337 --chain.networkId 2525\nganache v7.9.1 (@ganache/cli: 0.10.1, @ganache/core: 0.10.1)\nStarting RPC server\n\nAvailable Accounts\n==================\n(0) 0x6bc36F77B80a3225F43482f7e9A79B2aB904D20A (1000 ETH)\n(1) 0x63f31ad415907984768e0142349d4fa91f75DBFF (1000 ETH)\n(2) 0x5112f12839b3dbaDbfA269c00D47B111399823C3 (1000 ETH)\n(3) 0xD34E64e1250169421bc8f90Aa7A9878985A21cB2 (1000 ETH)\n(4) 0xf670dc566884317174053fc0962dcfab93caa859 (1000 ETH)\n(5) 0xB0eB5b5ff143DDa91C1Fc4E522704e78513490be (1000 ETH)\n(6) 0xfC6BF2645BCB7E21033968b6aB78E22c1e67E4Bd (1000 ETH)\n(7) 0xA06fdAf174893dc46641749D991bFB4b71C520b3 (1000 ETH)\n(8) 0xb88cE5D42AD2685a705eeBda1f1D85750074121e (1000 ETH)\n(9) 0x0d4b20f9d5aA4681F281A318BE33aab77a69B425 (1000 ETH)\n\nPrivate Keys\n==================\n(0) 0x43dcd3a5c8b1fa55a5a76a28132b61673d7dbf2bcb45195cc5b46913a6b2596b\n(1) 0x06b127b2b54722efa1d183f1aa01c676b9cc166ea38052a6cf17bd9d7ee39cf4\n(2) 0x757a60ff9c9dcae6061343a0bf0f72d918e9f890292cc47a973e2bfafcae34aa\n(3) 0x1e07f70327b14d261f804759bc7f483db764029e1331c0980ba78be50362794a\n(4) 0xcbf4f614fd709800293b0f836d509cb2b719b8613658f295d6b7cdb1bda14995\n(5) 0xc3c0018cb79be2f0cd523cdc419d3b1f62369e418fea811b7d388355b0bccbdc\n(6) 0x0491bfb366bddf689d3d876a5e4391d9e94b7d1176134711d3f6ed2a315c9e00\n(7) 0xc8c10efd89ec8d03e5c93ce5650dc69295c398337b1ea7b42fd3b46f01bd87cb\n(8) 0xce68c07a81abaf5af757f30b45ff6acb506542ee089b42d6b485b0cc6247c0a0\n(9) 0xff7a6a6f23271d47210aadcce3d077c6b64561f814373db03921f7727b02940e\n\nHD Wallet\n==================\nMnemonic:      crucial dwarf dilemma fit steak edge comfort submit post try across side\nBase HD Path:  m/44'/60'/0'/0/{account_index}\n\nDefault Gas Price\n==================\n2000000000\n\nBlockGas Limit\n==================\n30000000\n\nCall Gas Limit\n==================\n50000000\n\nChain\n==================\nHardfork: shanghai\nId:       1337\n\nRPC Listening on 127.0.0.1:8545\nExecutando o teste com o ganache-cli:\n[projeto-helloworld-truffle]$ truffle test --network ganachecli\nUsing network 'ganachecli'.\n\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Artifacts written to /tmp/test--73819-Ro7Bq8RLYVl8\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\n\n\n  Contract: Greeter\n    [ok] has been deployed successfully\n    greet()\n      [ok] returns 'Hello, World!'\n    Contract: Greeter: update greeting\n      setGreeting(string)\n        [ok] sets greeting to passed in string (92ms)\n    Contract: owner()\n      [ok] returns the address of the owner\n      [ok] matches the address that originally deployed the contract\n    Contract: Greeter: update greeting\n      setGreeting(string)\n        when message is sent by the owner\n          [ok] sets greeting to passed in string (81ms)\n      when message is sent by another account\n        [ok] does not set the greeting (233ms)\n\n\n  7 passing (663ms)\nFazendo o teste as mensagens aparecem no console onde o ganache-cli foi iniciado:\neth_blockNumber\nnet_version\neth_accounts\neth_blockNumber\nnet_version\neth_accounts\neth_getBlockByNumber\neth_accounts\nnet_version\neth_getBlockByNumber\neth_getBlockByNumber\nnet_version\neth_getBlockByNumber\neth_estimateGas\nnet_version\neth_blockNumber\neth_getBlockByNumber\neth_estimateGas\neth_getBlockByNumber\neth_gasPrice\neth_sendTransaction\n\n  Transaction: 0xfcd75097bd69d1b540544e76e784b09e39f53d3b6725e1e4b3489609070cf967\n  Contract created: 0x2b47db2070dc85d37b2a844b27b744408b3e50d9\n  Gas usage: 736046\n  Block number: 1\n  Block time: Thu Oct 05 2023 22:55:03 GMT-0300 (Horário Padrão de Brasília)\n\neth_getTransactionReceipt\neth_getCode\nevm_snapshot\nSaved snapshot #1\nnet_version\neth_blockNumber\neth_getBlockByNumber\neth_blockNumber\neth_getBlockByNumber\neth_call\nevm_revert\nReverting to snapshot #1\nevm_snapshot\nSaved snapshot #1\nnet_version\neth_blockNumber\neth_blockNumber\neth_getBlockByNumber\neth_getBlockByNumber\neth_estimateGas\neth_getBlockByNumber\neth_gasPrice\neth_sendTransaction\n\n  Transaction: 0xb15f8de189ff3c6b0d54ce572bf7d174da34d4e7a3e204cbbae4792e3a8e056b\n  Gas usage: 29923\n  Block number: 2\n  Block time: Thu Oct 05 2023 22:55:03 GMT-0300 (Horário Padrão de Brasília)\n\neth_getTransactionReceipt\neth_call\nevm_revert\nReverting to snapshot #1\nevm_snapshot\nSaved snapshot #1\nnet_version\neth_blockNumber\neth_blockNumber\neth_getBlockByNumber\neth_call\neth_blockNumber\neth_blockNumber\neth_getBlockByNumber\neth_call\nevm_revert\nReverting to snapshot #1\nevm_snapshot\nSaved snapshot #1\nnet_version\neth_blockNumber\neth_blockNumber\neth_getBlockByNumber\neth_getBlockByNumber\neth_estimateGas\neth_getBlockByNumber\neth_gasPrice\neth_sendTransaction\n\n  Transaction: 0x7afb5696774c751f07940a294aa889340d80cd0e96affdbd69533f6ac3cb2342\n  Gas usage: 30163\n  Block number: 2\n  Block time: Thu Oct 05 2023 22:55:03 GMT-0300 (Horário Padrão de Brasília)\n\neth_getTransactionReceipt\neth_call\neth_blockNumber\neth_blockNumber\neth_getBlockByNumber\neth_call\neth_getBlockByNumber\neth_estimateGas\nExecutando o deploy para o ganache-cli:\n[projeto-helloworld-truffle]$ truffle migrate --network ganachecli\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Artifacts written to /run/media/rogerio/BK-RAG-HP1TB/repositorios/Dropbox/dados/rogerio/UTFPR/docencia/ disciplinas/2023/DLT-PPGCC17/2023-2/aulas/md/aula-12-pratica-ethereum-truffle/src/ projeto-helloworld-truffle/build/contracts\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\n\n\nStarting migrations...\n======================\n&gt; Network name:    'ganachecli'\n&gt; Network id:      2525\n&gt; Block gas limit: 30000000 (0x1c9c380)\n\n\n2_deploy_greeter.js\n===================\n\n   Deploying 'Greeter'\n   -------------------\n   &gt; transaction hash:    0x11f59962febf44604cbf85692bf7fbef8af82c10c60b41a33f224a1fc8f76b43\n   &gt; Blocks: 0            Seconds: 0\n   &gt; contract address:    0xd6a8e223C633cedD6770843824776ceee71017AF\n   &gt; block number:        3\n   &gt; block timestamp:     1696557622\n   &gt; account:             0x6bc36F77B80a3225F43482f7e9A79B2aB904D20A\n   &gt; balance:             999.995080374293542803\n   &gt; gas used:            736046 (0xb3b2e)\n   &gt; gas price:           3.174811798 gwei\n   &gt; value sent:          0 ETH\n   &gt; total cost:          0.002336807524670708 ETH\n\n   &gt; Saving artifacts\n   -------------------------------------\n   &gt; Total cost:     0.002336807524670708 ETH\n\nSummary\n=======\n&gt; Total deployments:   1\n&gt; Final cost:          0.002336807524670708 ETH\nNo console do ganache-cli:\neth_blockNumber\nnet_version\neth_accounts\neth_getBlockByNumber\neth_accounts\nnet_version\neth_getBlockByNumber\neth_getBlockByNumber\nnet_version\neth_getBlockByNumber\neth_estimateGas\nnet_version\neth_blockNumber\neth_getBlockByNumber\neth_estimateGas\neth_getBlockByNumber\neth_gasPrice\neth_sendTransaction\n\n  Transaction: 0x11f59962febf44604cbf85692bf7fbef8af82c10c60b41a33f224a1fc8f76b43\n  Contract created: 0xd6a8e223c633cedd6770843824776ceee71017af\n  Gas usage: 736046\n  Block number: 3\n  Block time: Thu Oct 05 2023 23:00:22 GMT-0300 (Horário Padrão de Brasília)\n\neth_getTransactionReceipt\neth_getCode\neth_getTransactionByHash\neth_getBlockByNumber\neth_getBalance",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e _Frameworks_ Ethereum: Introdução aos Testes e _Deploy_ com `Truffle`</span>"
    ]
  },
  {
    "objectID": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#interagindo-com-o-contrato-via-truffle-console",
    "href": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#interagindo-com-o-contrato-via-truffle-console",
    "title": "10  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução aos Testes e Deploy com Truffle",
    "section": "10.12 Interagindo com o contrato via truffle console",
    "text": "10.12 Interagindo com o contrato via truffle console\nInteragindo com o contrato via truffle console, no link tem outros comandos:\n[projeto-helloworld-truffle]$ truffle console --network ganachecli\ntruffle(ganachecli)&gt; let accounts = await web3.eth.getAccounts()\nundefined\ntruffle(ganachecli)&gt; accounts\n[\n  '0x6bc36F77B80a3225F43482f7e9A79B2aB904D20A',\n  '0x63f31ad415907984768e0142349d4fa91f75DBFF',\n  '0x5112f12839b3dbaDbfA269c00D47B111399823C3',\n  '0xD34E64e1250169421bc8f90Aa7A9878985A21cB2',\n  '0xf670dc566884317174053fc0962dcfab93caa859',\n  '0xB0eB5b5ff143DDa91C1Fc4E522704e78513490be',\n  '0xfC6BF2645BCB7E21033968b6aB78E22c1e67E4Bd',\n  '0xA06fdAf174893dc46641749D991bFB4b71C520b3',\n  '0xb88cE5D42AD2685a705eeBda1f1D85750074121e',\n  '0x0d4b20f9d5aA4681F281A318BE33aab77a69B425'\n]\ntruffle(ganachecli)&gt; \ntruffle(ganachecli)&gt; let newInstance = await Greeter.new()\nundefined\ntruffle(ganachecli)&gt; newInstance.address\n'0x1B5834c58E81bb9c8E38607469f7753b7ED2642B'\ntruffle(ganachecli)&gt; newInstance.greet.call()\n'Hello, World!'\ntruffle(ganachecli)&gt; \nA versão ganache e ganache-cli possibilitam vermos os resultados no console, mas vamos tentar gerar um App.image da versão atual.\n#!/bin/bash\n\n# Clone Ganache repository\ngit clone https://github.com/trufflesuite/ganache.git\ncd ganache\n\n# Install dependencies and build Ganache\nnpm install\nnpm run build\n\n# Download appimagetool\nwget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86 _64.AppImage\nchmod +x appimagetool-x86_64.AppImage\nsudo mv appimagetool-x86_64.AppImage /usr/local/bin/appimagetool\n\n# Create an AppImage specification file\necho \"app: Ganache\" &gt; ganache.appimage.yml\necho \"arch: x86_64\" &gt;&gt; ganache.appimage.yml\n\n# Package Ganache into an AppImage\nappimagetool ganache.appimage.yml out/\n\n# Make the AppImage executable\nchmod +x out/Ganache-*.AppImage\n\n# Run Ganache AppImage\n./out/Ganache-*.AppImage\nNo Manjaro não funcionou.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e _Frameworks_ Ethereum: Introdução aos Testes e _Deploy_ com `Truffle`</span>"
    ]
  },
  {
    "objectID": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#alterando-a-versão-da-evm-alvo",
    "href": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#alterando-a-versão-da-evm-alvo",
    "title": "10  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução aos Testes e Deploy com Truffle",
    "section": "10.13 Alterando a versão da EVM alvo",
    "text": "10.13 Alterando a versão da EVM alvo\nUma possibilidade é modificarmos as configurações para gerar para uma das redes suportadas no ganache-ui. A configuração que deixamos foi com hardfork Merge. Vamos alterar na guia chain para a London e alterar o compilador para gerar código para essa versão.\n\n\n\nAlterando o hardfork para London\n\n\nAlteramos no arquivo truffle-config.js as configurações do solc:\n// Configure your compilers\n  compilers: {\n    solc: {\n      version: \"0.8.21\",      // Fetch exact version from sol&gt;\n      // evmVersion: \"shanghai\"\n      evmVersion: \"london\"\n    }\n  },\nExecutando o teste para o ganache-ui:\n[projeto-helloworld-truffle]$ truffle test --network ganacheui\nUsing network 'ganacheui'.\n\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter_orig.sol\n&gt; Compilation warnings encountered:\n\n    Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  -&gt; project:/contracts/Greeter_orig.sol:8:5:\n  |\n  |     constructor() public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n\n&gt; Artifacts written to /tmp/test--12014-cC50k96x4sr6\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\n\n\n  Contract: Greeter\n    [ok] has been deployed successfully\n    greet()\n      [ok] returns 'Hello, World!'\n    Contract: Greeter: update greeting\n      setGreeting(string)\n        [ok] sets greeting to passed in string (55ms)\n    Contract: owner()\n      [ok] returns the address of the owner\n      [ok] matches the address that originally deployed the contract\n    Contract: Greeter: update greeting\n      setGreeting(string)\n        when message is sent by the owner\n          [ok] sets greeting to passed in string (48ms)\n      when message is sent by another account\n        [ok] does not set the greeting (186ms)\n\n\n  7 passing (474ms)\nFazendo o deploy no ganache-ui:\n[projeto-helloworld-truffle]$ truffle migrate --network ganacheui\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter.sol\n&gt; Artifacts written to /run/media/rogerio/BK-RAG-HP1TB/repositorios/Dropbox/dados/rogerio/UTFPR/docencia/ disciplinas/2023/DLT-PPGCC17/2023-2/aulas/md/aula-12-pratica-ethereum-truffle/src/ projeto-helloworld-truffle/build/contracts\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\n\n\nStarting migrations...\n======================\n&gt; Network name:    'ganacheui'\n&gt; Network id:      5777\n&gt; Block gas limit: 6721975 (0x6691b7)\n\n\n2_deploy_greeter.js\n===================\n\n   Replacing 'Greeter'\n   -------------------\n   &gt; transaction hash:    0xbb889e944c83deb0773923ec3292fedbb4f8efa0535a3d0f526730515918bf01\n   &gt; Blocks: 0            Seconds: 0\n   &gt; contract address:    0x49afd43086A509976C1E6FC91Ff117dAF5Ed798c\n   &gt; block number:        4\n   &gt; block timestamp:     1696942463\n   &gt; account:             0xc01046fecE893706d7d70b4493DFCe8b4aC04BB2\n   &gt; balance:             9999999999.994098588342868559\n   &gt; gas used:            750631 (0xb7427)\n   &gt; gas price:           3.113581798 gwei\n   &gt; value sent:          0 ETH\n   &gt; total cost:          0.002337151018614538 ETH\n\n   &gt; Saving artifacts\n   -------------------------------------\n   &gt; Total cost:     0.002337151018614538 ETH\n\nSummary\n=======\n&gt; Total deployments:   1\n&gt; Final cost:          0.002337151018614538 ETH\nUma transação de Contract Creation será criada na lista de transações do ganache-ui.\n\n\n\n\nContract Creation\n\n\nO contrato implantado aparece na guia Contratos.\n\n\n\nContrato Implantado\n\n\n\n\n\nBloco com o contrato\n\n\n\n\n\nDetalhe do bloco",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e _Frameworks_ Ethereum: Introdução aos Testes e _Deploy_ com `Truffle`</span>"
    ]
  },
  {
    "objectID": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#continuando-o-teste-na-rede-privada-local",
    "href": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#continuando-o-teste-na-rede-privada-local",
    "title": "10  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução aos Testes e Deploy com Truffle",
    "section": "10.14 Continuando o Teste na Rede Privada Local",
    "text": "10.14 Continuando o Teste na Rede Privada Local\nVoltando ao teste para o etherprivate:\n[projeto-helloworld-truffle]$ truffle test --network etherprivate\nUsing network 'etherprivate'.\n\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter_orig.sol\n&gt; Compilation warnings encountered:\n\n    Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n -&gt; project:/contracts/Greeter_orig.sol:8:5:\n  |\n  |     constructor() public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n\n&gt; Artifacts written to /tmp/test--14663-auWPu58P4uaa\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\n\n\n  Contract: Greeter\n    [ok] has been deployed successfully\n    greet()\n      [ok] returns 'Hello, World!' (43ms)\n    Contract: Greeter: update greeting\n      setGreeting(string)\n        [ok] sets greeting to passed in string (14285ms)\n    Contract: owner()\n      [ok] returns the address of the owner (39ms)\n      [ok] matches the address that originally deployed the contract\n    Contract: Greeter: update greeting\n      setGreeting(string)\n        when message is sent by the owner\n          [ok] sets greeting to passed in string (7717ms)\n      when message is sent by another account\n        [ok] does not set the greeting (350ms)\n\n\n  7 passing (1m)\nConsole do clef:\n[projeto-helloworld-truffle]$ ~/go-ethereum/build/bin/clef --chainid 786 --keystore ~/.etherprivate/keystore --configdir ~/.etherprivate/clef --http\n\nWARNING!\n\nClef is an account management tool. It may, like any software, contain bugs.\n\nPlease take care to\n- backup your keystore files,\n- verify that the keystore(s) can be opened with your password.\n\nClef is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\nwithout even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\nPURPOSE. See the GNU General Public License for more details.\n\nEnter 'ok' to proceed:\n&gt; ok\n\nINFO [10-10|10:07:59.037] Using CLI as UI-channel \nINFO [10-10|10:07:59.385] Loaded 4byte database                    embeds=268,621 locals=0 local=./4byte-custom.json\nWARN [10-10|10:07:59.386] Failed to open master, rules disabled    err=\"failed stat on /home/rogerio/.etherprivate/clef/masterseed.json: stat /home/rogerio/.etherprivate/clef/masterseed.json: no such file or directory\"\nINFO [10-10|10:07:59.386] Starting signer                          chainid=786 keystore=/home/rogerio/.etherprivate/keystore light-kdf=false advanced=false\nINFO [10-10|10:07:59.388] Smartcard socket file missing, disabling err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [10-10|10:07:59.389] Audit logs configured                    file=audit.log\nINFO [10-10|10:07:59.391] HTTP endpoint opened                     url=http://127.0.0.1:8550/\nINFO [10-10|10:07:59.391] IPC endpoint opened                      url=/home/rogerio/.etherprivate/clef/clef.ipc\n\n------- Signer info -------\n* extapi_version : 6.1.0\n* extapi_http : http://127.0.0.1:8550/\n* extapi_ipc : /home/rogerio/.etherprivate/clef/clef.ipc\n* intapi_version : 7.0.1\n\n------- Available accounts -------\n0. 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 at keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-22-11.261468773Z--  2db017e44b03b37755a4b15e14cd799f83de4c13\n1. 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c at keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-28-54.934614755Z--  7a7686ad451d2865a2246e239b674aefd4c6c27c\n2. 0x1BbA02873cC1C11f369a7B692F5F3dE8Ff7bbe80 at keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-09-05T20-26-34.695386684Z--  1bba02873cc1c11f369a7b692f5f3de8ff7bbe80\n-------- List Account request--------------\nA request has been made to list all accounts. \nYou can select which accounts the caller can see\n  [x] 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-22-11.261468773Z-- 2db017e44b03b37755a4b15e14cd799f83de4c13\n  [x] 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-28-54.934614755Z-- 7a7686ad451d2865a2246e239b674aefd4c6c27c\n  [x] 0x1BbA02873cC1C11f369a7B692F5F3dE8Ff7bbe80\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-09-05T20-26-34.695386684Z-- 1bba02873cc1c11f369a7b692f5f3de8ff7bbe80\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n-------- List Account request--------------\nA request has been made to list all accounts. \nYou can select which accounts the caller can see\n  [x] 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-22-11.261468773Z-- 2db017e44b03b37755a4b15e14cd799f83de4c13\n  [x] 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-28-54.934614755Z-- 7a7686ad451d2865a2246e239b674aefd4c6c27c\n  [x] 0x1BbA02873cC1C11f369a7B692F5F3dE8Ff7bbe80\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-09-05T20-26-34.695386684Z-- 1bba02873cc1c11f369a7b692f5f3de8ff7bbe80\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n-------- List Account request--------------\nA request has been made to list all accounts. \nYou can select which accounts the caller can see\n  [x] 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-22-11.261468773Z-- 2db017e44b03b37755a4b15e14cd799f83de4c13\n  [x] 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-28-54.934614755Z-- 7a7686ad451d2865a2246e239b674aefd4c6c27c\n  [x] 0x1BbA02873cC1C11f369a7B692F5F3dE8Ff7bbe80\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-09-05T20-26-34.695386684Z-- 1bba02873cc1c11f369a7b692f5f3de8ff7bbe80\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n--------- Transaction request-------------\nto:    &lt;contact creation&gt;\nfrom:               0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 [chksum ok]\nvalue:              0 wei\ngas:                0xa1325 (660261)\ngasprice: 1000000000 wei\nnonce:    0x11 (17)\nchainid:  0x312\ndata:     0x60806040526040518060400160405280600d81526020017f48656c6c6f2c20576f726c6421000000000\n00000000000000000000000000000815250600090816200004a91906200031a565b5034801562000058576000\n80fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373fff\nfffffffffffffffffffffffffffffffffffff16021790555062000401565b600081519050919050565b7f4e48\n7b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7\nf4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000\nfd5b600060028204905060018216806200012257607f821691505b60208210810362000138576200013762000\n0da565b5b50919050565b60008190508160005260206000209050919050565b60006020601f83010490509190\n50565b600082821b905092915050565b600060088302620001a27ffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffffffffffff8262000163565b620001ae868362000163565b9550801984169350808616\n8417925050509392505050565b6000819050919050565b6000819050919050565b6000620001fb620001f5620\n001ef84620001c6565b620001d0565b620001c6565b9050919050565b6000819050919050565b620002178362\n0001da565b6200022f620002268262000202565b84845462000170565b825550505050565b600090565b62000\n24662000237565b620002538184846200020c565b505050565b5b818110156200027b576200026f6000826200\n023c565b60018101905062000259565b5050565b601f821115620002ca5762000294816200013e565b6200029\nf8462000153565b81016020851015620002af578190505b620002c7620002be8562000153565b830182620002\n58565b50505b505050565b600082821c905092915050565b6000620002ef60001984600802620002cf565b198\n0831691505092915050565b60006200030a8383620002dc565b9150826002028217905092915050565b620003\n2582620000a0565b67ffffffffffffffff811115620003415762000340620000ab565b5b6200034d825462000\n109565b6200035a8282856200027f565b600060209050601f8311600181146200039257600084156200037d57\n8287015190505b620003898582620002fc565b865550620003f9565b601f198416620003a2866200013e565b6\n0005b82811015620003cc57848901518255600182019150602085019450602081019050620003a5565b868310\n15620003ec5784890151620003e8601f891682620002dc565b8355505b6001600288020188555050505b50505\n0505050565b61078c80620004116000396000f3fe608060405234801561001057600080fd5b50600436106100\n415760003560e01c80638da5cb5b14610046578063a413686214610064578063cfae321714610080575b60008\n0fd5b61004e61009e565b60405161005b9190610241565b60405180910390f35b61007e600480360381019061\n007991906102cb565b6100c8565b005b61008861016e565b60405161009591906103a8565b60405180910390f\n35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60\n0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673fffffffffffffffffff\nfffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610158576040517f08\nc379a000000000000000000000000000000000000000000000000000000000815260040161014f90610416565\nb60405180910390fd5b818160009182610169929190610686565b505050565b60606000805461017d9061049f\n565b80601f01602080910402602001604051908101604052809291908181526020018280546101a99061049f5\n65b80156101f65780601f106101cb576101008083540402835291602001916101f6565b820191906000526020\n600020905b8154815290600101906020018083116101d957829003601f168201915b5050505050905090565b6\n00073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061022b82610200565b9050\n919050565b61023b81610220565b82525050565b60006020820190506102566000830184610232565b9291505\n0565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261028b5761028a61\n0266565b5b8235905067ffffffffffffffff8111156102a8576102a761026b565b5b602083019150836001820\n2830111156102c4576102c3610270565b5b9250929050565b600080602083850312156102e2576102e161025c\n565b5b600083013567ffffffffffffffff811115610300576102ff610261565b5b61030c85828601610275565\nb92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83\n811015610352578082015181840152602081019050610337565b60008484015250505050565b6000601f19601\nf8301169050919050565b600061037a82610318565b6103848185610323565b93506103948185602086016103\n34565b61039d8161035e565b840191505092915050565b600060208201905081810360008301526103c281846\n1036f565b905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65\n72600082015250565b6000610400602083610323565b915061040b826103ca565b602082019050919050565b6\n000602082019050818103600083015261042f816103f3565b9050919050565b600082905092915050565b7f4e\n487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5\nb7f4e487b71000000000000000000000000000000000000000000000000000000006000526022600452602460\n00fd5b600060028204905060018216806104b757607f821691505b6020821081036104ca576104c9610470565\nb5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b\n600082821b905092915050565b6000600883026105327ffffffffffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffff826104f5565b61053c86836104f5565b955080198416935080861684179250505093\n92505050565b6000819050919050565b6000819050919050565b600061058361057e61057984610554565b610\n55e565b610554565b9050919050565b6000819050919050565b61059d83610568565b6105b16105a98261058a\n565b848454610502565b825550505050565b600090565b6105c66105b9565b6105d1818484610594565b50505\n0565b5b818110156105f5576105ea6000826105be565b6001810190506105d7565b5050565b601f8211156106\n3a5761060b816104d0565b610614846104e5565b81016020851015610623578190505b61063761062f856104e\n5565b8301826105d6565b50505b505050565b600082821c905092915050565b600061065d6000198460080261\n063f565b1980831691505092915050565b6000610676838361064c565b9150826002028217905092915050565\nb6106908383610436565b67ffffffffffffffff8111156106a9576106a8610441565b5b6106b3825461049f56\n5b6106be8282856105f9565b6000601f8311600181146106ed57600084156106db578287013590505b6106e58\n58261066a565b86555061074d565b601f1984166106fb866104d0565b60005b82811015610723578489013582\n556001820191506020850194506020810190506106fe565b86831015610740578489013561073c601f8916826\n1064c565b8355505b6001600288020188555050505b5050505050505056fea264697066735822122060c20316\ne7c477c2ca67fd1e46e616c49b5bad17c117d45957f64ac13c222fc164736f6c63430008150033\n\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\n-------------------------------------------\nApprove? [y/N]:\n&gt; y\n\\#\\# Account password\n\nPlease enter the password for account 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n&gt; \n-----------------------\nTransaction signed:\n {\n    \"type\": \"0x0\",\n    \"nonce\": \"0x11\",\n    \"gasPrice\": \"0x3b9aca00\",\n    \"maxPriorityFeePerGas\": null,\n    \"maxFeePerGas\": null,\n    \"gas\": \"0xa1325\",\n    \"value\": \"0x0\",\n    \"input\": \"0x60806040526040518060400160405280600d81526020017f48656c6c6f2c20576f726c6421000000000\n00000000000000000000000000000815250600090816200004a91906200031a565b5034801562000058576000\n80fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373fff\nfffffffffffffffffffffffffffffffffffff16021790555062000401565b600081519050919050565b7f4e48\n7b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7\nf4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000\nfd5b600060028204905060018216806200012257607f821691505b60208210810362000138576200013762000\n0da565b5b50919050565b60008190508160005260206000209050919050565b60006020601f83010490509190\n50565b600082821b905092915050565b600060088302620001a27ffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffffffffffff8262000163565b620001ae868362000163565b9550801984169350808616\n8417925050509392505050565b6000819050919050565b6000819050919050565b6000620001fb620001f5620\n001ef84620001c6565b620001d0565b620001c6565b9050919050565b6000819050919050565b620002178362\n0001da565b6200022f620002268262000202565b84845462000170565b825550505050565b600090565b62000\n24662000237565b620002538184846200020c565b505050565b5b818110156200027b576200026f6000826200\n023c565b60018101905062000259565b5050565b601f821115620002ca5762000294816200013e565b6200029\nf8462000153565b81016020851015620002af578190505b620002c7620002be8562000153565b830182620002\n58565b50505b505050565b600082821c905092915050565b6000620002ef60001984600802620002cf565b198\n0831691505092915050565b60006200030a8383620002dc565b9150826002028217905092915050565b620003\n2582620000a0565b67ffffffffffffffff811115620003415762000340620000ab565b5b6200034d825462000\n109565b6200035a8282856200027f565b600060209050601f8311600181146200039257600084156200037d57\n8287015190505b620003898582620002fc565b865550620003f9565b601f198416620003a2866200013e565b6\n0005b82811015620003cc57848901518255600182019150602085019450602081019050620003a5565b868310\n15620003ec5784890151620003e8601f891682620002dc565b8355505b6001600288020188555050505b50505\n0505050565b61078c80620004116000396000f3fe608060405234801561001057600080fd5b50600436106100\n415760003560e01c80638da5cb5b14610046578063a413686214610064578063cfae321714610080575b60008\n0fd5b61004e61009e565b60405161005b9190610241565b60405180910390f35b61007e600480360381019061\n007991906102cb565b6100c8565b005b61008861016e565b60405161009591906103a8565b60405180910390f\n35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60\n0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673fffffffffffffffffff\nfffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610158576040517f08\nc379a000000000000000000000000000000000000000000000000000000000815260040161014f90610416565\nb60405180910390fd5b818160009182610169929190610686565b505050565b60606000805461017d9061049f\n565b80601f01602080910402602001604051908101604052809291908181526020018280546101a99061049f5\n65b80156101f65780601f106101cb576101008083540402835291602001916101f6565b820191906000526020\n600020905b8154815290600101906020018083116101d957829003601f168201915b5050505050905090565b6\n00073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061022b82610200565b9050\n919050565b61023b81610220565b82525050565b60006020820190506102566000830184610232565b9291505\n0565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261028b5761028a61\n0266565b5b8235905067ffffffffffffffff8111156102a8576102a761026b565b5b602083019150836001820\n2830111156102c4576102c3610270565b5b9250929050565b600080602083850312156102e2576102e161025c\n565b5b600083013567ffffffffffffffff811115610300576102ff610261565b5b61030c85828601610275565\nb92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83\n811015610352578082015181840152602081019050610337565b60008484015250505050565b6000601f19601\nf8301169050919050565b600061037a82610318565b6103848185610323565b93506103948185602086016103\n34565b61039d8161035e565b840191505092915050565b600060208201905081810360008301526103c281846\n1036f565b905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65\n72600082015250565b6000610400602083610323565b915061040b826103ca565b602082019050919050565b6\n000602082019050818103600083015261042f816103f3565b9050919050565b600082905092915050565b7f4e\n487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5\nb7f4e487b71000000000000000000000000000000000000000000000000000000006000526022600452602460\n00fd5b600060028204905060018216806104b757607f821691505b6020821081036104ca576104c9610470565\nb5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b\n600082821b905092915050565b6000600883026105327ffffffffffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffff826104f5565b61053c86836104f5565b955080198416935080861684179250505093\n92505050565b6000819050919050565b6000819050919050565b600061058361057e61057984610554565b610\n55e565b610554565b9050919050565b6000819050919050565b61059d83610568565b6105b16105a98261058a\n565b848454610502565b825550505050565b600090565b6105c66105b9565b6105d1818484610594565b50505\n0565b5b818110156105f5576105ea6000826105be565b6001810190506105d7565b5050565b601f8211156106\n3a5761060b816104d0565b610614846104e5565b81016020851015610623578190505b61063761062f856104e\n5565b8301826105d6565b50505b505050565b600082821c905092915050565b600061065d6000198460080261\n063f565b1980831691505092915050565b6000610676838361064c565b9150826002028217905092915050565\nb6106908383610436565b67ffffffffffffffff8111156106a9576106a8610441565b5b6106b3825461049f56\n5b6106be8282856105f9565b6000601f8311600181146106ed57600084156106db578287013590505b6106e58\n58261066a565b86555061074d565b601f1984166106fb866104d0565b60005b82811015610723578489013582\n556001820191506020850194506020810190506106fe565b86831015610740578489013561073c601f8916826\n1064c565b8355505b6001600288020188555050505b5050505050505056fea264697066735822122060c20316\ne7c477c2ca67fd1e46e616c49b5bad17c117d45957f64ac13c222fc164736f6c63430008150033\",\n    \"v\": \"0x648\",\n    \"r\": \"0x1d8b46e2ca3d112ccc27f26de2b1747f90e3c30b58be72e2e14348bfa6881932\",\n    \"s\": \"0x1efeafaf810450ccd03fed68f4d1da2caca6a4e9d3b8d06cf678f8c7ffd38c9d\",\n    \"to\": null,\n    \"hash\": \"0xe15b0e773f71256345ef5089bd6ba5c190386d7162dcebcf4d25dcc3ab37ec63\"\n  }\n\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n--------- Transaction request-------------\nto:    &lt;contact creation&gt;\nfrom:               0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 [chksum ok]\nvalue:              0 wei\ngas:                0xa1325 (660261)\ngasprice: 1000000000 wei\nnonce:    0x16 (22)\nchainid:  0x312\ndata:     0x60806040526040518060400160405280600d81526020017f48656c6c6f2c20576f726c6421000000000\n00000000000000000000000000000815250600090816200004a91906200031a565b5034801562000058576000\n80fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373fff\nfffffffffffffffffffffffffffffffffffff16021790555062000401565b600081519050919050565b7f4e48\n7b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7\nf4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000\nfd5b600060028204905060018216806200012257607f821691505b60208210810362000138576200013762000\n0da565b5b50919050565b60008190508160005260206000209050919050565b60006020601f83010490509190\n50565b600082821b905092915050565b600060088302620001a27ffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffffffffffff8262000163565b620001ae868362000163565b9550801984169350808616\n8417925050509392505050565b6000819050919050565b6000819050919050565b6000620001fb620001f5620\n001ef84620001c6565b620001d0565b620001c6565b9050919050565b6000819050919050565b620002178362\n0001da565b6200022f620002268262000202565b84845462000170565b825550505050565b600090565b62000\n24662000237565b620002538184846200020c565b505050565b5b818110156200027b576200026f6000826200\n023c565b60018101905062000259565b5050565b601f821115620002ca5762000294816200013e565b6200029\nf8462000153565b81016020851015620002af578190505b620002c7620002be8562000153565b830182620002\n58565b50505b505050565b600082821c905092915050565b6000620002ef60001984600802620002cf565b198\n0831691505092915050565b60006200030a8383620002dc565b9150826002028217905092915050565b620003\n2582620000a0565b67ffffffffffffffff811115620003415762000340620000ab565b5b6200034d825462000\n109565b6200035a8282856200027f565b600060209050601f8311600181146200039257600084156200037d57\n8287015190505b620003898582620002fc565b865550620003f9565b601f198416620003a2866200013e565b6\n0005b82811015620003cc57848901518255600182019150602085019450602081019050620003a5565b868310\n15620003ec5784890151620003e8601f891682620002dc565b8355505b6001600288020188555050505b50505\n0505050565b61078c80620004116000396000f3fe608060405234801561001057600080fd5b50600436106100\n415760003560e01c80638da5cb5b14610046578063a413686214610064578063cfae321714610080575b60008\n0fd5b61004e61009e565b60405161005b9190610241565b60405180910390f35b61007e600480360381019061\n007991906102cb565b6100c8565b005b61008861016e565b60405161009591906103a8565b60405180910390f\n35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60\n0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673fffffffffffffffffff\nfffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610158576040517f08\nc379a000000000000000000000000000000000000000000000000000000000815260040161014f90610416565\nb60405180910390fd5b818160009182610169929190610686565b505050565b60606000805461017d9061049f\n565b80601f01602080910402602001604051908101604052809291908181526020018280546101a99061049f5\n65b80156101f65780601f106101cb576101008083540402835291602001916101f6565b820191906000526020\n600020905b8154815290600101906020018083116101d957829003601f168201915b5050505050905090565b6\n00073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061022b82610200565b9050\n919050565b61023b81610220565b82525050565b60006020820190506102566000830184610232565b9291505\n0565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261028b5761028a61\n0266565b5b8235905067ffffffffffffffff8111156102a8576102a761026b565b5b602083019150836001820\n2830111156102c4576102c3610270565b5b9250929050565b600080602083850312156102e2576102e161025c\n565b5b600083013567ffffffffffffffff811115610300576102ff610261565b5b61030c85828601610275565\nb92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83\n811015610352578082015181840152602081019050610337565b60008484015250505050565b6000601f19601\nf8301169050919050565b600061037a82610318565b6103848185610323565b93506103948185602086016103\n34565b61039d8161035e565b840191505092915050565b600060208201905081810360008301526103c281846\n1036f565b905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65\n72600082015250565b6000610400602083610323565b915061040b826103ca565b602082019050919050565b6\n000602082019050818103600083015261042f816103f3565b9050919050565b600082905092915050565b7f4e\n487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5\nb7f4e487b71000000000000000000000000000000000000000000000000000000006000526022600452602460\n00fd5b600060028204905060018216806104b757607f821691505b6020821081036104ca576104c9610470565\nb5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b\n600082821b905092915050565b6000600883026105327ffffffffffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffff826104f5565b61053c86836104f5565b955080198416935080861684179250505093\n92505050565b6000819050919050565b6000819050919050565b600061058361057e61057984610554565b610\n55e565b610554565b9050919050565b6000819050919050565b61059d83610568565b6105b16105a98261058a\n565b848454610502565b825550505050565b600090565b6105c66105b9565b6105d1818484610594565b50505\n0565b5b818110156105f5576105ea6000826105be565b6001810190506105d7565b5050565b601f8211156106\n3a5761060b816104d0565b610614846104e5565b81016020851015610623578190505b61063761062f856104e\n5565b8301826105d6565b50505b505050565b600082821c905092915050565b600061065d6000198460080261\n063f565b1980831691505092915050565b6000610676838361064c565b9150826002028217905092915050565\nb6106908383610436565b67ffffffffffffffff8111156106a9576106a8610441565b5b6106b3825461049f56\n5b6106be8282856105f9565b6000601f8311600181146106ed57600084156106db578287013590505b6106e58\n58261066a565b86555061074d565b601f1984166106fb866104d0565b60005b82811015610723578489013582\n556001820191506020850194506020810190506106fe565b86831015610740578489013561073c601f8916826\n1064c565b8355505b6001600288020188555050505b5050505050505056fea264697066735822122060c20316\ne7c477c2ca67fd1e46e616c49b5bad17c117d45957f64ac13c222fc164736f6c63430008150033\n\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\n-------------------------------------------\nApprove? [y/N]:\n&gt; y\n\\#\\# Account password\n\nPlease enter the password for account 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n0x60806040526040518060400160405280600d81526020017f48656c6c6f2c20576f726c64210000000000000\n&gt; \n-----------------------\nTransaction signed:\n {\n    \"type\": \"0x0\",\n    \"nonce\": \"0x16\",\n    \"gasPrice\": \"0x3b9aca00\",\n    \"maxPriorityFeePerGas\": null,\n    \"maxFeePerGas\": null,\n    \"gas\": \"0xa1325\",\n    \"value\": \"0x0\",\n    \"input\": \"0x60806040526040518060400160405280600d81526020017f48656c6c6f2c20576f726c6421000000000\n00000000000000000000000000000815250600090816200004a91906200031a565b5034801562000058576000\n80fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373fff\nfffffffffffffffffffffffffffffffffffff16021790555062000401565b600081519050919050565b7f4e48\n7b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7\nf4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000\nfd5b600060028204905060018216806200012257607f821691505b60208210810362000138576200013762000\n0da565b5b50919050565b60008190508160005260206000209050919050565b60006020601f83010490509190\n50565b600082821b905092915050565b600060088302620001a27ffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffffffffffff8262000163565b620001ae868362000163565b9550801984169350808616\n8417925050509392505050565b6000819050919050565b6000819050919050565b6000620001fb620001f5620\n001ef84620001c6565b620001d0565b620001c6565b9050919050565b6000819050919050565b620002178362\n0001da565b6200022f620002268262000202565b84845462000170565b825550505050565b600090565b62000\n24662000237565b620002538184846200020c565b505050565b5b818110156200027b576200026f6000826200\n023c565b60018101905062000259565b5050565b601f821115620002ca5762000294816200013e565b6200029\nf8462000153565b81016020851015620002af578190505b620002c7620002be8562000153565b830182620002\n58565b50505b505050565b600082821c905092915050565b6000620002ef60001984600802620002cf565b198\n0831691505092915050565b60006200030a8383620002dc565b9150826002028217905092915050565b620003\n2582620000a0565b67ffffffffffffffff811115620003415762000340620000ab565b5b6200034d825462000\n109565b6200035a8282856200027f565b600060209050601f8311600181146200039257600084156200037d57\n8287015190505b620003898582620002fc565b865550620003f9565b601f198416620003a2866200013e565b6\n0005b82811015620003cc57848901518255600182019150602085019450602081019050620003a5565b868310\n15620003ec5784890151620003e8601f891682620002dc565b8355505b6001600288020188555050505b50505\n0505050565b61078c80620004116000396000f3fe608060405234801561001057600080fd5b50600436106100\n415760003560e01c80638da5cb5b14610046578063a413686214610064578063cfae321714610080575b60008\n0fd5b61004e61009e565b60405161005b9190610241565b60405180910390f35b61007e600480360381019061\n007991906102cb565b6100c8565b005b61008861016e565b60405161009591906103a8565b60405180910390f\n35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60\n0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673fffffffffffffffffff\nfffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610158576040517f08\nc379a000000000000000000000000000000000000000000000000000000000815260040161014f90610416565\nb60405180910390fd5b818160009182610169929190610686565b505050565b60606000805461017d9061049f\n565b80601f01602080910402602001604051908101604052809291908181526020018280546101a99061049f5\n65b80156101f65780601f106101cb576101008083540402835291602001916101f6565b820191906000526020\n600020905b8154815290600101906020018083116101d957829003601f168201915b5050505050905090565b6\n00073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061022b82610200565b9050\n919050565b61023b81610220565b82525050565b60006020820190506102566000830184610232565b9291505\n0565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261028b5761028a61\n0266565b5b8235905067ffffffffffffffff8111156102a8576102a761026b565b5b602083019150836001820\n2830111156102c4576102c3610270565b5b9250929050565b600080602083850312156102e2576102e161025c\n565b5b600083013567ffffffffffffffff811115610300576102ff610261565b5b61030c85828601610275565\nb92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83\n811015610352578082015181840152602081019050610337565b60008484015250505050565b6000601f19601\nf8301169050919050565b600061037a82610318565b6103848185610323565b93506103948185602086016103\n34565b61039d8161035e565b840191505092915050565b600060208201905081810360008301526103c281846\n1036f565b905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65\n72600082015250565b6000610400602083610323565b915061040b826103ca565b602082019050919050565b6\n000602082019050818103600083015261042f816103f3565b9050919050565b600082905092915050565b7f4e\n487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5\nb7f4e487b71000000000000000000000000000000000000000000000000000000006000526022600452602460\n00fd5b600060028204905060018216806104b757607f821691505b6020821081036104ca576104c9610470565\nb5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b\n600082821b905092915050565b6000600883026105327ffffffffffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffff826104f5565b61053c86836104f5565b955080198416935080861684179250505093\n92505050565b6000819050919050565b6000819050919050565b600061058361057e61057984610554565b610\n55e565b610554565b9050919050565b6000819050919050565b61059d83610568565b6105b16105a98261058a\n565b848454610502565b825550505050565b600090565b6105c66105b9565b6105d1818484610594565b50505\n0565b5b818110156105f5576105ea6000826105be565b6001810190506105d7565b5050565b601f8211156106\n3a5761060b816104d0565b610614846104e5565b81016020851015610623578190505b61063761062f856104e\n5565b8301826105d6565b50505b505050565b600082821c905092915050565b600061065d6000198460080261\n063f565b1980831691505092915050565b6000610676838361064c565b9150826002028217905092915050565\nb6106908383610436565b67ffffffffffffffff8111156106a9576106a8610441565b5b6106b3825461049f56\n5b6106be8282856105f9565b6000601f8311600181146106ed57600084156106db578287013590505b6106e58\n58261066a565b86555061074d565b601f1984166106fb866104d0565b60005b82811015610723578489013582\n556001820191506020850194506020810190506106fe565b86831015610740578489013561073c601f8916826\n1064c565b8355505b6001600288020188555050505b5050505050505056fea264697066735822122060c20316\ne7c477c2ca67fd1e46e616c49b5bad17c117d45957f64ac13c222fc164736f6c63430008150033\",\n    \"v\": \"0x648\",\n    \"r\": \"0x7f09fefc66f7d72a4cdc2c5f761593b02045c31761d6308741fc46995b6c902f\",\n    \"s\": \"0x3c46612de1d23a03c93026bbd7a0268c647a0ccdcdd82b7682576ab31692a034\",\n    \"to\": null,\n    \"hash\": \"0xa673d409198d99be0211fae2c485131f95a2cca4c32a1aa5faa2a8d667b4468d\"\n  }\n--------- Transaction request-------------\nto:    0x8219Ce50e267332B8E439256A94fa85CFF271d8E\nfrom:               0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 [chksum ok]\nvalue:              0 wei\ngas:                0x91bb (37307)\ngasprice: 1000000000 wei\nnonce:    0x17 (23)\nchainid:  0x312\ndata:     0xa4136862000000000000000000000000000000000000000000000000000000000000002000000000000\n00000000000000000000000000000000000000000000000000009486920746865726521000000000000000000\n0000000000000000000000000000\n\nTransaction validation:\n  * Info : Transaction invokes the following method: \"setGreeting(string: Hi there!)\"\n\n\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\n-------------------------------------------\nApprove? [y/N]:\n&gt; y\n\\#\\# Account password\n\nPlease enter the password for account 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n&gt; \n-----------------------\nTransaction signed:\n {\n    \"type\": \"0x0\",\n    \"nonce\": \"0x17\",\n    \"gasPrice\": \"0x3b9aca00\",\n    \"maxPriorityFeePerGas\": null,\n    \"maxFeePerGas\": null,\n    \"gas\": \"0x91bb\",\n    \"value\": \"0x0\",\n    \"input\": \"0xa413686200000000000000000000000000000000000000000000000000000000000000200000000\n    00000000000000000000000000000000000000000000000000000000948692074686572652100000000000\n    00000000000000000000000000000000000\",\n    \"v\": \"0x648\",\n    \"r\": \"0x6a344313024d4d37eb07c6a12b39947624d09d786e7e8722e34f326e603286c7\",\n    \"s\": \"0x4c3fe99a3327ba7072104fefc9ce5939c3abf21d3e0de8a18121c4a54c491db6\",\n    \"to\": \"0x8219ce50e267332b8e439256a94fa85cff271d8e\",\n    \"hash\": \"0x22bbd2b8ff81b75b30323022c18ac0a6f8ae26cb0343708554c8564a4998e10e\"\n  }\n-------- List Account request--------------\nA request has been made to list all accounts. \nYou can select which accounts the caller can see\n  [x] 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-22-11.261468773Z-- 2db017e44b03b37755a4b15e14cd799f83de4c13\n  [x] 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-28-54.934614755Z-- 7a7686ad451d2865a2246e239b674aefd4c6c27c\n  [x] 0x1BbA02873cC1C11f369a7B692F5F3dE8Ff7bbe80\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-09-05T20-26-34.695386684Z-- 1bba02873cc1c11f369a7b692f5f3de8ff7bbe80\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n--------- Transaction request-------------\nto:    &lt;contact creation&gt;\nfrom:               0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 [chksum ok]\nvalue:              0 wei\ngas:                0xa1325 (660261)\ngasprice: 1000000000 wei\nnonce:    0x18 (24)\nchainid:  0x312\ndata:     0x60806040526040518060400160405280600d81526020017f48656c6c6f2c20576f726c6421000000000\n00000000000000000000000000000815250600090816200004a91906200031a565b5034801562000058576000\n80fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373fff\nfffffffffffffffffffffffffffffffffffff16021790555062000401565b600081519050919050565b7f4e48\n7b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7\nf4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000\nfd5b600060028204905060018216806200012257607f821691505b60208210810362000138576200013762000\n0da565b5b50919050565b60008190508160005260206000209050919050565b60006020601f83010490509190\n50565b600082821b905092915050565b600060088302620001a27ffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffffffffffff8262000163565b620001ae868362000163565b9550801984169350808616\n8417925050509392505050565b6000819050919050565b6000819050919050565b6000620001fb620001f5620\n001ef84620001c6565b620001d0565b620001c6565b9050919050565b6000819050919050565b620002178362\n0001da565b6200022f620002268262000202565b84845462000170565b825550505050565b600090565b62000\n24662000237565b620002538184846200020c565b505050565b5b818110156200027b576200026f6000826200\n023c565b60018101905062000259565b5050565b601f821115620002ca5762000294816200013e565b6200029\nf8462000153565b81016020851015620002af578190505b620002c7620002be8562000153565b830182620002\n58565b50505b505050565b600082821c905092915050565b6000620002ef60001984600802620002cf565b198\n0831691505092915050565b60006200030a8383620002dc565b9150826002028217905092915050565b620003\n2582620000a0565b67ffffffffffffffff811115620003415762000340620000ab565b5b6200034d825462000\n109565b6200035a8282856200027f565b600060209050601f8311600181146200039257600084156200037d57\n8287015190505b620003898582620002fc565b865550620003f9565b601f198416620003a2866200013e565b6\n0005b82811015620003cc57848901518255600182019150602085019450602081019050620003a5565b868310\n15620003ec5784890151620003e8601f891682620002dc565b8355505b6001600288020188555050505b50505\n0505050565b61078c80620004116000396000f3fe608060405234801561001057600080fd5b50600436106100\n415760003560e01c80638da5cb5b14610046578063a413686214610064578063cfae321714610080575b60008\n0fd5b61004e61009e565b60405161005b9190610241565b60405180910390f35b61007e600480360381019061\n007991906102cb565b6100c8565b005b61008861016e565b60405161009591906103a8565b60405180910390f\n35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60\n0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673fffffffffffffffffff\nfffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610158576040517f08\nc379a000000000000000000000000000000000000000000000000000000000815260040161014f90610416565\nb60405180910390fd5b818160009182610169929190610686565b505050565b60606000805461017d9061049f\n565b80601f01602080910402602001604051908101604052809291908181526020018280546101a99061049f5\n65b80156101f65780601f106101cb576101008083540402835291602001916101f6565b820191906000526020\n600020905b8154815290600101906020018083116101d957829003601f168201915b5050505050905090565b6\n00073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061022b82610200565b9050\n919050565b61023b81610220565b82525050565b60006020820190506102566000830184610232565b9291505\n0565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261028b5761028a61\n0266565b5b8235905067ffffffffffffffff8111156102a8576102a761026b565b5b602083019150836001820\n2830111156102c4576102c3610270565b5b9250929050565b600080602083850312156102e2576102e161025c\n565b5b600083013567ffffffffffffffff811115610300576102ff610261565b5b61030c85828601610275565\nb92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83\n811015610352578082015181840152602081019050610337565b60008484015250505050565b6000601f19601\nf8301169050919050565b600061037a82610318565b6103848185610323565b93506103948185602086016103\n34565b61039d8161035e565b840191505092915050565b600060208201905081810360008301526103c281846\n1036f565b905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65\n72600082015250565b6000610400602083610323565b915061040b826103ca565b602082019050919050565b6\n000602082019050818103600083015261042f816103f3565b9050919050565b600082905092915050565b7f4e\n487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5\nb7f4e487b71000000000000000000000000000000000000000000000000000000006000526022600452602460\n00fd5b600060028204905060018216806104b757607f821691505b6020821081036104ca576104c9610470565\nb5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b\n600082821b905092915050565b6000600883026105327ffffffffffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffff826104f5565b61053c86836104f5565b955080198416935080861684179250505093\n92505050565b6000819050919050565b6000819050919050565b600061058361057e61057984610554565b610\n55e565b610554565b9050919050565b6000819050919050565b61059d83610568565b6105b16105a98261058a\n565b848454610502565b825550505050565b600090565b6105c66105b9565b6105d1818484610594565b50505\n0565b5b818110156105f5576105ea6000826105be565b6001810190506105d7565b5050565b601f8211156106\n3a5761060b816104d0565b610614846104e5565b81016020851015610623578190505b61063761062f856104e\n5565b8301826105d6565b50505b505050565b600082821c905092915050565b600061065d6000198460080261\n063f565b1980831691505092915050565b6000610676838361064c565b9150826002028217905092915050565\nb6106908383610436565b67ffffffffffffffff8111156106a9576106a8610441565b5b6106b3825461049f56\n5b6106be8282856105f9565b6000601f8311600181146106ed57600084156106db578287013590505b6106e58\n58261066a565b86555061074d565b601f1984166106fb866104d0565b60005b82811015610723578489013582\n556001820191506020850194506020810190506106fe565b86831015610740578489013561073c601f8916826\n1064c565b8355505b6001600288020188555050505b5050505050505056fea264697066735822122060c20316\ne7c477c2ca67fd1e46e616c49b5bad17c117d45957f64ac13c222fc164736f6c63430008150033\n\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\n-------------------------------------------\nApprove? [y/N]:\n&gt; y\n\\#\\# Account password\n\nPlease enter the password for account 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n&gt; \n-----------------------\nTransaction signed:\n {\n    \"type\": \"0x0\",\n    \"nonce\": \"0x18\",\n    \"gasPrice\": \"0x3b9aca00\",\n    \"maxPriorityFeePerGas\": null,\n    \"maxFeePerGas\": null,\n    \"gas\": \"0xa1325\",\n    \"value\": \"0x0\",\n    \"input\": \"0x60806040526040518060400160405280600d81526020017f48656c6c6f2c20576f726c6421000000000\n00000000000000000000000000000815250600090816200004a91906200031a565b5034801562000058576000\n80fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373fff\nfffffffffffffffffffffffffffffffffffff16021790555062000401565b600081519050919050565b7f4e48\n7b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7\nf4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000\nfd5b600060028204905060018216806200012257607f821691505b60208210810362000138576200013762000\n0da565b5b50919050565b60008190508160005260206000209050919050565b60006020601f83010490509190\n50565b600082821b905092915050565b600060088302620001a27ffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffffffffffff8262000163565b620001ae868362000163565b9550801984169350808616\n8417925050509392505050565b6000819050919050565b6000819050919050565b6000620001fb620001f5620\n001ef84620001c6565b620001d0565b620001c6565b9050919050565b6000819050919050565b620002178362\n0001da565b6200022f620002268262000202565b84845462000170565b825550505050565b600090565b62000\n24662000237565b620002538184846200020c565b505050565b5b818110156200027b576200026f6000826200\n023c565b60018101905062000259565b5050565b601f821115620002ca5762000294816200013e565b6200029\nf8462000153565b81016020851015620002af578190505b620002c7620002be8562000153565b830182620002\n58565b50505b505050565b600082821c905092915050565b6000620002ef60001984600802620002cf565b198\n0831691505092915050565b60006200030a8383620002dc565b9150826002028217905092915050565b620003\n2582620000a0565b67ffffffffffffffff811115620003415762000340620000ab565b5b6200034d825462000\n109565b6200035a8282856200027f565b600060209050601f8311600181146200039257600084156200037d57\n8287015190505b620003898582620002fc565b865550620003f9565b601f198416620003a2866200013e565b6\n0005b82811015620003cc57848901518255600182019150602085019450602081019050620003a5565b868310\n15620003ec5784890151620003e8601f891682620002dc565b8355505b6001600288020188555050505b50505\n0505050565b61078c80620004116000396000f3fe608060405234801561001057600080fd5b50600436106100\n415760003560e01c80638da5cb5b14610046578063a413686214610064578063cfae321714610080575b60008\n0fd5b61004e61009e565b60405161005b9190610241565b60405180910390f35b61007e600480360381019061\n007991906102cb565b6100c8565b005b61008861016e565b60405161009591906103a8565b60405180910390f\n35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60\n0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673fffffffffffffffffff\nfffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610158576040517f08\nc379a000000000000000000000000000000000000000000000000000000000815260040161014f90610416565\nb60405180910390fd5b818160009182610169929190610686565b505050565b60606000805461017d9061049f\n565b80601f01602080910402602001604051908101604052809291908181526020018280546101a99061049f5\n65b80156101f65780601f106101cb576101008083540402835291602001916101f6565b820191906000526020\n600020905b8154815290600101906020018083116101d957829003601f168201915b5050505050905090565b6\n00073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061022b82610200565b9050\n919050565b61023b81610220565b82525050565b60006020820190506102566000830184610232565b9291505\n0565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261028b5761028a61\n0266565b5b8235905067ffffffffffffffff8111156102a8576102a761026b565b5b602083019150836001820\n2830111156102c4576102c3610270565b5b9250929050565b600080602083850312156102e2576102e161025c\n565b5b600083013567ffffffffffffffff811115610300576102ff610261565b5b61030c85828601610275565\nb92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83\n811015610352578082015181840152602081019050610337565b60008484015250505050565b6000601f19601\nf8301169050919050565b600061037a82610318565b6103848185610323565b93506103948185602086016103\n34565b61039d8161035e565b840191505092915050565b600060208201905081810360008301526103c281846\n1036f565b905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65\n72600082015250565b6000610400602083610323565b915061040b826103ca565b602082019050919050565b6\n000602082019050818103600083015261042f816103f3565b9050919050565b600082905092915050565b7f4e\n487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5\nb7f4e487b71000000000000000000000000000000000000000000000000000000006000526022600452602460\n00fd5b600060028204905060018216806104b757607f821691505b6020821081036104ca576104c9610470565\nb5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b\n600082821b905092915050565b6000600883026105327ffffffffffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffff826104f5565b61053c86836104f5565b955080198416935080861684179250505093\n92505050565b6000819050919050565b6000819050919050565b600061058361057e61057984610554565b610\n55e565b610554565b9050919050565b6000819050919050565b61059d83610568565b6105b16105a98261058a\n565b848454610502565b825550505050565b600090565b6105c66105b9565b6105d1818484610594565b50505\n0565b5b818110156105f5576105ea6000826105be565b6001810190506105d7565b5050565b601f8211156106\n3a5761060b816104d0565b610614846104e5565b81016020851015610623578190505b61063761062f856104e\n5565b8301826105d6565b50505b505050565b600082821c905092915050565b600061065d6000198460080261\n063f565b1980831691505092915050565b6000610676838361064c565b9150826002028217905092915050565\nb6106908383610436565b67ffffffffffffffff8111156106a9576106a8610441565b5b6106b3825461049f56\n5b6106be8282856105f9565b6000601f8311600181146106ed57600084156106db578287013590505b6106e58\n58261066a565b86555061074d565b601f1984166106fb866104d0565b60005b82811015610723578489013582\n556001820191506020850194506020810190506106fe565b86831015610740578489013561073c601f8916826\n1064c565b8355505b6001600288020188555050505b5050505050505056fea264697066735822122060c20316\ne7c477c2ca67fd1e46e616c49b5bad17c117d45957f64ac13c222fc164736f6c63430008150033\",\n    \"v\": \"0x648\",\n    \"r\": \"0x1dabca54ec371c906023e8b5d5e7636fdf5764207896968b35fe50bb343e4b9f\",\n    \"s\": \"0x6c34bb0fcabbc0d099757d95b4ae66b685a18cc8dd3cd58c009e06a13a98e64d\",\n    \"to\": null,\n    \"hash\": \"0xfd3b6b5365f917fa2b90f18eb2eb0ca5c8e95ff4a07e54e27d7f03ff0f9769ec\"\n  }\n-------- List Account request--------------\nA request has been made to list all accounts. \nYou can select which accounts the caller can see\n  [x] 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-22-11.261468773Z-- 2db017e44b03b37755a4b15e14cd799f83de4c13\n  [x] 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-28-54.934614755Z-- 7a7686ad451d2865a2246e239b674aefd4c6c27c\n  [x] 0x1BbA02873cC1C11f369a7B692F5F3dE8Ff7bbe80\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-09-05T20-26-34.695386684Z-- 1bba02873cc1c11f369a7b692f5f3de8ff7bbe80\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n--------- Transaction request-------------\nto:    &lt;contact creation&gt;\nfrom:               0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 [chksum ok]\nvalue:              0 wei\ngas:                0xa1325 (660261)\ngasprice: 1000000000 wei\nnonce:    0x19 (25)\nchainid:  0x312\ndata:     0x60806040526040518060400160405280600d81526020017f48656c6c6f2c20576f726c6421000000000\n00000000000000000000000000000815250600090816200004a91906200031a565b5034801562000058576000\n80fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373fff\nfffffffffffffffffffffffffffffffffffff16021790555062000401565b600081519050919050565b7f4e48\n7b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7\nf4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000\nfd5b600060028204905060018216806200012257607f821691505b60208210810362000138576200013762000\n0da565b5b50919050565b60008190508160005260206000209050919050565b60006020601f83010490509190\n50565b600082821b905092915050565b600060088302620001a27ffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffffffffffff8262000163565b620001ae868362000163565b9550801984169350808616\n8417925050509392505050565b6000819050919050565b6000819050919050565b6000620001fb620001f5620\n001ef84620001c6565b620001d0565b620001c6565b9050919050565b6000819050919050565b620002178362\n0001da565b6200022f620002268262000202565b84845462000170565b825550505050565b600090565b62000\n24662000237565b620002538184846200020c565b505050565b5b818110156200027b576200026f6000826200\n023c565b60018101905062000259565b5050565b601f821115620002ca5762000294816200013e565b6200029\nf8462000153565b81016020851015620002af578190505b620002c7620002be8562000153565b830182620002\n58565b50505b505050565b600082821c905092915050565b6000620002ef60001984600802620002cf565b198\n0831691505092915050565b60006200030a8383620002dc565b9150826002028217905092915050565b620003\n2582620000a0565b67ffffffffffffffff811115620003415762000340620000ab565b5b6200034d825462000\n109565b6200035a8282856200027f565b600060209050601f8311600181146200039257600084156200037d57\n8287015190505b620003898582620002fc565b865550620003f9565b601f198416620003a2866200013e565b6\n0005b82811015620003cc57848901518255600182019150602085019450602081019050620003a5565b868310\n15620003ec5784890151620003e8601f891682620002dc565b8355505b6001600288020188555050505b50505\n0505050565b61078c80620004116000396000f3fe608060405234801561001057600080fd5b50600436106100\n415760003560e01c80638da5cb5b14610046578063a413686214610064578063cfae321714610080575b60008\n0fd5b61004e61009e565b60405161005b9190610241565b60405180910390f35b61007e600480360381019061\n007991906102cb565b6100c8565b005b61008861016e565b60405161009591906103a8565b60405180910390f\n35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60\n0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673fffffffffffffffffff\nfffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610158576040517f08\nc379a000000000000000000000000000000000000000000000000000000000815260040161014f90610416565\nb60405180910390fd5b818160009182610169929190610686565b505050565b60606000805461017d9061049f\n565b80601f01602080910402602001604051908101604052809291908181526020018280546101a99061049f5\n65b80156101f65780601f106101cb576101008083540402835291602001916101f6565b820191906000526020\n600020905b8154815290600101906020018083116101d957829003601f168201915b5050505050905090565b6\n00073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061022b82610200565b9050\n919050565b61023b81610220565b82525050565b60006020820190506102566000830184610232565b9291505\n0565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261028b5761028a61\n0266565b5b8235905067ffffffffffffffff8111156102a8576102a761026b565b5b602083019150836001820\n2830111156102c4576102c3610270565b5b9250929050565b600080602083850312156102e2576102e161025c\n565b5b600083013567ffffffffffffffff811115610300576102ff610261565b5b61030c85828601610275565\nb92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83\n811015610352578082015181840152602081019050610337565b60008484015250505050565b6000601f19601\nf8301169050919050565b600061037a82610318565b6103848185610323565b93506103948185602086016103\n34565b61039d8161035e565b840191505092915050565b600060208201905081810360008301526103c281846\n1036f565b905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65\n72600082015250565b6000610400602083610323565b915061040b826103ca565b602082019050919050565b6\n000602082019050818103600083015261042f816103f3565b9050919050565b600082905092915050565b7f4e\n487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5\nb7f4e487b71000000000000000000000000000000000000000000000000000000006000526022600452602460\n00fd5b600060028204905060018216806104b757607f821691505b6020821081036104ca576104c9610470565\nb5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b\n600082821b905092915050565b6000600883026105327ffffffffffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffff826104f5565b61053c86836104f5565b955080198416935080861684179250505093\n92505050565b6000819050919050565b6000819050919050565b600061058361057e61057984610554565b610\n55e565b610554565b9050919050565b6000819050919050565b61059d83610568565b6105b16105a98261058a\n565b848454610502565b825550505050565b600090565b6105c66105b9565b6105d1818484610594565b50505\n0565b5b818110156105f5576105ea6000826105be565b6001810190506105d7565b5050565b601f8211156106\n3a5761060b816104d0565b610614846104e5565b81016020851015610623578190505b61063761062f856104e\n5565b8301826105d6565b50505b505050565b600082821c905092915050565b600061065d6000198460080261\n063f565b1980831691505092915050565b6000610676838361064c565b9150826002028217905092915050565\nb6106908383610436565b67ffffffffffffffff8111156106a9576106a8610441565b5b6106b3825461049f56\n5b6106be8282856105f9565b6000601f8311600181146106ed57600084156106db578287013590505b6106e58\n58261066a565b86555061074d565b601f1984166106fb866104d0565b60005b82811015610723578489013582\n556001820191506020850194506020810190506106fe565b86831015610740578489013561073c601f8916826\n1064c565b8355505b6001600288020188555050505b5050505050505056fea264697066735822122060c20316\ne7c477c2ca67fd1e46e616c49b5bad17c117d45957f64ac13c222fc164736f6c63430008150033\n\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\n-------------------------------------------\nApprove? [y/N]:\n&gt; y\n\\#\\# Account password\n\nPlease enter the password for account 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n&gt; \n-----------------------\nTransaction signed:\n {\n    \"type\": \"0x0\",\n    \"nonce\": \"0x19\",\n    \"gasPrice\": \"0x3b9aca00\",\n    \"maxPriorityFeePerGas\": null,\n    \"maxFeePerGas\": null,\n    \"gas\": \"0xa1325\",\n    \"value\": \"0x0\",\n    \"input\": \"0x60806040526040518060400160405280600d81526020017f48656c6c6f2c20576f726c6421000000000\n00000000000000000000000000000815250600090816200004a91906200031a565b5034801562000058576000\n80fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373fff\nfffffffffffffffffffffffffffffffffffff16021790555062000401565b600081519050919050565b7f4e48\n7b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7\nf4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000\nfd5b600060028204905060018216806200012257607f821691505b60208210810362000138576200013762000\n0da565b5b50919050565b60008190508160005260206000209050919050565b60006020601f83010490509190\n50565b600082821b905092915050565b600060088302620001a27ffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffffffffffff8262000163565b620001ae868362000163565b9550801984169350808616\n8417925050509392505050565b6000819050919050565b6000819050919050565b6000620001fb620001f5620\n001ef84620001c6565b620001d0565b620001c6565b9050919050565b6000819050919050565b620002178362\n0001da565b6200022f620002268262000202565b84845462000170565b825550505050565b600090565b62000\n24662000237565b620002538184846200020c565b505050565b5b818110156200027b576200026f6000826200\n023c565b60018101905062000259565b5050565b601f821115620002ca5762000294816200013e565b6200029\nf8462000153565b81016020851015620002af578190505b620002c7620002be8562000153565b830182620002\n58565b50505b505050565b600082821c905092915050565b6000620002ef60001984600802620002cf565b198\n0831691505092915050565b60006200030a8383620002dc565b9150826002028217905092915050565b620003\n2582620000a0565b67ffffffffffffffff811115620003415762000340620000ab565b5b6200034d825462000\n109565b6200035a8282856200027f565b600060209050601f8311600181146200039257600084156200037d57\n8287015190505b620003898582620002fc565b865550620003f9565b601f198416620003a2866200013e565b6\n0005b82811015620003cc57848901518255600182019150602085019450602081019050620003a5565b868310\n15620003ec5784890151620003e8601f891682620002dc565b8355505b6001600288020188555050505b50505\n0505050565b61078c80620004116000396000f3fe608060405234801561001057600080fd5b50600436106100\n415760003560e01c80638da5cb5b14610046578063a413686214610064578063cfae321714610080575b60008\n0fd5b61004e61009e565b60405161005b9190610241565b60405180910390f35b61007e600480360381019061\n007991906102cb565b6100c8565b005b61008861016e565b60405161009591906103a8565b60405180910390f\n35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60\n0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673fffffffffffffffffff\nfffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610158576040517f08\nc379a000000000000000000000000000000000000000000000000000000000815260040161014f90610416565\nb60405180910390fd5b818160009182610169929190610686565b505050565b60606000805461017d9061049f\n565b80601f01602080910402602001604051908101604052809291908181526020018280546101a99061049f5\n65b80156101f65780601f106101cb576101008083540402835291602001916101f6565b820191906000526020\n600020905b8154815290600101906020018083116101d957829003601f168201915b5050505050905090565b6\n00073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061022b82610200565b9050\n919050565b61023b81610220565b82525050565b60006020820190506102566000830184610232565b9291505\n0565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261028b5761028a61\n0266565b5b8235905067ffffffffffffffff8111156102a8576102a761026b565b5b602083019150836001820\n2830111156102c4576102c3610270565b5b9250929050565b600080602083850312156102e2576102e161025c\n565b5b600083013567ffffffffffffffff811115610300576102ff610261565b5b61030c85828601610275565\nb92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83\n811015610352578082015181840152602081019050610337565b60008484015250505050565b6000601f19601\nf8301169050919050565b600061037a82610318565b6103848185610323565b93506103948185602086016103\n34565b61039d8161035e565b840191505092915050565b600060208201905081810360008301526103c281846\n1036f565b905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65\n72600082015250565b6000610400602083610323565b915061040b826103ca565b602082019050919050565b6\n000602082019050818103600083015261042f816103f3565b9050919050565b600082905092915050565b7f4e\n487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5\nb7f4e487b71000000000000000000000000000000000000000000000000000000006000526022600452602460\n00fd5b600060028204905060018216806104b757607f821691505b6020821081036104ca576104c9610470565\nb5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b\n600082821b905092915050565b6000600883026105327ffffffffffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffff826104f5565b61053c86836104f5565b955080198416935080861684179250505093\n92505050565b6000819050919050565b6000819050919050565b600061058361057e61057984610554565b610\n55e565b610554565b9050919050565b6000819050919050565b61059d83610568565b6105b16105a98261058a\n565b848454610502565b825550505050565b600090565b6105c66105b9565b6105d1818484610594565b50505\n0565b5b818110156105f5576105ea6000826105be565b6001810190506105d7565b5050565b601f8211156106\n3a5761060b816104d0565b610614846104e5565b81016020851015610623578190505b61063761062f856104e\n5565b8301826105d6565b50505b505050565b600082821c905092915050565b600061065d6000198460080261\n063f565b1980831691505092915050565b6000610676838361064c565b9150826002028217905092915050565\nb6106908383610436565b67ffffffffffffffff8111156106a9576106a8610441565b5b6106b3825461049f56\n5b6106be8282856105f9565b6000601f8311600181146106ed57600084156106db578287013590505b6106e58\n58261066a565b86555061074d565b601f1984166106fb866104d0565b60005b82811015610723578489013582\n556001820191506020850194506020810190506106fe565b86831015610740578489013561073c601f8916826\n1064c565b8355505b6001600288020188555050505b5050505050505056fea264697066735822122060c20316\ne7c477c2ca67fd1e46e616c49b5bad17c117d45957f64ac13c222fc164736f6c63430008150033\",\n    \"v\": \"0x647\",\n    \"r\": \"0xfb11595c1d105855922fac1e7957f6234df2707a492043208f1719ce94814bd6\",\n    \"s\": \"0x5500e8134875e581c43fb78051cde2b42fff60025f330688a974ca72a7fa7707\",\n    \"to\": null,\n    \"hash\": \"0x44ed9b152a0e8a2b85ef3131629117672710e4d7f87f53516848bd53bb8414bb\"\n  }\n--------- Transaction request-------------\nto:    0x05733407E1078d4E9D50adC48f04A05d3269f7D2\nfrom:               0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 [chksum ok]\nvalue:              0 wei\ngas:                0x92e7 (37607)\ngasprice: 1000000000 wei\nnonce:    0x1a (26)\nchainid:  0x312\ndata:     0xa4136862000000000000000000000000000000000000000000000000000000000000002000000000000\n0000000000000000000000000000000000000000000000000001d546865206f776e6572206368616e67656420\n746865206d657373616765000000\n\nTransaction validation:\n  * Info : Transaction invokes the following method: \"setGreeting(string: The owner changed the message)\"\n\n\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\n-------------------------------------------\nApprove? [y/N]:\n&gt; y\n\\#\\# Account password\n\nPlease enter the password for account 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n&gt; \n-----------------------\nTransaction signed:\n {\n    \"type\": \"0x0\",\n    \"nonce\": \"0x1a\",\n    \"gasPrice\": \"0x3b9aca00\",\n    \"maxPriorityFeePerGas\": null,\n    \"maxFeePerGas\": null,\n    \"gas\": \"0x92e7\",\n    \"value\": \"0x0\",\n    \"input\": \"0xa413686200000000000000000000000000000000000000000000000000000000000000200000000\n    00000000000000000000000000000000000000000000000000000001d546865206f776e6572206368616e\n    67656420746865206d657373616765000000\",\n    \"v\": \"0x648\",\n    \"r\": \"0x76481633317017d22ad780a7e5b75a68eedcdb74dca74c7c5a0bf6ddb6f85799\",\n    \"s\": \"0x6d9c18462013e322bfd4774c2fd459d23cb2bf29ae1d3b1f17b2841a3c104c7d\",\n    \"to\": \"0x05733407e1078d4e9d50adc48f04a05d3269f7d2\",\n    \"hash\": \"0x80fefda3c78497187449c561c54884b0925ae5cd9bb66712e1e8c4453f7fc283\"\n  }\nAs notificações de contratos submetidos para criação aparecem no console do geth:\nINFO [10-10|10:09:41.718] Submitted contract creation              hash=0xe15b0e773f71256345ef5089bd6ba5c190386d7162dcebcf4d25dcc3ab37ec63 from=0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 nonce=17 contract=0x2Ec04170e7b52d40D494F149Bd5E29e0Bf0c8Dd8 value=0\n...\nINFO [10-10|10:16:35.223] Submitted contract creation              hash=0x6cff3c9a22e589bf23806e5d828afa8c40ec6e4ca3b6f685c70ef49424e11109 from=0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 nonce=18 contract=0x0D11EFB65b7E3BFE2fb3f8bCADbD34115aE7c805 value=0\n\nINFO [10-10|10:17:09.792] Submitted contract creation              hash=0x851f13f7ab055356b5f22e012a9c7b947fcf941e44857ae3ea041fa05b4f2408 from=0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 nonce=19 contract=0x83fd6403127A6b3F329Afd854cD47C277276fcBc value=0\n\nINFO [10-10|10:17:45.671] Submitted transaction                    hash=0x3b20dda6c2078014368b4043cd431a856eaa1f35a771827edb4580b652a7d1b8 from=0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 nonce=20 recipient=0x83fd6403127A6b3F329Afd854cD47C277276fcBc value=0",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e _Frameworks_ Ethereum: Introdução aos Testes e _Deploy_ com `Truffle`</span>"
    ]
  },
  {
    "objectID": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#deploy-na-rede-privada-local-cont.",
    "href": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#deploy-na-rede-privada-local-cont.",
    "title": "10  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução aos Testes e Deploy com Truffle",
    "section": "10.15 Deploy na Rede Privada Local (cont.)",
    "text": "10.15 Deploy na Rede Privada Local (cont.)\nFazer a implantação na etherprivate:\n[projeto-helloworld-truffle]$ truffle migrate --network etherprivate\n\nCompiling your contracts...\n===========================\n&gt; Compiling ./contracts/Greeter_orig.sol\n&gt; Compilation warnings encountered:\n\n    Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  -&gt; project:/contracts/Greeter_orig.sol:8:5:\n  |\n8 |     constructor() public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n\n&gt; Artifacts written to /run/media/rogerio/BK-RAG-HP1TB/repositorios/Dropbox/dados/rogerio/UTFPR/docencia/ disciplinas/2023/DLT-PPGCC17/2023-2/aulas/md/aula-12-pratica-ethereum-truffle/src/ projeto-helloworld-truffle/build/contracts\n&gt; Compiled successfully using:\n   - solc: 0.8.21+commit.d9974bed.Emscripten.clang\n\n\nStarting migrations...\n======================\n&gt; Network name:    'etherprivate'\n&gt; Network id:      786\n&gt; Block gas limit: 30000000 (0x1c9c380)\n\n\n2_deploy_greeter.js\n===================\n\n   Deploying 'Greeter'\n   -------------------\n   &gt; transaction hash:    0xe32f1b83d45971309bb07e38a118561c33e51abbbc0667a51326368a79930e3b\n   &gt; Blocks: 0            Seconds: 40\n   &gt; contract address:    0x92aB300b4C587Fb07d404f8C4263213b65c5CF45\n   &gt; block number:        9518\n   &gt; block timestamp:     1696944233\n   &gt; account:             0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n   &gt; balance:             19036.0000000000003\n   &gt; gas used:            528209 (0x80f51)\n   &gt; gas price:           1 gwei\n   &gt; value sent:          0 ETH\n   &gt; total cost:          0.000528209 ETH\n\n   &gt; Saving artifacts\n   -------------------------------------\n   &gt; Total cost:         0.000528209 ETH\n\nSummary\n=======\n&gt; Total deployments:   1\n&gt; Final cost:          0.000528209 ETH\nNo console onde o clef está sendo executado aparecem as solicitações de aprovações e solicitações de senha para a conta principal.\n[projeto-helloworld-truffle]$ ~/go-ethereum/build/bin/clef --chainid 786 --keystore ~/.etherprivate/keystore --configdir ~/.etherprivate/clef --http\n\nWARNING!\n\nClef is an account management tool. It may, like any software, contain bugs.\n\nPlease take care to\n- backup your keystore files,\n- verify that the keystore(s) can be opened with your password.\n\nClef is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\nwithout even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\nPURPOSE. See the GNU General Public License for more details.\n\nEnter 'ok' to proceed:\n&gt; ok\n\nINFO [10-10|10:23:19.510] Using CLI as UI-channel \nINFO [10-10|10:23:19.936] Loaded 4byte database                    embeds=268,621 locals=0 local=./4byte-custom.json\nWARN [10-10|10:23:19.936] Failed to open master, rules disabled    err=\"failed stat on /home/rogerio/.etherprivate/clef/masterseed.json: stat /home/rogerio/.etherprivate/clef/masterseed.json: no such file or directory\"\nINFO [10-10|10:23:19.936] Starting signer                          chainid=786 keystore=/home/rogerio/.etherprivate/keystore light-kdf=false advanced=false\nINFO [10-10|10:23:19.938] Smartcard socket file missing, disabling err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [10-10|10:23:19.938] Audit logs configured                    file=audit.log\nINFO [10-10|10:23:19.939] HTTP endpoint opened                     url=http://127.0.0.1:8550/\nINFO [10-10|10:23:19.939] IPC endpoint opened                      url=/home/rogerio/.etherprivate/clef/clef.ipc\n\n------- Signer info -------\n* extapi_version : 6.1.0\n* extapi_http : http://127.0.0.1:8550/\n* extapi_ipc : /home/rogerio/.etherprivate/clef/clef.ipc\n* intapi_version : 7.0.1\n\n------- Available accounts -------\n0. 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 at keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-22-11.261468773Z-- 2db017e44b03b37755a4b15e14cd799f83de4c13\n1. 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c at keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-28-54.934614755Z-- 7a7686ad451d2865a2246e239b674aefd4c6c27c\n2. 0x1BbA02873cC1C11f369a7B692F5F3dE8Ff7bbe80 at keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-09-05T20-26-34.695386684Z-- 1bba02873cc1c11f369a7b692f5f3de8ff7bbe80\n-------- List Account request--------------\nA request has been made to list all accounts. \nYou can select which accounts the caller can see\n  [x] 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-22-11.261468773Z-- 2db017e44b03b37755a4b15e14cd799f83de4c13\n  [x] 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-28-54.934614755Z-- 7a7686ad451d2865a2246e239b674aefd4c6c27c\n  [x] 0x1BbA02873cC1C11f369a7B692F5F3dE8Ff7bbe80\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-09-05T20-26-34.695386684Z-- 1bba02873cc1c11f369a7b692f5f3de8ff7bbe80\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n-------- List Account request--------------\nA request has been made to list all accounts. \nYou can select which accounts the caller can see\n  [x] 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-22-11.261468773Z-- 2db017e44b03b37755a4b15e14cd799f83de4c13\n  [x] 0x7A7686aD451d2865A2246E239B674aeFd4c6c27c\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-04-17T12-28-54.934614755Z-- 7a7686ad451d2865a2246e239b674aefd4c6c27c\n  [x] 0x1BbA02873cC1C11f369a7B692F5F3dE8Ff7bbe80\n    URL: keystore:///home/rogerio/.etherprivate/keystore/UTC--2023-09-05T20-26-34.695386684Z-- 1bba02873cc1c11f369a7b692f5f3de8ff7bbe80\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n--------- Transaction request-------------\nto:    &lt;contact creation&gt;\nfrom:               0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 [chksum ok]\nvalue:              0 wei\ngas:                0xa1325 (660261)\ngasprice: 1000000000 wei\nnonce:    0x1b (27)\nchainid:  0x312\ndata:     0x60806040526040518060400160405280600d81526020017f48656c6c6f2c20576f726c6421000000000\n00000000000000000000000000000815250600090816200004a91906200031a565b5034801562000058576000\n80fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373fff\nfffffffffffffffffffffffffffffffffffff16021790555062000401565b600081519050919050565b7f4e48\n7b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7\nf4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000\nfd5b600060028204905060018216806200012257607f821691505b60208210810362000138576200013762000\n0da565b5b50919050565b60008190508160005260206000209050919050565b60006020601f83010490509190\n50565b600082821b905092915050565b600060088302620001a27ffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffffffffffff8262000163565b620001ae868362000163565b9550801984169350808616\n8417925050509392505050565b6000819050919050565b6000819050919050565b6000620001fb620001f5620\n001ef84620001c6565b620001d0565b620001c6565b9050919050565b6000819050919050565b620002178362\n0001da565b6200022f620002268262000202565b84845462000170565b825550505050565b600090565b62000\n24662000237565b620002538184846200020c565b505050565b5b818110156200027b576200026f6000826200\n023c565b60018101905062000259565b5050565b601f821115620002ca5762000294816200013e565b6200029\nf8462000153565b81016020851015620002af578190505b620002c7620002be8562000153565b830182620002\n58565b50505b505050565b600082821c905092915050565b6000620002ef60001984600802620002cf565b198\n0831691505092915050565b60006200030a8383620002dc565b9150826002028217905092915050565b620003\n2582620000a0565b67ffffffffffffffff811115620003415762000340620000ab565b5b6200034d825462000\n109565b6200035a8282856200027f565b600060209050601f8311600181146200039257600084156200037d57\n8287015190505b620003898582620002fc565b865550620003f9565b601f198416620003a2866200013e565b6\n0005b82811015620003cc57848901518255600182019150602085019450602081019050620003a5565b868310\n15620003ec5784890151620003e8601f891682620002dc565b8355505b6001600288020188555050505b50505\n0505050565b61078c80620004116000396000f3fe608060405234801561001057600080fd5b50600436106100\n415760003560e01c80638da5cb5b14610046578063a413686214610064578063cfae321714610080575b60008\n0fd5b61004e61009e565b60405161005b9190610241565b60405180910390f35b61007e600480360381019061\n007991906102cb565b6100c8565b005b61008861016e565b60405161009591906103a8565b60405180910390f\n35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60\n0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673fffffffffffffffffff\nfffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610158576040517f08\nc379a000000000000000000000000000000000000000000000000000000000815260040161014f90610416565\nb60405180910390fd5b818160009182610169929190610686565b505050565b60606000805461017d9061049f\n565b80601f01602080910402602001604051908101604052809291908181526020018280546101a99061049f5\n65b80156101f65780601f106101cb576101008083540402835291602001916101f6565b820191906000526020\n600020905b8154815290600101906020018083116101d957829003601f168201915b5050505050905090565b6\n00073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061022b82610200565b9050\n919050565b61023b81610220565b82525050565b60006020820190506102566000830184610232565b9291505\n0565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261028b5761028a61\n0266565b5b8235905067ffffffffffffffff8111156102a8576102a761026b565b5b602083019150836001820\n2830111156102c4576102c3610270565b5b9250929050565b600080602083850312156102e2576102e161025c\n565b5b600083013567ffffffffffffffff811115610300576102ff610261565b5b61030c85828601610275565\nb92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83\n811015610352578082015181840152602081019050610337565b60008484015250505050565b6000601f19601\nf8301169050919050565b600061037a82610318565b6103848185610323565b93506103948185602086016103\n34565b61039d8161035e565b840191505092915050565b600060208201905081810360008301526103c281846\n1036f565b905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65\n72600082015250565b6000610400602083610323565b915061040b826103ca565b602082019050919050565b6\n000602082019050818103600083015261042f816103f3565b9050919050565b600082905092915050565b7f4e\n487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5\nb7f4e487b71000000000000000000000000000000000000000000000000000000006000526022600452602460\n00fd5b600060028204905060018216806104b757607f821691505b6020821081036104ca576104c9610470565\nb5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b\n600082821b905092915050565b6000600883026105327ffffffffffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffff826104f5565b61053c86836104f5565b955080198416935080861684179250505093\n92505050565b6000819050919050565b6000819050919050565b600061058361057e61057984610554565b610\n55e565b610554565b9050919050565b6000819050919050565b61059d83610568565b6105b16105a98261058a\n565b848454610502565b825550505050565b600090565b6105c66105b9565b6105d1818484610594565b50505\n0565b5b818110156105f5576105ea6000826105be565b6001810190506105d7565b5050565b601f8211156106\n3a5761060b816104d0565b610614846104e5565b81016020851015610623578190505b61063761062f856104e\n5565b8301826105d6565b50505b505050565b600082821c905092915050565b600061065d6000198460080261\n063f565b1980831691505092915050565b6000610676838361064c565b9150826002028217905092915050565\nb6106908383610436565b67ffffffffffffffff8111156106a9576106a8610441565b5b6106b3825461049f56\n5b6106be8282856105f9565b6000601f8311600181146106ed57600084156106db578287013590505b6106e58\n58261066a565b86555061074d565b601f1984166106fb866104d0565b60005b82811015610723578489013582\n556001820191506020850194506020810190506106fe565b86831015610740578489013561073c601f8916826\n1064c565b8355505b6001600288020188555050505b5050505050505056fea264697066735822122060c20316\ne7c477c2ca67fd1e46e616c49b5bad17c117d45957f64ac13c222fc164736f6c63430008150033\n\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\n-------------------------------------------\nApprove? [y/N]:\n&gt; y\n\\#\\# Account password\n\nPlease enter the password for account 0x2db017E44b03B37755A4b15e14Cd799f83DE4c13\n&gt; \n-----------------------\nTransaction signed:\n {\n    \"type\": \"0x0\",\n    \"nonce\": \"0x1b\",\n    \"gasPrice\": \"0x3b9aca00\",\n    \"maxPriorityFeePerGas\": null,\n    \"maxFeePerGas\": null,\n    \"gas\": \"0xa1325\",\n    \"value\": \"0x0\",\n    \"input\": \"0x60806040526040518060400160405280600d81526020017f48656c6c6f2c20576f726c6421000000000\n00000000000000000000000000000815250600090816200004a91906200031a565b5034801562000058576000\n80fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373fff\nfffffffffffffffffffffffffffffffffffff16021790555062000401565b600081519050919050565b7f4e48\n7b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7\nf4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000\nfd5b600060028204905060018216806200012257607f821691505b60208210810362000138576200013762000\n0da565b5b50919050565b60008190508160005260206000209050919050565b60006020601f83010490509190\n50565b600082821b905092915050565b600060088302620001a27ffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffffffffffff8262000163565b620001ae868362000163565b9550801984169350808616\n8417925050509392505050565b6000819050919050565b6000819050919050565b6000620001fb620001f5620\n001ef84620001c6565b620001d0565b620001c6565b9050919050565b6000819050919050565b620002178362\n0001da565b6200022f620002268262000202565b84845462000170565b825550505050565b600090565b62000\n24662000237565b620002538184846200020c565b505050565b5b818110156200027b576200026f6000826200\n023c565b60018101905062000259565b5050565b601f821115620002ca5762000294816200013e565b6200029\nf8462000153565b81016020851015620002af578190505b620002c7620002be8562000153565b830182620002\n58565b50505b505050565b600082821c905092915050565b6000620002ef60001984600802620002cf565b198\n0831691505092915050565b60006200030a8383620002dc565b9150826002028217905092915050565b620003\n2582620000a0565b67ffffffffffffffff811115620003415762000340620000ab565b5b6200034d825462000\n109565b6200035a8282856200027f565b600060209050601f8311600181146200039257600084156200037d57\n8287015190505b620003898582620002fc565b865550620003f9565b601f198416620003a2866200013e565b6\n0005b82811015620003cc57848901518255600182019150602085019450602081019050620003a5565b868310\n15620003ec5784890151620003e8601f891682620002dc565b8355505b6001600288020188555050505b50505\n0505050565b61078c80620004116000396000f3fe608060405234801561001057600080fd5b50600436106100\n415760003560e01c80638da5cb5b14610046578063a413686214610064578063cfae321714610080575b60008\n0fd5b61004e61009e565b60405161005b9190610241565b60405180910390f35b61007e600480360381019061\n007991906102cb565b6100c8565b005b61008861016e565b60405161009591906103a8565b60405180910390f\n35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60\n0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673fffffffffffffffffff\nfffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610158576040517f08\nc379a000000000000000000000000000000000000000000000000000000000815260040161014f90610416565\nb60405180910390fd5b818160009182610169929190610686565b505050565b60606000805461017d9061049f\n565b80601f01602080910402602001604051908101604052809291908181526020018280546101a99061049f5\n65b80156101f65780601f106101cb576101008083540402835291602001916101f6565b820191906000526020\n600020905b8154815290600101906020018083116101d957829003601f168201915b5050505050905090565b6\n00073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061022b82610200565b9050\n919050565b61023b81610220565b82525050565b60006020820190506102566000830184610232565b9291505\n0565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261028b5761028a61\n0266565b5b8235905067ffffffffffffffff8111156102a8576102a761026b565b5b602083019150836001820\n2830111156102c4576102c3610270565b5b9250929050565b600080602083850312156102e2576102e161025c\n565b5b600083013567ffffffffffffffff811115610300576102ff610261565b5b61030c85828601610275565\nb92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83\n811015610352578082015181840152602081019050610337565b60008484015250505050565b6000601f19601\nf8301169050919050565b600061037a82610318565b6103848185610323565b93506103948185602086016103\n34565b61039d8161035e565b840191505092915050565b600060208201905081810360008301526103c281846\n1036f565b905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65\n72600082015250565b6000610400602083610323565b915061040b826103ca565b602082019050919050565b6\n000602082019050818103600083015261042f816103f3565b9050919050565b600082905092915050565b7f4e\n487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5\nb7f4e487b71000000000000000000000000000000000000000000000000000000006000526022600452602460\n00fd5b600060028204905060018216806104b757607f821691505b6020821081036104ca576104c9610470565\nb5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b\n600082821b905092915050565b6000600883026105327ffffffffffffffffffffffffffffffffffffffffffff\nfffffffffffffffffffff826104f5565b61053c86836104f5565b955080198416935080861684179250505093\n92505050565b6000819050919050565b6000819050919050565b600061058361057e61057984610554565b610\n55e565b610554565b9050919050565b6000819050919050565b61059d83610568565b6105b16105a98261058a\n565b848454610502565b825550505050565b600090565b6105c66105b9565b6105d1818484610594565b50505\n0565b5b818110156105f5576105ea6000826105be565b6001810190506105d7565b5050565b601f8211156106\n3a5761060b816104d0565b610614846104e5565b81016020851015610623578190505b61063761062f856104e\n5565b8301826105d6565b50505b505050565b600082821c905092915050565b600061065d6000198460080261\n063f565b1980831691505092915050565b6000610676838361064c565b9150826002028217905092915050565\nb6106908383610436565b67ffffffffffffffff8111156106a9576106a8610441565b5b6106b3825461049f56\n5b6106be8282856105f9565b6000601f8311600181146106ed57600084156106db578287013590505b6106e58\n58261066a565b86555061074d565b601f1984166106fb866104d0565b60005b82811015610723578489013582\n556001820191506020850194506020810190506106fe565b86831015610740578489013561073c601f8916826\n1064c565b8355505b6001600288020188555050505b5050505050505056fea264697066735822122060c20316\ne7c477c2ca67fd1e46e616c49b5bad17c117d45957f64ac13c222fc164736f6c63430008150033\",\n    \"v\": \"0x648\",\n    \"r\": \"0x6c6cdf00ca292492586372ad29ad5c2aae0194892efad2efb10ef75bf1dda9fb\",\n    \"s\": \"0x11953128d72e6bc7163eea524c0c9f7749e8ec9c5cfc97154524451d0b29f04\",\n    \"to\": null,\n    \"hash\": \"0xe32f1b83d45971309bb07e38a118561c33e51abbbc0667a51326368a79930e3b\"\n  }\nO console de execução do geth no caso do deploy aparece uma única submissão de criação do contrato.\n[.etherprivate]$ ~/go-ethereum/build/bin/geth --networkid 786 --datadir ~/.etherprivate/ --syncmode full --allow-insecure-unlock  --identity \"RAGEtherPrivate\" --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin,debug\" --keystore ~/.etherprivate/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.etherprivate/geth/jwtsecret --nodiscover --maxpeers 15 --miner.etherbase=0x2db017e44b03b37755a4b15e14cd799f83de4c13 --signer=/home/rogerio/.etherprivate/clef/clef.ipc\n...\nINFO [10-10|10:23:47.211] Submitted contract creation              hash=0xe32f1b83d45971309bb07e38a118561c33e51abbbc0667a51326368a79930e3b from=0x2db017E44b03B37755A4b15e14Cd799f83DE4c13 nonce=27 contract=0x92aB300b4C587Fb07d404f8C4263213b65c5CF45 value=0\n...\nNo console do truffle é possível interagir com o contrato criado.\n[projeto-helloworld-truffle]$ truffle console --network etherprivate\ntruffle(etherprivate)&gt; Greeter\nGreeter\n\ntruffle(etherprivate)&gt; let newInstance = await Greeter.new()\nundefined\ntruffle(etherprivate)&gt; newInstance.address\n'0xC81A295b1266ba3b9988d9B052e4df7646CCC6bc'\ntruffle(etherprivate)&gt; newInstance.greet.call()\n'Hello, World!'\ntruffle(etherprivate)&gt;",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e _Frameworks_ Ethereum: Introdução aos Testes e _Deploy_ com `Truffle`</span>"
    ]
  },
  {
    "objectID": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#leitura-recomendada",
    "href": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#leitura-recomendada",
    "title": "10  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução aos Testes e Deploy com Truffle",
    "section": "11.1 Leitura Recomendada",
    "text": "11.1 Leitura Recomendada\n\n\n\n\n\n\nLeitura Recomendada\n\n\n\nCapítulo 15: Introducing Web3\nLivro: IMRAN BASHIR. Mastering Blockchain : Distributed Ledger Technology, Decentralization, and Smart Contracts Explained, 2nd Edition.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e _Frameworks_ Ethereum: Introdução aos Testes e _Deploy_ com `Truffle`</span>"
    ]
  },
  {
    "objectID": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#referências",
    "href": "aula-10-pratica-ethereum-test-and-deploy-truffle/aula-10-pratica-ethereum-test-and-deploy-truffle.html#referências",
    "title": "10  Prática sobre Ferramentas de Desenvolvimento e Frameworks Ethereum: Introdução aos Testes e Deploy com Truffle",
    "section": "12.1 Referências",
    "text": "12.1 Referências",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Prática sobre Ferramentas de Desenvolvimento e _Frameworks_ Ethereum: Introdução aos Testes e _Deploy_ com `Truffle`</span>"
    ]
  }
]