[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tecnologias Blockchain e suas Aplicações",
    "section": "",
    "text": "Bem-vindo\nEste livro reune o material das práticas da disciplina PPGCC17 - Tópicos em Redes de Computadores e Cibersegurança, no tema Tecnologias Blockchain.",
    "crumbs": [
      "Bem-vindo"
    ]
  },
  {
    "objectID": "index.html#licença",
    "href": "index.html#licença",
    "title": "Tecnologias Blockchain e suas Aplicações",
    "section": "Licença",
    "text": "Licença\nEste material é livre para o uso e está sobre a licença Creative Commons Attribution-NonCommercial-NoDerivs 4.0.",
    "crumbs": [
      "Bem-vindo"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introdução",
    "section": "",
    "text": "Introdução geral. Etiam congue quam eget velit convallis, eu sagittis orci vestibulum. Vestibulum at massa turpis. Curabitur ornare ex sed purus vulputate, vitae porta augue rhoncus. Phasellus auctor suscipit purus, vel ultricies nunc. Nunc eleifend nulla ac purus volutpat, id fringilla felis aliquet. Duis vitae porttitor nibh, in rhoncus risus. Vestibulum a est vitae est tristique vehicula. Proin mollis justo id est tempus hendrerit. Praesent suscipit placerat congue. Aliquam eu elit gravida, consequat augue non, ultricies sapien. Nunc ultricies viverra ante, sit amet vehicula ante volutpat id. Etiam tempus purus vitae tellus mollis viverra. Donec at ornare mauris. Aliquam sodales hendrerit ornare. Suspendisse accumsan lacinia sapien, sit amet imperdiet dui molestie ut. Etiam non efficitur urna, quis elementum nisi. Mauris posuere a augue vel gravida. Praesent luctus erat et ex iaculis interdum. Nulla vestibulum quam ac nunc consequat vulputate. Nullam iaculis lobortis sem sit amet fringilla. Aliquam semper, metus ut blandit semper, nulla velit fermentum sapien, fermentum ultrices dolor sapien sed leo. Vestibulum molestie faucibus magna, at feugiat nulla ullamcorper a. Aliquam erat volutpat. Praesent scelerisque magna a justo maximus, sit amet suscipit mauris tempor. Nulla nec dolor eget ipsum pellentesque lobortis a in ipsum. Morbi turpis turpis, fringilla a eleifend maximus, viverra nec neque. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Duis urna urna, pellentesque eu urna ut, malesuada bibendum dolor. Suspendisse potenti. Vivamus ornare, arcu quis molestie ultrices, magna est accumsan augue, auctor vulputate erat quam quis neque. Nullam scelerisque odio vel ultricies facilisis. Ut porta arcu non magna sagittis lacinia. Cras ornare vulputate lectus a tristique. Pellentesque ac arcu congue, rhoncus mi id, dignissim ligula. Praesent ornare dolor turpis, sed tincidunt nisl pretium eget. Curabitur sed iaculis ex, vitae tristique sapien. Quisque nec ex dolor. Quisque ut nisl a libero egestas molestie. Nulla vel porta nulla. Phasellus id pretium arcu. Etiam sed mi pellentesque nibh scelerisque elementum sed at urna. Ut congue molestie nibh, sit amet pretium ligula consectetur eu. Integer consectetur augue justo, at placerat erat posuere at. Ut elementum urna lectus, vitae bibendum neque pulvinar quis. Suspendisse vulputate cursus eros id maximus. Duis pulvinar facilisis massa, et condimentum est viverra congue. Curabitur ornare convallis nisl. Morbi dictum scelerisque turpis quis pellentesque. Etiam lectus risus, luctus lobortis risus ut, rutrum vulputate justo. Nulla facilisi. Proin sodales neque erat, varius cursus diam tincidunt sit amet. Etiam scelerisque fringilla nisl eu venenatis. Donec sem ipsum, scelerisque ac venenatis quis, hendrerit vel mauris. Praesent semper erat sit amet purus condimentum, sit amet auctor mi feugiat. In hac habitasse platea dictumst. Nunc ac mauris in massa feugiat bibendum id in dui. Praesent accumsan urna at lacinia aliquet. Proin ultricies eu est quis pellentesque. In vel lorem at nisl rhoncus cursus eu quis mi. In eu rutrum ante, quis placerat justo. Etiam euismod nibh nibh, sed elementum nunc imperdiet in. Praesent gravida nunc vel odio lacinia, at tempus nisl placerat. Aenean id ipsum sed est sagittis hendrerit non in tortor.\nSee (knuth84?) for additional discussion of literate programming.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html",
    "title": "2  Aula 03 - Prática sobre Ethereum Virtual Machine (EVM)",
    "section": "",
    "text": "3 Prática: Explorando a Ethereum Virtual Machine (EVM)\nFaça a leitura do Capítulo 13: The Ethereum Virtual Machine\nA proposta desta prática é vermos o funcionamento da EVM.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 03 - Prática sobre _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#sec:instalando:evm",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#sec:instalando:evm",
    "title": "2  Aula 03 - Prática sobre Ethereum Virtual Machine (EVM)",
    "section": "3.1 Instalando o evm",
    "text": "3.1 Instalando o evm\nNesta etapa, você instalará o cliente padrão de camada de execução (geth) e outras ferramentas. Iremos utilizar o evm, que é uma interface por linha de comando para a Ethereum Virtual Machine. Baixe e execute o a última versão 64-bit estável do Geth and Tools para seu Sistema Operacional do site Geth downloads page. Para Linux, baixe o arquivo Geth and Tools ou escolha nas guias a versão do seu Sistema Operacional.\nO geth e as outras ferramentas podem ser instaladas em sistemas derivados do Debian e Ubuntu com o pacote ethereum:\n$ sudo apt-get install -y software-properties-common\n$ sudo add-apt-repository -y ppa:ethereum/ethereum\n$ sudo apt-get update\n$ sudo apt-get install -y ethereum\nEm outros Sistemas como o Manjaro Linux:\n$ sudo pacaur -Ss ethereum\n$ sudo pacaur -Ss go-ethereum\nextra/go-ethereum 1.14.8-1 [instalado]\n    Official Go implementation of the Ethereum protocol\n$ pacaur -S go-ethereum\natencao: go-ethereum-1.14.8-1 está atualizado -- reinstalando\nresolvendo dependencias...\nprocurando pacotes conflitantes...\n\nPacotes (1) go-ethereum-1.14.8-1\n\nTamanho total instalado:  249,48 MiB\nAlteracao no tamanho:       0,00 MiB\n\n:: Continuar a instalacao? [S/n]\nImagens docker são mantidas no DockerHub para usuários que preferem rodar em um ambiente com container. As seguintes imagens estão disponíveis com todas as ferramentas:\n\nethereum/client-go:alltools-latest última versão de desenvolvimento.\nethereum/client-go:alltools-stable última versão estável.\nethereum/client-go:alltools-{version} versão estável com número de versão específica.\nethereum/client-go:alltools-release-{version} última versão estável com um família de versões específica.\n\nInstalação via docker pode ser feita com o comando:\n$ docker pull ethereum/client-go:alltools-stable\nalltools-stable: Pulling from ethereum/client-go\n9ad3caf28a48: Pull complete \n9824c27679d3: Pull complete \nb8a14d1aed66: Pull complete \nDigest: sha256:9b722323bf4a6c147f55fb162b78f54b3a074445e658b1259dee088c382cac51\nStatus: Downloaded newer image for ethereum/client-go:alltools-stable\ndocker.io/ethereum/client-go:alltools-stable\nA execução pode ser feita com o comando docker run e os parâmetros:\n$ docker run -it -p 30303:30303 ethereum/client-go:alltools-stable\n/ # geth --version\ngeth version 1.16.2-stable-dd1ebac1\n/ # \nA imagem irá expor as seguintes portas:\n8545 TCP, usado pela API HTTP baseada em JSON RPC\n8546 TCP, usado pela API WebSocket baseada em JSON RPC\n8547 TCP, usado pela API GraphQL\n30303 TCP e UDP, usado pelo protocolo P2P para rodar a rede.\nNota: se você estiver executando um cliente dentro de um container docker, você deveria montar um volume de dados com um diretório de dados do cliente na pasta /root/.ethereum dentro do container para que ter certeza que os dados baixados serão preservados entre uma reinicialização e outra do container.\nNa minha máquina montei o diretório /run/media/rag/DADOS/ethereum no diretório virtual /root/.ethereum, as sincronizações e comandos executados na imagem docker seriam refletidos na base de dados do diretório externo.\n$ docker run -it -p 30303:30303 -v /run/media/rag/DADOS/ethereum:/root/.ethereum  -w /root/.ethereum ethereum/client-go:alltools-latest\nPara atualizar as ferramentas para a última versão, basta parar o container e fazer um pull da última versão:\n$ docker stop ethereum/client-go:alltools-stable\n$ docker pull ethereum/client-go:alltools-latest\n$ docker run -it -p 30303:30303 ethereum/client-go:alltools-latest\nExistem quatro versões diferentes via imagem docker, a última versão de desenvolvimento, a última versão estável ou versões estáveis específicas:\n\nethereum/client-go: mais recente versão de desenvolvimento (padrão).\nethereum/client-go: última versão estável.\nethereum/client-go:{version}: é a versão estável para um número de versão específico.\nethereum/client-go:release-{version}: é a última versão estável do geth para uma versão específica.\n\nA execução da última versão seria pelo comando:\n$ docker run -it -p 30303:30303 ethereum/client-go:alltools-latest\nInstruções para outros Sistemas Operacionais podem ser encontradas no site oficial da documentação do Ethereum, artigo Installing Geth.\nVerifique se a versão mais nova já não foi instalada. O link Sprouted Seed Vial (v1.16.2) lista as versões.\nNa minha máquina está instalada a versão 1.16.2-stable-dd1ebac1, você pode verificar a sua com geth --version ou geth version ou evm --version:\n$ evm --version\nevm version 1.16.2-stable-dd1ebac1\n$ geth --version\ngeth version 1.16.2-stable-dd1ebac1\n$ geth version\nGeth\nVersion: 1.16.2-stable\nGit Commit: dd1ebac11757484575ee779381af32f29ce3fbe4\nGit Commit Date: 20250804\nArchitecture: amd64\nGo Version: go1.24.5\nOperating System: linux\nGOPATH=\nGOROOT=\n$ \nPara a execução de uma versão específica como a 1.14.12, versão instalada no laboratório, utilize o comando docker, substituindo em {version} com v1.14.12:\n$ docker run -it -p 30303:30303 ethereum/client-go:alltools-v1.14.12\nPara que a evm tenha suporte aos opcodes da versão Shangai. Crie um arquivo genesis.json com o conteúdo:\n{\n  \"config\": {\n    \"chainId\": 9599,\n    \"homesteadBlock\": 0,\n    \"eip150Block\": 0,\n    \"eip155Block\": 0,\n    \"eip158Block\": 0,\n    \"byzantiumBlock\": 0,\n    \"constantinopleBlock\": 0,\n    \"petersburgBlock\": 0,\n    \"istanbulBlock\": 0,\n    \"berlinBlock\": 0,\n    \"londonBlock\": 0,\n    \"shanghaiBlock\": 0,\n    \"shanghaiTime\":0\n  },\n  \"alloc\": {\n    \"0x1c7cd2d37ffd63856a5bd56a9af1643f2bcf545f\": {\n      \"balance\": \"0xffffffffffffffffffffffffffffffffffffffff\"\n    }\n  },\n  \"coinbase\": \"0x000000000000000000000000000000000000abcd\",\n  \"difficulty\": \"0x0\",\n  \"extraData\": \"\",\n  \"gasLimit\": \"0xffffff\",\n  \"nonce\": \"0x0000000000000042\",\n  \"mixhash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n  \"parentHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n  \"timestamp\": \"0x00\"\n}",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 03 - Prática sobre _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#atividade-1-somando-dois-valores-na-pilha-da-evm",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#atividade-1-somando-dois-valores-na-pilha-da-evm",
    "title": "2  Aula 03 - Prática sobre Ethereum Virtual Machine (EVM)",
    "section": "3.2 Atividade 1: Somando dois valores na Pilha da EVM",
    "text": "3.2 Atividade 1: Somando dois valores na Pilha da EVM\n\nCrie um arquivo exemplo-001.asm com as instruções:\n\nPUSH 0x01\nPUSH 0x02\nADD\nSTOP\nO exemplod e código empilha dos valores \\(1\\) e \\(2\\) e faz um ADD, deixando o valor \\(3\\) no topo da pilha.\n\nExecute o comando:\n\n$ evm --debug --gas 0xffffff --nomemory=false --input 9ceee80c --prestate ./genesis.json run exemplo-001.asm\nSerá produzido um resultado semelhante a esse:\nINFO [08-29|14:46:00.855] Persisted trie from memory database      nodes=1 size=160.00B time=\"3.352us\" gcnodes=0 gcsize=0.00B gctime=0s livenodes=0 livesize=0.00B\n\n#\\#\\#\\# TRACE \\#\\#\\#\\#\nPUSH1           pc=00000000 gas=16777215 cost=3\n\nPUSH1           pc=00000002 gas=16777212 cost=3\nStack:\n00000000  0x1\n\nADD             pc=00000004 gas=16777209 cost=3\nStack:\n00000000  0x2\n00000001  0x1\n\nSTOP            pc=00000005 gas=16777206 cost=0\nStack:\n00000000  0x3\n\n#\\#\\#\\# LOGS \\#\\#\\#\\#\nNote o conteúdo da Pilha (Stack) sendo modificado com a inserção dos valores \\(0x01\\) e \\(0x02\\) e finalizando com a soma \\(0x03\\).\nUma outra forma de executar é compilando o código:\n$ evm compile exemplo-001.asm \n600160020100\nE executando o binário passado diretamente por parâmetro na opção --code 600160020100.\n$ evm --debug --gas 0xffffff --nomemory=false --input 9ceee80c --prestate ./genesis.json run --code 600160020100\nTemos o mesmo resultado:\nINFO [08-29|15:17:42.526] Persisted trie from memory database      nodes=1 size=160.00B time=\"4.26us\" gcnodes=0 gcsize=0.00B gctime=0s livenodes=0 livesize=0.00B\n\n#\\#\\#\\# TRACE \\#\\#\\#\\#\nPUSH1           pc=00000000 gas=16777215 cost=3\n\nPUSH1           pc=00000002 gas=16777212 cost=3\nStack:\n00000000  0x1\n\nADD             pc=00000004 gas=16777209 cost=3\nStack:\n00000000  0x2\n00000001  0x1\n\nSTOP            pc=00000005 gas=16777206 cost=0\nStack:\n00000000  0x3\n\n#\\#\\#\\# LOGS \\#\\#\\#\\#\n$",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 03 - Prática sobre _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#atividade-2-executando-código-de-um-contrato",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#atividade-2-executando-código-de-um-contrato",
    "title": "2  Aula 03 - Prática sobre Ethereum Virtual Machine (EVM)",
    "section": "3.3 Atividade 2: Executando código de um contrato",
    "text": "3.3 Atividade 2: Executando código de um contrato\nIremos baixar e executar o código de um contrato. Para isso precisaremos recuperar o bytecode de um contrato. Acesse os detalhes da transação 0x8b42fe608875d106ca3a010766c53a449da92076e 2e46e38861090f508cf1504 no etherscan.io.\n\n\n\nDetalhes da Transação\n\n\nCopie o código binário do contrato (0x353755fa4c3d8e73ca5190d86894866e9bd6abb8) armazenado, conteúdo do campo Input Data para o arquivo transacao-0x8b42fe608875d106ca3a010766c53a449da9207 6e2e46e38861090f508cf1504-contrato-0x353755fa4c3d8e73ca5190d86894866e9bd6abb8.bin.\nExecute a evm com o código do contrato 0x353755fa4c3d8e73ca5190d86894866e9bd6abb8 passando o arquivo com o código binário através da opção --codefile.\nevm --debug --gas 0xffffff --nomemory=false --input 9ceee80c --prestate ./genesis.json run --codefile transacao-0x8b42fe608875d106ca3a010766c53a449da92076e2e46e38861090f508cf1504-contrato- 0x353755fa4c3d8e73ca5190d86894866e9bd6abb8.bin\nObserve as alterações do conteúdo de cada estrutura.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 03 - Prática sobre _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#atividade-3-outras-operações",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#atividade-3-outras-operações",
    "title": "2  Aula 03 - Prática sobre Ethereum Virtual Machine (EVM)",
    "section": "3.4 Atividade 3: Outras Operações",
    "text": "3.4 Atividade 3: Outras Operações\nUtilize a referência de comandos da EVM para estender o exemplo-001.asm da Atividade \\(1\\) com operações de escrita e leitura em memória, no storage e outras operações lógicas e aritméticas.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 03 - Prática sobre _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#relatório",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#relatório",
    "title": "2  Aula 03 - Prática sobre Ethereum Virtual Machine (EVM)",
    "section": "3.5 Relatório",
    "text": "3.5 Relatório\nEscreva um relatório sobre a Prática. Formato: Um arquivo PDF com sua identificação.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 03 - Prática sobre _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#leitura-recomendada",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#leitura-recomendada",
    "title": "2  Aula 03 - Prática sobre Ethereum Virtual Machine (EVM)",
    "section": "3.6 Leitura Recomendada",
    "text": "3.6 Leitura Recomendada\n[alertblock]{Leitura Recomendada}\nCapítulo 13: The Ethereum Virtual Machine\nLivro: Antonopoulos, A. M., and G. Wood. 2018. Mastering Ethereum: Building Smart Contracts and DApps. O’Reilly Media, Incorporated.\n[/alertblock]",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 03 - Prática sobre _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#próximas-aulas",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#próximas-aulas",
    "title": "2  Aula 03 - Prática sobre Ethereum Virtual Machine (EVM)",
    "section": "3.7 Próximas Aulas",
    "text": "3.7 Próximas Aulas\n\nInstalando o Cliente Ethereum: Geth.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 03 - Prática sobre _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#word-cloud",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#word-cloud",
    "title": "2  Aula 03 - Prática sobre Ethereum Virtual Machine (EVM)",
    "section": "3.8 Word Cloud",
    "text": "3.8 Word Cloud",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 03 - Prática sobre _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#sec-vet-consid-finais",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#sec-vet-consid-finais",
    "title": "2  Aula 03 - Prática sobre Ethereum Virtual Machine (EVM)",
    "section": "3.9 Considerações Finais",
    "text": "3.9 Considerações Finais",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 03 - Prática sobre _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#referências",
    "href": "aula-03-pratica-ethereum-virtual-machine/aula-03-pratica-ethereum-virtual-machine.html#referências",
    "title": "2  Aula 03 - Prática sobre Ethereum Virtual Machine (EVM)",
    "section": "3.10 Referências",
    "text": "3.10 Referências",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aula 03 - Prática sobre _Ethereum Virtual Machine (EVM)_</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "",
    "text": "4 Introdução",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#introdução-1",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#introdução-1",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "4.1 Introdução",
    "text": "4.1 Introdução\nComo o desenvolvimento da Ethereum está em constante evolução, existem muitos componentes, clientes, e ferramentas que foram desenvolvidas e introduzidas nos últimos anos. Carteiras (wallets) e clientes de software.\nWallets são programas que podem armazenar as chaves privadas e baseado nos endereços armazenados podem calcular o saldo (balance) de ether associado a esses endereços, consultando a blockchain. O saldo pode ser utilizado para fazer o deploy de contratos inteligentes.\nClientes são softwares que acessam a rede, podendo fazer sincronizações e interagir com a rede:\n\nGeth: É a implementação oficial do Ethereum Client na linguagem Go. É um cliente de execução Ethereum, capaz de lidar com transações, implantação e execução de contratos inteligentes e traz uma máquina virtual embutida conhecida como Ethereum Virtual Machine (EVM). Ao executar o clietne Geth junto com um cliente de consenso transforma um computador em um nó da rede Ethereum. A última versão está disponível em https://geth.ethereum.org/downloads/.\nNethermind: É uma implementação feita em .NET que roda em GNU/Linux, Windows e macOS. Suporta Clique, Aura, e Ethash. Com boa velocidade de sincronização e suporte para plugins externos, ele fornece acesso confiável a dados on-chain por uma interface JSON-RPC e monitoramento de integridade de nós com Grafana e Seq. Detalhes de Instalação em https://docs.nethermind.io/get-started/installing-nethermind.\nErigon: É um fork do Geth, que tem sido reescrito com foco em velocidade e para poupar armazenamento. O cliente Erigon pode completar a sincronização em modo full archive em menos do que três dias e ocupando menos que \\(2TB\\) de armazenamento. Suporta várias blockchains compatíveis com EVM e testnets. Disponível em https://erigon.gitbook.io/erigon\nBesu: Hyperledger Besu é um cliente Ethereum projetado para ser amigável a empresas para casos de uso de rede pública e privada permissionada. Ele também pode ser executado com redes de teste como Sepolia e Görli. O Hyperledger Besu inclui vários algoritmos de consenso, incluindo Proof of Stake, Proof of Work e Proof of Authority (IBFT 2.0, QBFT e Clique). Disponível em https://besu.hyperledger.org/private-networks/get-started/install.\nEth: Implementação do Ethereum Client em C++. O Eth está disponível no repositório do GitHub: https://github.com/ethereum/aleth.\nParity: Esta implementação é feita usando Rust e desenvolvida pela Parity Technologies. Parity pode ser baixada do link: https://www.parity.io/. Note que Parity tornou-se o OpenEthereum.\nOpenEthereum: O cliente OpenEthereum está descontinuado desde \\(2022\\).\nTrinity: Trinity é a implementação do protocolo Ethereum, escrito em Python. Trinity pode ser baixada do link https://github.com/ethereum/trinity. O site oficial é https://trinity.ethereum.org. Descontinuado, github apresenta a mensagem “This repository has been archived by the owner on Jul 1, 2021. It is now read-only.”\n\nA Figura 4.1 apresenta os percentuais de domínio dos clientes em uso, sendo sincronizados com a rede.\n\n\n\n\n\n\nFigure 4.1: Percentual de Clientes em 03/09/2024. Fonte: ethernodes\n\n\n\nDiagramas atualizados podem ser vistos no ethernodes.org e no clientdiversity.org. E alguma documentação de como migrar de um clinte para outro pode ser encontrada no link.\nLight clients são clientes Simple Payment Verification (SPV), fazem download somente de uma pequena parte do blockchain. Isto permite dispositivos com recursos limitados, tais como dispositivos móveis, dispositivos embarcados, tablets ou dispositivos capazes de verificar transações.\nUma cópia completa da blockchain da Ethereum não é necessária para esses SPV clients, que também podem validar transações.\nA diferença entre clients e wallets é que clientes são implementações completas do protocolo Ethereum, que suportam mineração e gerenciamento de contas e funções de wallets.\nCarteiras somente armazenam as chaves públicas e privadas para fornecer gerenciamento essential de contas e interagem com o blockchain para propósitos de pagamentos, transferências de fundos.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#sec:instalando:geth",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#sec:instalando:geth",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "5.1 Instalando o Geth",
    "text": "5.1 Instalando o Geth\nNesta etapa, você instalará o cliente padrão de camada de execução (geth) e outras ferramentas. Baixe e execute o a última versão 64-bit estável do Geth installer para seu Sistema Operacional do site Geth downloads page. Ou baixe e execute o a última versão 64-bit estável do Geth and Tools para seu Sistema Operacional do site Geth downloads page. Para Linux, baixe o arquivo Geth and Tools ou escolha nas guias a versão do seu Sistema Operacional.\nO geth e as outras ferramentas podem ser instaladas em sistemas derivados do Debian e Ubuntu com o pacote ethereum:\nO geth pode ser instalado em sistemas derivados do Debian e Ubuntu com o pacote ethereum:\n$ sudo apt-get install -y software-properties-common\n$ sudo add-apt-repository -y ppa:ethereum/ethereum\n$ sudo apt-get update\n$ sudo apt-get install -y ethereum\nEm outros Sistemas como o Manjaro Linux:\n$ sudo pacaur -Ss ethereum\n$ sudo pacaur -Ss go-ethereum\nextra/go-ethereum 1.14.8-1 [instalado]\n    Official Go implementation of the Ethereum protocol\n$ pacaur -S go-ethereum\natencao: go-ethereum-1.14.8-1 está atualizado -- reinstalando\nresolvendo dependencias...\nprocurando pacotes conflitantes...\n\nPacotes (1) go-ethereum-1.14.8-1\n\nTamanho total instalado:  249,48 MiB\nAlteracao no tamanho:       0,00 MiB\n\n:: Continuar a instalacao? [S/n]\nImagens docker são mantidas no DockerHub para usuários que preferem rodar em um ambiente com container. As seguintes imagens estão disponíveis com todas as ferramentas:\nethereum/client-go:alltools-latest última versão de desenvolvimento.\nethereum/client-go:alltools-stable última versão estável.\nethereum/client-go:alltools-{version} versão estável com número de versão específica.\nethereum/client-go:alltools-release-{version} última versão estável com um família de versões específica.\nInstalação via docker pode ser feita com os comandos:\n$ docker pull ethereum/client-go:alltools-stable\n$ docker run -it -p 30303:30303 ethereum/client-go:alltools-stable\nA imagem irá expor as seguintes portas:\n8545 TCP, usado pela API HTTP baseada em JSON RPC\n8546 TCP, usado pela API WebSocket baseada em JSON RPC\n8547 TCP, usado pela API GraphQL\n30303 TCP e UDP, usado pelo protocolo P2P para rodar a rede.\nNota: se você estiver executando um cliente dentro de um container docker, você deveria montar um volume de dados com um diretório de dados do cliente na pasta /root/.ethereum dentro do container para que ter certeza que os dados baixados serão preservados entre uma reinicialização e outra do container.\nNa minha máquina montaria o diretório /run/media/rogerio/DADOS/ethereum no diretório virtual /root/.ethereum, as sincronizações e comandos executados na imagem docker seriam refletidos na base de dados do diretório externo.\n$ docker run -it -p 30303:30303 -v /run/media/rogerio/DADOS/ethereum:/root/.ethereum  -w /root/.ethereum ethereum/client-go:alltools-latest\nPara atualizar as ferramentas para a última versão, basta parar o container e fazer um pull da última versão:\n$ docker stop ethereum/client-go:alltools-stable\n$ docker pull ethereum/client-go:alltools-latest\n$ docker run -it -p 30303:30303 ethereum/client-go:alltools-latest\nA execução da última versão seria pelo comando:\n$ docker run -it -p 30303:30303 ethereum/client-go:alltools-latest\nInstruções para outros Sistemas Operacionais podem ser encontradas no site oficial da documentação do Ethereum, artigo Installing Geth.\nVerifique se a versão mais nova já não foi instalada. O link Rayingri (v1.14.8) lista as versões.\nNa minha máquina está instalada a versão 1.14.8-stable-a9523b64, você pode verificar a sua com geth --version ou geth version ou evm --version:\n$ evm --version\nevm version 1.14.8-stable-a9523b64\n$ geth --version\ngeth version 1.14.8-stable-a9523b64\n$ geth version\nGeth\nVersion: 1.14.8-stable\nGit Commit: a9523b6428238a762e1a1e55e46ead47630c3a23\nGit Commit Date: 20240812\nArchitecture: amd64\nGo Version: go1.22.6\nOperating System: linux\nGOPATH=\nGOROOT=\n$",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-o-geth",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-o-geth",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "5.2 Executando o Geth",
    "text": "5.2 Executando o Geth\nExecutando o Geth diretamente ele irá sincronizar com a rede principal do Ethereum, a mainnet. Os dados serão sincronizados com o diretório do Ethereum que será criado em:\n\n~/.ethereum no GNU/Linux\n~/Library/Ethereum no OS X\n~/AppData/Roaming/Ethereum no Windows\n\nNestes diretórios:\n\n.ethereum/geth/chaindata/: blockchain da rede principal.\n.ethereum/sepolia/geth/chaindata: blockchain da rede de teste Sepolia.\nkeystore: Chaves das contas criadas.\n\n[rag@nitro-ryzen ~]$ geth\nINFO [10-20|21:07:12.911] Starting Geth on Ethereum mainnet... \nINFO [10-20|21:07:12.912] Bumping default cache on mainnet         provided=1024 updated=4096\nINFO [10-20|21:07:12.914] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [10-20|21:07:12.915] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [10-20|21:07:12.920] Set global gas cap                       cap=50,000,000\nINFO [10-20|21:07:12.922] Allocated trie memory caches             clean=614.00MiB dirty=1024.00MiB\nINFO [10-20|21:07:12.923] Allocated cache and file handles         database=/home/rag/.ethereum/geth/chaindata cache=2.00GiB handles=262,144\nINFO [10-20|21:07:12.946] Opened ancient database                  database=/home/rag/.ethereum/geth/chaindata/ancient/chain readonly=false\nINFO [10-20|21:07:12.950]  \nINFO [10-20|21:07:12.950] -----------------------------------------------------------------------------------\nINFO [10-20|21:07:12.950] Chain ID:  1 (mainnet) \nINFO [10-20|21:07:12.950] Consensus: Beacon (proof-of-stake), merged from Ethash (proof-of-work) \nINFO [10-20|21:07:12.950]  \nINFO [10-20|21:07:12.950] Pre-Merge hard forks: \nINFO [10-20|21:07:12.950]  - Homestead:                   1150000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/homestead.md) \nINFO [10-20|21:07:12.950]  - DAO Fork:                    1920000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/dao-fork.md) \nINFO [10-20|21:07:12.950]  - Tangerine Whistle (EIP 150): 2463000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/tangerine-whistle.md) \nINFO [10-20|21:07:12.950]  - Spurious Dragon/1 (EIP 155): 2675000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/spurious-dragon.md) \nINFO [10-20|21:07:12.950]  - Spurious Dragon/2 (EIP 158): 2675000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/spurious-dragon.md) \nINFO [10-20|21:07:12.950]  - Byzantium:                   4370000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/byzantium.md) \nINFO [10-20|21:07:12.950]  - Constantinople:              7280000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/constantinople.md) \nINFO [10-20|21:07:12.950]  - Petersburg:                  7280000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/petersburg.md) \nINFO [10-20|21:07:12.950]  - Istanbul:                    9069000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/istanbul.md) \nINFO [10-20|21:07:12.950]  - Muir Glacier:                9200000  (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/muir-glacier.md) \nINFO [10-20|21:07:12.950]  - Berlin:                      12244000 (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/berlin.md) \nINFO [10-20|21:07:12.950]  - London:                      12965000 (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/london.md) \nINFO [10-20|21:07:12.950]  - Arrow Glacier:               13773000 (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/arrow-glacier.md) \nINFO [10-20|21:07:12.950]  - Gray Glacier:                15050000 (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/gray-glacier.md) \nINFO [10-20|21:07:12.950]  \nINFO [10-20|21:07:12.950] Merge configured: \nINFO [10-20|21:07:12.950]  - Hard-fork specification:    https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/paris.md \nINFO [10-20|21:07:12.950]  - Network known to be merged: true \nINFO [10-20|21:07:12.950]  - Total terminal difficulty:  58750000000000000000000 \nINFO [10-20|21:07:12.950]  - Merge netsplit block:       &lt;nil&gt; \nINFO [10-20|21:07:12.950] --------------------------------------------------------------------------------------\nINFO [10-20|21:07:12.950]  \nINFO [10-20|21:07:12.952] Disk storage enabled for ethash caches   dir=/home/rag/.ethereum/geth/ethash count=3\nINFO [10-20|21:07:12.952] Disk storage enabled for ethash DAGs     dir=/home/rag/.ethash               count=2\nINFO [10-20|21:07:12.952] Initialising Ethereum protocol           network=1 dbversion=8\nINFO [10-20|21:07:12.963] Loaded most recent local header          number=0 hash=d4e567..cb8fa3 td=17,179,869,184 age=53y6mo3w\nINFO [10-20|21:07:12.963] Loaded most recent local full block      number=0 hash=d4e567..cb8fa3 td=17,179,869,184 age=53y6mo3w\nINFO [10-20|21:07:12.963] Loaded most recent local fast block      number=0 hash=d4e567..cb8fa3 td=17,179,869,184 age=53y6mo3w\nINFO [10-20|21:07:12.964] Loaded local transaction journal         transactions=0 dropped=0\nINFO [10-20|21:07:12.964] Regenerated local transaction journal    transactions=0 accounts=0\nINFO [10-20|21:07:12.965] Chain post-merge, sync via beacon client \nINFO [10-20|21:07:12.965] Gasprice oracle is ignoring threshold set threshold=2\nWARN [10-20|21:07:12.965] Engine API enabled                       protocol=eth\nINFO [10-20|21:07:12.966] Starting peer-to-peer node               instance=Geth/v1.10.25-stable-69568c55/linux-amd64/go1.19.1\nINFO [10-20|21:07:12.991] New local node record                    seq=1,665,519,113,919 id=da440578e33a2ce7 ip=127.0.0.1 udp=30303 tcp=30303\nINFO [10-20|21:07:12.992] Started P2P networking                   self=enode://9ae8fcdad4a7243d1bd2308a159c5800ec170e588862be110152627c9ed3fa67376ef8c75 26d7a56e9bb72da729cf792c7bef86c095471995cc352f9e353acfc@127.0.0.1:30303\nINFO [10-20|21:07:12.993] IPC endpoint opened                      url=/home/rag/.ethereum/geth.ipc\nINFO [10-20|21:07:12.993] Loaded JWT secret file                   path=/home/rag/.ethereum/geth/jwtsecret crc32=0xdeccafe4\nINFO [10-20|21:07:12.994] WebSocket enabled                        url=ws://127.0.0.1:8551\nINFO [10-20|21:07:12.994] HTTP server started                      endpoint=127.0.0.1:8551 auth=true prefix= cors=localhost vhosts=localhost\nINFO [10-20|21:07:16.251] New local node record                    seq=1,665,519,113,920 id=da440578e33a2ce7 ip=187.95.110.26 udp=2770  tcp=30303\nINFO [10-20|21:07:22.992] Looking for peers                        peercount=0 tried=2 static=0\nINFO [10-20|21:07:32.994] Looking for peers                        peercount=0 tried=3 static=0\nINFO [10-20|21:07:43.205] Looking for peers                        peercount=0 tried=9 static=0\nWARN [10-20|21:07:47.967] Post-merge network, but no beacon client seen. Please launch one to follow the chain! \nINFO [10-20|21:07:53.281] Looking for peers                        peercount=0 tried=13 static=0\nINFO [10-20|21:08:03.346] Looking for peers                        peercount=0 tried=9  static=0\nO que vai levar um certo tempo para fazer toda a sincronização da rede completa.\nHoje, \\(03/09/2024\\) o tamanho da blockchain está em \\(1147.97 GB\\).",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#redes-de-teste",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#redes-de-teste",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "5.3 Redes de Teste",
    "text": "5.3 Redes de Teste\nVimos as redes Ethereum disponíveis, uma lista completa pode ser encontrada em https://ethereum.org/en/developers/docs/networks/.\nA evolução das Redes de Teste pode ser vista nesse artigo The Evolution of Ethereum Testnets.\n\n\n\nRede\nId\nParâmetro\nDescrição\nRecursos\n\n\n\n\nMainnet\n\\(1\\)\n--mainnet\nRede principal, rede de produção. Quando as pessoas e as bolsas discutem os preços da ETH, estão falando sobre a Mainnet ETH. \n\n\n\ntestnet\n\n--testnet\nHá algumas versões anteriores, para acessar as redes de teste deveríamos utilizar parâmetro --testnet e fornecer o nome da rede, como --testnet rinkeby, por padrão era a rede ropsten. Nas versões mais atuais estão previstos parâmetros específicos para cada uma das redes.\n\n\n\nropsten\n\n--ropsten\nRopsten network: pré-configurada Proof-of-Work test network \n\n\n\nrinkeby\n\n--rinkeby\nRinkeby network: pré-configurada Proof-of-Authority test network\n\n\n\ngoerli\n\\(5\\)\n--goerli\nGörli network: pré-configurada Proof-of-Authority test network. Goerli testnet será descontinuada e substituída pela Holesovice em 2023. Please consider migrating your applications to Sepolia.\nWebsite GitHub Etherscan\n\n\nkiln\n\\(1337802\\)\n--kiln\nKiln network: pré-configurada proof-of-work to proof-of-stake test network\n\n\n\nSepolia\n\\(11155111\\)\n--sepolia\nSepolia network: pré-configurada proof-of-authority test network. Criado em outubro de 2021 pelo desenvolvedores do core do Ethereum e mantida desde então. Depois que a rede Ropsten atingiu uma dificuldade total de terminal (TTD) de 5000000000000000, as redes de teste Sepolia e Goerli fizeram a transição para um mecanismo de consenso proof-of-stake para imitar a rede principal Ethereum.\nWebsite GitHub Otterscan Etherscan\n\n\n\nA Figura \\(\\ref{fig:redes:testes}\\) apresenta um resumo no formato de timeline das redes de testes.\n\n\n\nTimeline das Redes de Teste Fonte: Etherwold",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-o-geth-com-uma-rede-de-teste",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-o-geth-com-uma-rede-de-teste",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "5.4 Executando o Geth com uma Rede de Teste",
    "text": "5.4 Executando o Geth com uma Rede de Teste\nAo executar o geth com algum das redes de teste será criado um diretório dentro do diretório padrão ~/.ethereum/ para cada rede de teste. Por exemplo, ~/.ethereum/goerli para --goerli e ~/.ethereum/sepolia para o --sepolia.\nIremos executar o cliente com a rede Sepolia que é recomendada como testnet padrão, uma vez que Goerli será descontinuada em \\(2023\\), sendo substituída pela Holesovice. É recomendado migrar sua aplicação para Sepolia.\nA rede Sepolia usa um conjunto validador permissionado. É uma rede nova, o que significa que seu estado e seu histórico são pequenos, o que deixa sua sincronização mais rápida e exige menos armazenamento. Características importantes para usuários que querem rapidamente montar um nó da rede e interagir com a rede diretamente.\n[rogerio@ryzen-nitro execution]$ geth --sepolia --syncmode full --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin\" --keystore ~/.ethereum/sepolia/keystore\nINFO [04-16|21:27:45.640] Starting Geth on Sepolia testnet... \nINFO [04-16|21:27:45.641] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [04-16|21:27:45.643] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [04-16|21:27:45.646] Set global gas cap                       cap=50,000,000\nINFO [04-16|21:27:45.649] Allocated trie memory caches             clean=154.00MiB dirty=256.00MiB\nINFO [04-16|21:27:45.649] Using leveldb as the backing database \nINFO [04-16|21:27:45.649] Allocated cache and file handles         database=/home/rogerio/.ethereum/sepolia/geth/chaindata cache=512.00MiB handles=262,144\nINFO [04-16|21:27:45.660] Using LevelDB as the backing database \nINFO [04-16|21:27:45.663] Opened ancient database                  database=/home/rogerio/.ethereum/sepolia/geth/chaindata/ancient/chain readonly=false\nINFO [04-16|21:27:45.664] Disk storage enabled for ethash caches   dir=/home/rogerio/.ethereum/sepolia/geth/ethash count=3\nINFO [04-16|21:27:45.664] Disk storage enabled for ethash DAGs     dir=/home/rogerio/.ethash count=2\nINFO [04-16|21:27:45.664] Initialising Ethereum protocol           network=11,155,111 dbversion=8\nINFO [04-16|21:27:45.667]  \nINFO [04-16|21:27:45.667] ------------------------------------------------------------------------------------ \nINFO [04-16|21:27:45.667] Chain ID:  11155111 (sepolia) \nINFO [04-16|21:27:45.667] Consensus: Beacon (proof-of-stake), merged from Ethash (proof-of-work) \nINFO [04-16|21:27:45.667]  \nINFO [04-16|21:27:45.667] Pre-Merge hard forks (block based): \nINFO [04-16|21:27:45.667]  - Homestead:                   #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/homestead.md) \nINFO [04-16|21:27:45.667]  - Tangerine Whistle (EIP 150): #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/tangerine-whistle.md) \nINFO [04-16|21:27:45.667]  - Spurious Dragon/1 (EIP 155): #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/spurious-dragon.md) \nINFO [04-16|21:27:45.667]  - Spurious Dragon/2 (EIP 158): #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/spurious-dragon.md) \nINFO [04-16|21:27:45.667]  - Byzantium:                   #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/byzantium.md) \nINFO [04-16|21:27:45.667]  - Constantinople:              #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/constantinople.md) \nINFO [04-16|21:27:45.667]  - Petersburg:                  #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/petersburg.md) \nINFO [04-16|21:27:45.667]  - Istanbul:                    #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/istanbul.md) \nINFO [04-16|21:27:45.667]  - Muir Glacier:                #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/muir-glacier.md) \nINFO [04-16|21:27:45.667]  - Berlin:                      #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/berlin.md) \nINFO [04-16|21:27:45.667]  - London:                      #0        (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/london.md) \nINFO [04-16|21:27:45.667]  \nINFO [04-16|21:27:45.667] Merge configured: \nINFO [04-16|21:27:45.667]  - Hard-fork specification:    https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/paris.md \nINFO [04-16|21:27:45.667]  - Network known to be merged: true \nINFO [04-16|21:27:45.667]  - Total terminal difficulty:  17000000000000000 \nINFO [04-16|21:27:45.667]  - Merge netsplit block:       #1735371  \nINFO [04-16|21:27:45.667]  \nINFO [04-16|21:27:45.667] Post-Merge hard forks (timestamp based): \nINFO [04-16|21:27:45.667]  - Shanghai:                    @1677557088 (https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet- upgrades/shanghai.md) \nINFO [04-16|21:27:45.667]  \nINFO [04-16|21:27:45.667] ------------------------------------------------------------------------------------\nINFO [04-16|21:27:45.667]  \nINFO [04-16|21:27:45.668] Loaded most recent local block           number=0 hash=25a5cc..3e6dd9 td=131,072 age=1y6mo2w\nINFO [04-16|21:27:45.668] Loaded local transaction journal         transactions=0 dropped=0\nINFO [04-16|21:27:45.668] Regenerated local transaction journal    transactions=0 accounts=0\nINFO [04-16|21:27:45.668] Chain post-merge, sync via beacon client \nINFO [04-16|21:27:45.669] Gasprice oracle is ignoring threshold set threshold=2\nWARN [04-16|21:27:45.669] Engine API enabled                       protocol=eth\nINFO [04-16|21:27:45.670] Starting peer-to-peer node               instance=Geth/v1.11.5-stable-a38f4108/linux-amd64/go1.20.2\nINFO [04-16|21:27:45.681] New local node record                    seq=1,681,600,532,512 id=05b2a1f369961544 ip=127.0.0.1 udp=30303 tcp=30303\nINFO [04-16|21:27:45.682] Started P2P networking                   self=enode://69520d55cffdc600a5a46f15c8255ad6831dbe9cb11f73b6aef0847a5e048b99043950dae de9c4a374a37c7b93e57dc1b1d936f9946e1a98cde26b3e1e53f58c@127.0.0.1:30303\nINFO [04-16|21:27:45.682] IPC endpoint opened                      url=/home/rogerio/.ethereum/sepolia/geth.ipc\nINFO [04-16|21:27:45.683] Loaded JWT secret file                   path=/home/rogerio/.ethereum/sepolia/geth/jwtsecret crc32=0xa99ff4fd\nINFO [04-16|21:27:45.683] HTTP server started                      endpoint=127.0.0.1:8559 auth=false prefix= cors= vhosts=localhost\nINFO [04-16|21:27:45.686] WebSocket enabled                        url=ws://127.0.0.1:8551\nINFO [04-16|21:27:45.686] HTTP server started                      endpoint=127.0.0.1:8551 auth=true  prefix= cors=localhost vhosts=localhost\nWARN [04-16|21:27:55.489] System clock seems off by -25.06956443s, which can prevent network connectivity \nWARN [04-16|21:27:55.490] Please enable network time synchronisation in system settings. \nWARN [04-16|21:28:20.672] Post-merge network, but no beacon client seen. Please launch one to follow the chain! \nNote que está sendo gerada uma mensagem de aviso:\nWARN [04-16|21:28:20.672] Post-merge network, but no beacon client seen. Please launch one to follow the chain!\nPesquisando na Internet por “Post-merge network, but no beacon client seen. Please launch one to follow the chain!”, encontramos essa solução: Github:go-ethereum, issue-25791.\nA documentação do Ethereum sobre Consensus Clients, mostra que geth deve ser iniciado, com conexão RPC autenticada usando um arquivo jwtsecret. Por padrão esse arquivo está em ~/.ethereum/geth/jwtsecret. Para as redes de teste o caminho terá o diretório da respectiva rede, como por exemplo ~/.ethereum/sepolia/geth/jwtsecret para a rede Sepolia.\n[rogerio@ryzen-nitro execution]$ geth --sepolia --syncmode full --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin\" --keystore ~/.ethereum/sepolia/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.ethereum/sepolia/geth/jwtsecret\nINFO [04-16|21:27:45.640] Starting Geth on Sepolia testnet... \n\nNote que estou executando na rede de testes --sepolia, opção na minha versão do geth é diferente do livro. No livro ele diz para usar o parâmetro --testnet que por padrão usa a rede de testes Ropsten, indicando --testnet sepolia. Na minha instalação não suporta mais o parâmetro --testnet, tem o --mainnet e cada rede de teste disponível tem o seu parâmetro correspondente, como --sepolia.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#criando-contas-na-rede",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#criando-contas-na-rede",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "5.5 Criando Contas na Rede",
    "text": "5.5 Criando Contas na Rede\nO comando geth account new cria uma nova conta na rede principal. Indicaremos que a conta é para ser criada na rede de teste --sepolia.\n[rogerio@ryzen-nitro execution]$ geth --sepolia account new\nINFO [04-16|21:50:49.343] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [04-16|21:50:49.344] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nYour new account is locked with a password. Please give a password. Do not forget this password.\nPassword: \nRepeat password: \n\nYour new key was generated\n\nPublic address of the key:   0xa9e98368B44b371ceC7d205F9fE2b074b6134C95\nPath of the secret key file: /home/rogerio/.ethereum/sepolia/keystore/UTC--2023-04-17T00-51-24.036052785Z--a9e9836 8b44b371cec7d205f9fe2b074b6134c95\n\n- You can share your public address with anyone. Others need it to interact with you.\n- You must NEVER share the secret key with anyone! The key controls access to your funds!\n- You must BACKUP your key file! Without the key, it's impossible to access account funds!\n- You must REMEMBER your password! Without the password, it's impossible to decrypt the key!\nA conta com a chave pública 0xa9e98368B44b371ceC7d205F9fE2b074b6134C95 foi criada. Iremos criar uma segunda conta.\n[rogerio@ryzen-nitro execution]$ geth --sepolia account new\nINFO [04-16|21:52:58.948] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [04-16|21:52:58.948] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nYour new account is locked with a password. Please give a password. Do not forget this password.\nPassword: \nRepeat password: \n\nYour new key was generated\n\nPublic address of the key:   0xc061b852A26BEdeC5Bd457b88c031c46a622f4ab\nPath of the secret key file: /home/rogerio/.ethereum/sepolia/keystore/UTC--2023-04-17T00-53-06.379873395Z--c061b85 2a26bedec5bd457b88c031c46a622f4ab\n\n- You can share your public address with anyone. Others need it to interact with you.\n- You must NEVER share the secret key with anyone! The key controls access to your funds!\n- You must BACKUP your key file! Without the key, it's impossible to access account funds!\n- You must REMEMBER your password! Without the password, it's impossible to decrypt the key!\n\n[rogerio@ryzen-nitro execution]$ \nÉ para termos as duas contas 0xa9e98368B44b371ceC7d205F9fE2b074b6134C95 e 0xc061b852A26BEdeC5Bd457b88c031c46a622f4ab criadas com seus arquivos em .ethereum/sepolia/keystore/, com o prefixo UTC--2023-04-17T00-53-06.379873395Z--*.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#listando-as-contas",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#listando-as-contas",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "5.6 Listando as Contas",
    "text": "5.6 Listando as Contas\nAs contas existentes ou que foram criadas podem ser listadas com o comando geth account list. Utilizaremos novamente o parâmetro que indica a rede de teste --sepolia.\n[rogerio@ryzen-nitro execution]$ geth --sepolia account list\nINFO [04-16|21:56:11.129] Maximum peer count                       ETH=50 LES=0 total=50\nINFO [04-16|21:56:11.130] Smartcard socket not found, disabling    err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [04-16|21:56:11.130] Set global gas cap                       cap=50,000,000\nAccount #0: {a9e98368b44b371cec7d205f9fe2b074b6134c95} keystore:///home/rogerio/.ethereum/sepolia/keystore/UTC--2023-04-17T00-51-24.03605278 5Z--a9e98368b44b371cec7d205f9fe2b074b6134c95\nAccount #1: {c061b852a26bedec5bd457b88c031c46a622f4ab} keystore:///home/rogerio/.ethereum/sepolia/keystore/UTC--2023-04-17T00-53-06.37987339 5Z--c061b85 2a26bedec5bd457b88c031c46a622f4ab\n[rogerio@ryzen-nitro execution]$\nA documentação do geth, bem como comandos e parâmetros podem ser acessados em https://geth.ethereum.org/docs.\nExecutando com opção de responder a comandos via RPC. A documentação desta parte está disponível em https://geth.ethereum.org/docs/rpc/server.\n[rogerio@ryzen-nitro execution]$ geth --sepolia --syncmode full --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin\" --keystore ~/.ethereum/sepolia/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.ethereum/sepolia/geth/jwtsecret --nodiscover --maxpeers 15",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#clientes-de-consenso",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#clientes-de-consenso",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "5.7 Clientes de Consenso",
    "text": "5.7 Clientes de Consenso\nPara terminar a configuração é necessário instalar algum cliente de consenso. Existem atualmente cinco clientes de consenso que podem ser executado em conjunto com o Geth:\n\nLighthouse: escrito em Rust.\nNimbus: escrito em Nim.\nPrysm: escrito em Go.\nTeku: escrito em Java.\nLodestar: escrito em Typescript.\n\nPor ser escrito na linguagem Go, assim como geth, testaremos o Prysm. O Prysm é uma implementação da especificação do consenso proof-of-stake do Ethereum.\nA configuração do Prism pode ser feita conforme descrito no material https://docs.prylabs.network/docs/install/install-with-script.\nO material ensina a usar o Prysm para executar um nó Ethereum, portanto resolver o problema apresentado após a atualização do Merge e opcionalmente como um validador (validator).",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#instalando-o-cliente-de-consenso-prysmlinkprysm",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#instalando-o-cliente-de-consenso-prysmlinkprysm",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "5.8 Instalando o cliente de consenso Prysm1",
    "text": "5.8 Instalando o cliente de consenso Prysm1\nPara a instalação do Prysm, crie no diretório ~/.ethereum/&lt;rede&gt;, duas subpastas: consensus e execution. Acesse o diretório consensus e execute o comando para baixar o cliente Prysm e transformá-lo em executável:\n$ mkdir prysm && cd prysm\n$ curl https://raw.githubusercontent.com/prysmaticlabs/prysm/master/prysm.sh --output prysm.sh && chmod +x prysm.sh",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#gerando-um-arquivo-jwt-secret",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#gerando-um-arquivo-jwt-secret",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "5.9 Gerando um arquivo JWT Secret",
    "text": "5.9 Gerando um arquivo JWT Secret\n\nA conexão HTTP entre seu nó beacon e seu nó de execução precisa ser autenticada usando um token JWT. Existem diversas formas de gerar este token:\n\nUsando um gerado on line como este. Copie e cole o valor gerado dentro do arquivo jwt.hex.\nUsando OpenSSL para criar o token via comando: openssl rand -hex 32 | tr -d \"\\n\" &gt; \"jwt.hex\".\nUsar o que foi gerado pelo cliente de execução geth: ~/.ethereum/sepolia/geth/jwtsecret.\nUsar o próprio Prysm para gerar o jwt.hex:\n\n\n#\\# Optional. This command is necessary only if you've previously configured USE\\_PRYSM\\_VERSION\nUSE_PRYSM_VERSION=v4.0.0\n\n#\\# Required.\n./prysm.sh beacon-chain generate-auth-secret\nNesta opção o Prysm irá mostrar o caminho onde o arquivo jwt.hex foi gerado.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-um-cliente-de-execuçãolinkprysmexec",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-um-cliente-de-execuçãolinkprysmexec",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "5.10 Executando um Cliente de Execução2",
    "text": "5.10 Executando um Cliente de Execução2\nNesta etapa, executaremos o cliente de camada de execução (geth), se ainda não instalou veja os passos de instalação na (Seção sec:instalando:geth?) e o nó beacon do Prysm que se conectará ao cliente em execução.\nNote que iremos adicionar o parâmetro ao comando de execução com o arquivo com o token --authrpc.jwtsecret ~/.ethereum/sepolia/geth/jwtsecret.\n\nO comando de execução do `Geth` atualizado:\n\n```bash\n[rogerio@ryzen-nitro execution]$ geth --sepolia --syncmode full --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin\" --keystore ~/.ethereum/sepolia/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.ethereum/sepolia/geth/jwtsecret --nodiscover --maxpeers 15\nVeja as Opções de linha de comando do Geth para a definição de parâmetros.\nDependendo das opções a Sincronização pode levar um longo tempo, de horas até dias. Enquanto sincroniza, pode ir fazendo o próximo passo.\n[alertblock]{Parabéns}\nVocê está agora executando um nó de execução na camada de execução da Ethereum.\n[/alertblock]",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-um-nó-beacon-usando-prysmlinknobeacon",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-um-nó-beacon-usando-prysmlinknobeacon",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "5.11 Executando um nó beacon usando Prysm3",
    "text": "5.11 Executando um nó beacon usando Prysm3\nAltere o comando para iniciar um nó beacon que conecta no seu nó de execução local, necessário colocar o hash de uma das contas criadas. Por padrão, aqui estou utilizando a primeira conta criada, meu caso a 0xa9e98368b44b371cec7d205f9fe2b074b6134c95.\n./prysm.sh beacon-chain --execution-endpoint=http://localhost:8551 --jwt-secret=~/.ethereum/geth/jwtsecret --suggested-fee-recipient=&lt;&lt;hash da conta principal&gt;&gt;\nAlterei o comando padrão para o conter o hash de uma das minhas contas e para o tipo de rede de teste --sepolia. A rede Sepolia precisa de um estado inicial (genesis state) de onde começar a sincronização. O arquivo pode ser baixado de https://github.com/eth-clients/merge-testnets/blob/main/sepolia/genesis.ssz e deve ser colocado no diretório sepolia/consensus/prysm.\n[rogerio@ryzen-nitro prysm]$ wget https://github.com/eth-clients/merge-testnets/raw/main/sepolia/genesis.ssz -O genesis.ssz\nEntão o comando pode ser utilizado para iniciar um nó beacon que conecta seu nó de execução local.\n[rogerio@ryzen-nitro prysm]$ ./prysm.sh beacon-chain --execution-endpoint=http://localhost:8551 --sepolia --jwt-secret=~/.ethereum/sepolia/geth/jwtsecret --genesis-state=genesis.ssz --suggested-fee-recipient=0xa9e98368b44b371cec7d205f9fe2b074b6134c95\n[rogerio@ryzen-nitro prysm]$ ./prysm.sh beacon-chain --execution-endpoint=http://localhost:8551 --sepolia --jwt-secret=~/.ethereum/sepolia/geth/jwtsecret --genesis-state=genesis.ssz --suggested-fee-recipient=0xa9e98368b44b371cec7d205f9fe2b074b6134c95 --checkpoint-sync-url=https://sepolia.beaconstate.info --genesis-beacon-api-url=https://sepolia.beaconstate.info\nNo terminal onde o cliente de execução apareceu um novo warning: \"WARN [04-19|13:07:28.462] Served miner_start reqid=14 duration=\"233.485us\" err=\"etherbase missing: etherbase must be explicitly specified\".",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-o-console-javascript",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#executando-o-console-javascript",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "5.12 Executando o Console JavaScript",
    "text": "5.12 Executando o Console JavaScript\nO console javascript pode também ser conectado ao nó Geth usando IPC. Quando o Geth é iniciado, um arquivo geth.ipc é criado automaticamente e salvo no diretório de dados. Este arquivo ou um caminho customizado para um arquivo IPC pode ser passado para o Geth usando o parâmetro attach:\n[rogerio@ryzen-nitro ~]$ geth attach /home/rogerio/.ethereum/sepolia/geth.ipc \nWelcome to the Geth JavaScript console!\n\ninstance: Geth/v1.11.5-stable-a38f4108/linux-amd64/go1.20.2\nat block: 0 (Sun Oct 03 2021 10:24:41 GMT-0300 (-03))\n datadir: /home/rogerio/.ethereum/sepolia\n modules: admin:1.0 debug:1.0 engine:1.0 eth:1.0 ethash:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt;",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#verificação-do-funcionamento-da-rede",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#verificação-do-funcionamento-da-rede",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "5.13 Verificação do Funcionamento da Rede",
    "text": "5.13 Verificação do Funcionamento da Rede\nPara verificar o funcionamento da rede, utilize o comando net.listing:\n[rogerio@ryzen-nitro ~]$ geth attach /home/rogerio/.ethereum/sepolia/geth.ipc \nWelcome to the Geth JavaScript console!\n\ninstance: Geth/v1.11.5-stable-a38f4108/linux-amd64/go1.20.2\nat block: 0 (Sun Oct 03 2021 10:24:41 GMT-0300 (-03))\n datadir: /home/rogerio/.ethereum/sepolia\n modules: admin:1.0 debug:1.0 engine:1.0 eth:1.0 ethash:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt; net.listening\ntrue\n&gt; \nA mesma verificação pode ser feita via API JSON RPC no terminal do sistema:\n\n[rogerio@ryzen-nitro ~]$ curl -X POST --insecure --header \"Content-Type: application/json\" --data '{\"jsonrpc\":\"2.0\", \"method\":\"net_listening\",\"params\":[], \"id\":64}' --location http://localhost:8559\n{\"jsonrpc\":\"2.0\",\"id\":64,\"result\":true}",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#listando-as-contas-pelo-console",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#listando-as-contas-pelo-console",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "5.14 Listando as Contas pelo Console",
    "text": "5.14 Listando as Contas pelo Console\n\nA lista de contas pode ser recuperada através dos comandos no console eth.accounts e por RPC {\"method\": \"eth_accounts\", \"params\": []}. Em versões anteriores do geth era possível utilizar personal.listAccounts, mas personal foi depreciado.\n[rogerio@ryzen-nitro ~]$ geth attach /home/rogerio/.ethereum/sepolia/geth.ipc \nWelcome to the Geth JavaScript console!\n\ninstance: Geth/v1.11.5-stable-a38f4108/linux-amd64/go1.20.2\nat block: 0 (Sun Oct 03 2021 10:24:41 GMT-0300 (-03))\n datadir: /home/rogerio/.ethereum/sepolia\n modules: admin:1.0 debug:1.0 engine:1.0 eth:1.0 ethash:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt; net.listening\ntrue\n&gt; personal.listAccounts\nReferenceError: personal is not defined\n        at &lt;eval&gt;:1:1(0)\n\n&gt; eth.accounts\n[\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\"]\nO mesmo resultado pode ser obtido via comando curl no terminal para listar as contas usando RPC:\n[rogerio@ryzen-nitro execution]$ curl -X POST --insecure --header \"Content-Type: application/json\" --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_accounts\",\"params\":[], \"id\":64}' --location http://localhost:8559\n{\"jsonrpc\":\"2.0\",\"id\":64,\"result\":[\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\"]}\nOutros comandos podem ser executados da mesma maneira via Console JavaScript ou invocação RPC através do curl. Uma lista completa de comandos da API RPCestão disponíveis em JSON-RPC API.\nComo por exemplo, recuperar a versão do cliente geth:\n[rogerio@ryzen-nitro execution]$ curl -X POST --insecure  --header \"Content-Type: application/json\" --data '{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\":[],\"id\":67}' --location http://localhost:8559\n{\"jsonrpc\":\"2.0\",\"id\":67,\"result\":\"Geth/v1.11.5-stable-a38f4108/linux-amd64/go1.20.2\"}\nOu a versão da Rede:\n[rogerio@ryzen-nitro execution]$ curl -X POST --header \"Content-Type: application/json\"  --data '{\"jsonrpc\":\"2.0\",\"method\":\"net_version\",\"params\":[],\"id\":67}' --location http://localhost:8559\n{\"jsonrpc\":\"2.0\",\"id\":67,\"result\":\"11155111\"}\nO valor \\(11155111\\) em result indica que estamos executando sobre a rede Sepolia. Uma lista completa com os IDs das redes está disponível em https://chainlist.org. Os mais comuns são \\(1\\): Ethereum Mainnet, \\(2\\): Morden testnet (depreciado), \\(3\\): Ropsten testnet, \\(4\\): Rinkeby testnet, \\(5\\): Goerli testnet (será depreciada em 2023).\n\n\n\nLista de IDs Fonte: chainlist",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#teste-de-transferência-de-valores-entre-carteiras",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#teste-de-transferência-de-valores-entre-carteiras",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "5.15 Teste de Transferência de Valores entre Carteiras",
    "text": "5.15 Teste de Transferência de Valores entre Carteiras\nPodemos testar uma transferência de valores. As duas formas de se conseguir valores é minerando ou solicitando valores para Faucets da rede, como por exemplo o https://faucet.sepolia.dev/.\nOs valores de cada conta/carteira pode ser verificado com o comando eth.getBalance(hash), passando como parâmetro a cadeia hash de identificação da conta ou indicando na lista de contas eth.getBalance(eth.accounts[0]).\n[rogerio@ryzen-nitro ~]$ geth attach /home/rogerio/.ethereum/sepolia/geth.ipc \nWelcome to the Geth JavaScript console!\n\ninstance: Geth/v1.11.5-stable-a38f4108/linux-amd64/go1.20.2\nat block: 0 (Sun Oct 03 2021 10:24:41 GMT-0300 (-03))\n datadir: /home/rogerio/.ethereum/sepolia\n modules: admin:1.0 debug:1.0 engine:1.0 eth:1.0 ethash:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt; net.listening\n\ntrue\n&gt; eth.accounts\n[\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\"]\n&gt; eth.getBalance(\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\")\n0\n&gt; eth.getBalance(\"0xc061b852a26bedec5bd457b88c031c46a622f4ab\")\n0\n&gt; eth.getBalance(\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\")\n0\nComo os saldos estão zerados, vamos iniciar a mineração com o comando miner.start().\n&gt; miner.start()\nError: etherbase missing: etherbase must be explicitly specified\n       at web3.js:6365:9(39)\n       at send (web3.js:5099:62(29))\n       at &lt;eval&gt;:1:12(2)\n\n&gt; web3.fromWei(eth.getBalance(\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\"), \"ether\")\n0\n&gt; web3.fromWei(eth.getBalance(\"0xc061b852a26bedec5bd457b88c031c46a622f4ab\"), \"ether\")\n0\n&gt; web3.fromWei(eth.getBalance(eth.coinbase), \"ether\")\nError: etherbase must be explicitly specified\n       at web3.js:6365:9(39)\n       at get (web3.js:6265:66(14))\n       at &lt;eval&gt;:1:33(5)\n\n&gt; eth.coinbase\nError: etherbase must be explicitly specified\n       at web3.js:6365:9(39)\n       at get (web3.js:6265:66(14))\n       at &lt;eval&gt;:1:5(1)\n\n&gt; eth.coinbase.panic: Error: etherbase must be explicitly specified at web3.js:6365:9(39)\n\ngoroutine 82 [running]:\ngithub.com/dop251/goja.(*baseJsFuncObject)._call(...)\n       github.com/dop251/goja@v0.0.0-20230122112309-96b1610dd4f7/func.go:396\nO erro “Error: etherbase must be explicitly specified” ocorre pois é necessário fornecer o hash da carteira também para a execução do cliente geth.\n[rogerio@ryzen-nitro execution]$ geth --sepolia --syncmode full --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin\" --keystore ~/.ethereum/sepolia/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.ethereum/sepolia/geth/jwtsecret --nodiscover --maxpeers 15 --miner.etherbase=0xa9e98368b44b371cec7d205f9fe2b074b6134c95\nFornecendo a carteira como --miner.etherbase=0xa9e98368b44b371cec7d205f9fe2b074b6134c95, agora podemos iniciar a mineração.\n&gt; miner.start()\nnull\n&gt; miner.stop()\nnull\n&gt; eth.getBalance(\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\")\n5.004e+21\n&gt; eth.getBalance(\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\")\n5.004e+21\n&gt; eth.accounts\n[\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\"]\n&gt; eth.getBalance(\"0xc061b852a26bedec5bd457b88c031c46a622f4ab\")\n0\n&gt; web3.fromWei(eth.getBalance(\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\"), \"ether\")\n5004\n&gt; eth.getBalance(eth.accounts[0])\n5.004e+21\nPara enviar \\(100\\) ethers da primeira para a segunda carteira:\n&gt; eth.sendTransaction({from: \"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", to: \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\", value: 100})\nError: authentication needed: password or unlock\n        at web3.js:6365:9(39)\n        at send (web3.js:5099:62(29))\n        at &lt;eval&gt;:1:20(9)\n\n&gt; eth.sendTransaction({from: \"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", to: \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\", value:web3.toWei(100, \"ether\")})\nError: authentication needed: password or unlock\n        at web3.js:6365:9(39)\n        at send (web3.js:5099:62(29))\n        at &lt;eval&gt;:1:20(13)\n\n&gt; personal.unlockAccount(eth.accounts[0])\nReferenceError: personal is not defined\n        at &lt;eval&gt;:1:1(0)\nO erro “Error: authentication needed: password or unlock” ocorre por que precisamos autorizar a transação. Em versões anteriores era possível desbloquear as contas via console javascript, conforme tentamos no Código acima personal.unlockAccount(eth.accounts[0]). Verificando a documentação o personal foi depreciado e não pode ser mais utilizado.\nNa versão corrente é preciso utilizar o clef para fazer a autenticação em um terminal separado. O clef é um autenticador das operações, a Figura \\(\\ref{fig:clef:fluxo}\\) apresenta o fluxo de autenticação de uma transição solicitada pelo usuário.\n\n\n\nFluxo de Autenticação com clef \n\n\nEntão em um outro terminal inicie a instância do clef com o comando:\n[rogerio@ryzen-nitro sepolia]$ clef --chainid 11155111 --keystore ~/.ethereum/sepolia/keystore --configdir ~/.ethereum/sepolia/clef --http\n\nWARNING!\n\nClef is an account management tool. It may, like any software, contain bugs.\n\nPlease take care to\n- backup your keystore files,\n- verify that the keystore(s) can be opened with your password.\n\nClef is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\nwithout even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\nPURPOSE. See the GNU General Public License for more details.\n\nEnter 'ok' to proceed:\n&gt; ok\n\nINFO [04-19|14:00:58.719] Using CLI as UI-channel \nINFO [04-19|14:00:59.171] Loaded 4byte database                    embeds=268,621 locals=0 local=./4byte-custom.json\nWARN [04-19|14:00:59.171] Failed to open master, rules disabled    err=\"failed stat on /home/rogerio/.ethereum/sepolia/clef/masterseed.json: stat /home/rogerio/.ethereum/sepolia/clef/masterseed.json: no such file or directory\"\nINFO [04-19|14:00:59.172] Starting signer                          chainid=1,115,511 keystore=/home/rogerio/.ethereum/sepolia/keystore light-kdf=false advanced=false\nINFO [04-19|14:00:59.184] Smartcard socket file missing, disabling err=\"stat /run/pcscd/pcscd.comm: no such file or directory\"\nINFO [04-19|14:00:59.184] Audit logs configured                    file=audit.log\nINFO [04-19|14:00:59.186] HTTP endpoint opened                     url=http://127.0.0.1:8550/\nINFO [04-19|14:00:59.186] IPC endpoint opened                      url=/home/rogerio/.ethereum/sepolia/clef/clef.ipc\n\n------- Signer info -------\n* extapi_ipc : /home/rogerio/.ethereum/sepolia/clef/clef.ipc\n* intapi_version : 7.0.1\n* extapi_version : 6.1.0\n* extapi_http : http://127.0.0.1:8550/\n\n------- Available accounts -------\n0. 0xa9e98368B44b371ceC7d205F9fE2b074b6134C95 at keystore:///home/rogerio/.ethereum/sepolia/keystore/UTC--2023-04-17T00-51-24.03605278 5Z--a9e98368b44b371cec7d205f9fe2b074b6134c95\n1. 0xc061b852A26BEdeC5Bd457b88c031c46a622f4ab at keystore:///home/rogerio/.ethereum/sepolia/keystore/UTC--2023-04-17T00-53-06.37987339 5Z--c061b85 2a26bedec5bd457b88c031c46a622f4ab\nO clef iniciará e listará as contas disponíveis que irá controlar.\nO arquivo para a comunicação IPC socket/pipe será criado dentro do datadir .ethereum/sepolia/ clef/clef.ipc, se preferir o caminho onde o arquivo será criado pode ser fornecido como parâmetro --ipcpath valor.\nVolte ao terminal onde iniciou o geth e indique que as autentificações serão via clef com o parâmetro --signer=/home/rogerio/.ethereum/sepolia/clef/clef.ipc passando o caminho dado pelo clef.\n[rogerio@ryzen-nitro execution]$ geth --sepolia --syncmode full --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin\" --keystore ~/.ethereum/sepolia/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.ethereum/sepolia/geth/jwtsecret --nodiscover --maxpeers 15 --miner.etherbase=0xa9e98368b44b371cec7d205f9fe2b074b6134c95 --signer=/home/rogerio/.ethereum/sepolia/clef/clef.ipc\nRetorne ao console javascript, e execute novamente as transações, cada uma deverá ser autorizada no console do clef.\n&gt; eth.sendTransaction({from: \"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", to: \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\", value: 100})\nNo console do clef é possível autorizar e ver a transação assinada com hash: 0xb579cc595601e4aca546ce4e46bdcded7841bd7f50a0a78c505e839dd039b8b9 que é o mesmo id devolvido no console javascript.\n-------------------------------------------\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\nApprove? [y/N]:\n&gt; y\n--------- Transaction request-------------\nto:    0xc061b852A26BEdeC5Bd457b88c031c46a622f4ab\nfrom:               0xa9e98368B44b371ceC7d205F9fE2b074b6134C95 [chksum ok]\nvalue:              100 wei\ngas:                0x5208 (21000)\nmaxFeePerGas:          1000000014 wei\nmaxPriorityFeePerGas:  1000000000 wei\nnonce:    0x0 (0)\nchainid:  0xaa36a7\nAccesslist\n\nRequest context:\n        NA -&gt; ipc -&gt; NA\n\nAdditional HTTP header data, provided by the external caller:\n        User-Agent: \"\"\n        Origin: \"\"\n-------------------------------------------\nApprove? [y/N]:\n&gt; y\n#\\# Account password\n\nPlease enter the password for account 0xa9e98368B44b371ceC7d205F9fE2b074b6134C95\n&gt; \n-----------------------\nTransaction signed:\n {\n    \"type\": \"0x2\",\n    \"nonce\": \"0x0\",\n    \"gasPrice\": null,\n    \"maxPriorityFeePerGas\": \"0x3b9aca00\",\n    \"maxFeePerGas\": \"0x3b9aca0e\",\n    \"gas\": \"0x5208\",\n    \"value\": \"0x64\",\n    \"input\": \"0x\",\n    \"v\": \"0x0\",\n    \"r\": \"0xcfaf8674159cf0618393d32bc4e421969acf3bc1c7dfc5bc13224025cc5a6e5e\",\n    \"s\": \"0x44cbc80e7123b73846caf72eb13312b8ac8a2dc323173a4b58491b1112c2298c\",\n    \"to\": \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\",\n    \"chainId\": \"0xaa36a7\",\n    \"accessList\": [],\n    \"hash\": \"0x298bb20795a584c9bd038d47323f592e072b66eace172833d27acaad8278281a\"\n  }\nCom a autorização feita no console do clef será mostrado as informações da transação assinada, como o hash: 0x298bb20795a584c9bd038d47323f592e072b66eace172833d27acaad8278281a. Observe que no console javascript aparece o mesmo hash da transação para a transação que solicitamos:\n&gt; eth.sendTransaction({from: \"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", to: \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\", value: 100})\n\"0x298bb20795a584c9bd038d47323f592e072b66eace172833d27acaad8278281a\"\n&gt; \nSe buscarmos pelo recibo da transação ou verificarmos se o saldo da conta 1 foi alterado, veremos que a transação no foi efetivada ainda, pois a consulta devolve null e o saldo da conta ainda é zero.\n&gt; eth.sendTransaction({from: \"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", to: \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\", value: 100})\n\"0x298bb20795a584c9bd038d47323f592e072b66eace172833d27acaad8278281a\"\n&gt; eth.getTransactionReceipt(\"0x298bb20795a584c9bd038d47323f592e072b66eace172833d27acaad 8278281a\")\nnull\n&gt; eth.getBalance(eth.accounts[1])\n0\n&gt; eth.getBalance(eth.accounts[0])\n5.004e+21\nÉ preciso minerar para a transação ser efetivada:\n\n&gt; miner.start()\nnull\n&gt; eth.getBalance(eth.accounts[1])\n100\n&gt; miner.stop()\nnull\n&gt; eth.getBalance(eth.accounts[0])\n5.0859999999999998529e+21\n&gt; eth.getBalance(eth.accounts[1])\n100\n&gt; \nAgora sim, é possível recuper o recibo da transação. Desde do fork para a versão Byzantium, a Ethereum fornece uma forma de se verficar se a transação deu certo ou falhou, o campo status no recibo indica a situação (0 - falhou e 1 - foi executada com sucesso).\n&gt; eth.getTransactionReceipt(\"0x298bb20795a584c9bd038d47323f592e072b66eace172833d27acaad 8278281a\")\n{\n  blockHash: \"0x1e3ae615a7d676cc51983ea066e2cda3a5d7702d27255065b330591cc3b9062f\",\n  blockNumber: 2503,\n  contractAddress: null,\n  cumulativeGasUsed: 21000,\n  effectiveGasPrice: 1000000007,\n  from: \"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\",\n  gasUsed: 21000,\n  logs: [],\n  logsBloom: \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n  status: \"0x1\",\n  to: \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\",\n  transactionHash: \"0x298bb20795a584c9bd038d47323f592e072b66eace172833d27acaad8278281a\",\n  transactionIndex: 0,\n  type: \"0x2\"\n}\nAo enviar outra quantidade para a segunda conta é preciso autorizar a transação no console do clef e minerar novamente para ela ser efetivada.\n\n&gt; eth.sendTransaction({from: \"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", to: \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\", value: 1000})\n\"0x667f9570b629fdd437b112e4b5f388cbbe68efb43e0bdbb75bf9db473cbd00fc\"\n&gt; eth.getBalance(eth.accounts[1])\n\n100\n&gt; miner.start()\nnull\n&gt; eth.getBalance(eth.accounts[1])\n1100\n&gt; miner.stop()\nnull\n&gt; eth.getBalance(eth.accounts[1])\n1100\n&gt; eth.getBalance(eth.accounts[0])\n5.1779999999999997049e+21\n&gt; \nNo terminal de execução do geth aparece que a transação foi submetida e após a mineração os saldos das contas foram atualizados.\nINFO [04-19|15:10:01.663] Submitted transaction                    hash=0x667f9570b629fdd437b112e4b5f388cbbe68efb43e0bdbb75bf9db473cbd00fc from=0xa9e98368B44b371ceC7d205F9fE2b074b6134C95 nonce=1 recipient=0xc061b852A26BEdeC5Bd457b88c031c46a622f4ab value=1000\nA transação 0x667f9570b629fdd437b112e4b5f388cbbe68efb43e0bdbb75bf9db473cbd00fc foi autorizada e podemos verificar o saldo das carteiras.\n&gt; eth.getTransactionReceipt(\"0x667f9570b629fdd437b112e4b5f388cbbe68efb43e0bdbb75bf9db47 3cbd00fc\")\n{\n  blockHash: \"0x30643a61e054cc3a2e5ce04c67e4c14ed192a889cede500bcf214d754540fe6b\",\n  blockNumber: 2544,\n  contractAddress: null,\n  cumulativeGasUsed: 21000,\n  effectiveGasPrice: 1000000007,\n  from: \"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\",\n  gasUsed: 21000,\n  logs: [],\n  logsBloom: \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n  000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n  status: \"0x1\",\n  to: \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\",\n  transactionHash: \"0x667f9570b629fdd437b112e4b5f388cbbe68efb43e0bdbb75bf9db473cbd00fc\",\n  transactionIndex: 0,\n  type: \"0x2\"\n}\n&gt; eth.accounts\n[\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\", \"0xc061b852a26bedec5bd457b88c031c46a622f4ab\"]\n&gt; web3.fromWei(eth.getBalance(\"0xa9e98368b44b371cec7d205f9fe2b074b6134c95\"), \"ether\")\n5177.9999999999997049\n&gt; web3.fromWei(eth.getBalance(\"0xc061b852a26bedec5bd457b88c031c46a622f4ab\"), \"ether\")\n1.1e-15\nSurgiu após a instalação e execução a seguinte mensagem:\nAll I see is, beacon client online, but never received consensus updates. Please ensure your beacon client is operational to follow the chain!\n\nI connected the consensus client and it is syncing but not the geth client.\nProcurando pela mensagem chegamos à resposta no forum https://ethereum.stackexchange.com/questions/136810/geth-does-not-sync-proof-of-stake diz que é possível fazer uma sincronização rápida, usando um checkpoint.\n\nYour geth client will not start sync before your consensus-client does not sync completely. If you are using prysm consensus client, you can use checkpoint sync feature to sync in minutes so you don’t need to wait.\nThis is also verified by go-ethereum team in this issue.\n\nClicando-se no link checkpoint você será direcionado para a página da Figura:\n\n\n\nCheckpoint checkpointz\n\n\n\nClicando no botão Get started! ele vai para as opções de configuração de cada um dos clientes de consenso, conforme a Figura \\(\\ref{fig:checkpointz:prysm}\\).\n\n\n\nCheckpointz, configuração do prysm \n\n\nNo passo a passo da configuração para o Prysm, no Step 2 fala para adicionarmos os argumentos checkpoint sync para o nosso cliente:\n--checkpoint-sync-url=https://checkpoint-sync.sepolia.ethpandaops.io\n--genesis-beacon-api-url=https://checkpoint-sync.sepolia.ethpandaops.io\nO comando do terminal do prysm deve ser alterado para:\n[rogerio@ryzen-nitro prysm]$ ./prysm.sh beacon-chain --execution-endpoint=http://localhost:8551 --sepolia --jwt-secret=~/.ethereum/sepolia/geth/jwtsecret --genesis-state=genesis.ssz --suggested-fee-recipient=0xa9e98368b44b371cec7d205f9fe2b074b6134c95 --checkpoint-sync-url=https://checkpoint-sync.sepolia.ethpandaops.io --genesis-beacon-api-url=https://checkpoint-sync.sepolia.ethpandaops.io\nNa Option B do Step 4 é necessário recuperar os valores do slot number e do state_root.\n1. Open http://YOUR\\_NODE\\_IP:YOUR\\_NODE\\_PORT/eth/v1/beacon/headers/finalized in your browser.\n2. Find the slot number.\n3. Find the state_root value.\nSerá necessário conhecer o IP e a porta do beacon node. A porta padrão para o Prysm é 3500.\nAbrindo no navegador o link http://localhost:3500/eth/v1/beacon/headers/finalized será retornado o JSON com as informações:\n{\n \"data\":{\n   \"root\":\"0xc41093353f2a6bb5b63ac406ac040d95a28cf54ec3d6f0f232955d8e2456727c\",\n   \"canonical\":true,\n   \"header\":{\n     \"message\":{\n       \"slot\":\"3149344\",\n       \"proposer_index\":\"683\",\n       \"parent_root\":\"0xe5af6c8eaaeb1fb511966164a4093b77e18a160a921765a10c686d38f55240f1\",\n       \"state_root\":\"0xa055b83978259840e18c2a0e6e625982f2944ff8d906c01e7bab0bc2883cb793\",\n       \"body_root\":\"0xd5e597557fe3145b1485815e2e42b1e56640188df6136056313cfc37c07eb5d3\"\n     },\n   \"signature\":\"0x92f5babf32748c31f74d988869b7f7bc3f251056d117a4e63882fa2e3fa4b219e47f949\n   9f17f965f39d877ea83cf0cbf0de9879350ebc3024fb6fb6f37e9d16fae379ec0e127e7bef5e0a6d6587d2\n   cfb885b824d59d1d7cf78e9f43daf987fe7\"\n   }\n },\n \"execution_optimistic\":true,\n \"finalized\":true\n}\nUma outra opção dada na Option C é utilizar os comandos curl e o jq e recuperar a informação pelo terminal.\n[rogerio@ryzen-nitro prysm]$ curl -s http://localhost:3500/eth/v1/beacon/headers/finalized | jq .'data.header.message'\n{\n  \"slot\": \"3154944\",\n  \"proposer_index\": \"187\",\n  \"parent_root\": \"0xb89973544675c63c5f19f5904b8eaa164fc41c688ecb3078ee0dc62a62996c9b\",\n  \"state_root\": \"0x041fb39788896d2c0662e104ab7393124140546aacbeaedc2b7f94b9b5fcc548\",\n  \"body_root\": \"0x128fe8300ed3e76226ca14955790583df1921ed9c65d111804db319b7b6118ba\"\n}\n[rogerio@ryzen-nitro prysm]$\nPara verificar seu slot e seu state_root abra uma outra instância do site Checkpointz, note que deve ser uma instância diferente da que você está lendo esse tutorial.\nVerifique a tabela do histórico de limites de época finalizados e procure a linha que contém o valor do seu slot e tenha certeza que o seu state_root casa com o listado. Se coincidir, ok!\nCaso contrário, você deveria iniciar do início novamente limpando seu nó beacon e iniciando novamente os passos. Existem a opção do prysm --clear-db para limpar o banco de dados.\nPelo visto a parte que envolvia a mineração não funciona mais. Ao executar o comando no console javascript miner.start() a seguinte mensagem de erro aconteceu:\npanic: ethash (pow) sealing not supported any more\n\ngoroutine 4324 [running]:\ngithub.com/ethereum/go-ethereum/consensus/ethash.(*Ethash).Seal(0xc000199680?, {0x5607920e8325?, 0xc000c85ce0?}, 0xc000c85de8?, 0xc000c85ce0?, 0x8ba4636bba1627dc?)\n        github.com/ethereum/go-ethereum/consensus/ethash/ethash.go:84 +0x25\ngithub.com/ethereum/go-ethereum/consensus/beacon.(*Beacon).Seal(0xc0002d1bf0, {0x560793c496a8, 0xc000601c00}, 0xc0002381e0, 0x0?, 0x1?)\n        github.com/ethereum/go-ethereum/consensus/beacon/consensus.go:393 +0x8d\ngithub.com/ethereum/go-ethereum/miner.(*worker).taskLoop(0xc0004da6c0)\n        github.com/ethereum/go-ethereum/miner/worker.go:616 +0x2fd\ncreated by github.com/ethereum/go-ethereum/miner.newWorker in goroutine 1\n        github.com/ethereum/go-ethereum/miner/worker.go:285 +0x8f8\n[rogerio@ryzen-nitro sepolia]$ \nOutras mensagens de erros envolvendo o Prysm podem ser encontradas na documentação https://docs.prylabs.network/docs/troubleshooting/issues-errors.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#pedindo-recursos-para-um-faucet",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#pedindo-recursos-para-um-faucet",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "5.16 Pedindo Recursos para um Faucet",
    "text": "5.16 Pedindo Recursos para um Faucet\nUma alternativa ao teste com a mineração local seria solicita recursos a um faucet, ao https://sepoliafaucet.com/, por exemplo.\nNesses sistemas, você fornece o hash da conta desejada e uma pequena quantia será enviada para seu endereço. A Figura \\(\\ref{fig:transacao:faucet:01}\\) apresenta a interface do faucet.\n\n\n\nFaucet \n\n\nAs Figuras \\(\\ref{fig:transacao:faucet:02}\\) e \\(\\ref{fig:transacao:faucet:03}\\) apresentam detalhes da transação gerada.\n\n\n\nFaucet \n\n\n\n\n\nFaucet",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#importando-contas-do-metamask",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#importando-contas-do-metamask",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "5.17 Importando contas do Metamask",
    "text": "5.17 Importando contas do Metamask\nCriar um aquivo com o nome do hash da conta. Exportar no Metamask a chave privada e salvar como conteúdo desse arquivo.\n[rogerio@ryzen-nitro ~]$ nano 0x9DBf97c71AeD31302e07e34236308C97f882f914.txt\n[rogerio@ryzen-nitro ~]$ clef --chainid 11155111 --keystore ~/.ethereum/sepolia/keystore importraw 0x9DBf97c71AeD31302e07e34236308C97f882f914.txt \n\nWARNING!\n\nClef is an account management tool. It may, like any software, contain bugs.\n\nPlease take care to\n- backup your keystore files,\n- verify that the keystore(s) can be opened with your password.\n\nClef is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\nwithout even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\nPURPOSE. See the GNU General Public License for more details.\n\nEnter 'ok' to proceed:\n&gt; ok\n\n## Password\n\nPlease enter a password for the imported account\n&gt; \n-----------------------\n## Password\n\nPlease repeat the password you just entered\n&gt; \n-----------------------\n## Info \nKey imported:\n  Address 0x9DBf97c71AeD31302e07e34236308C97f882f914\n  Keystore file: /home/rogerio/.ethereum/sepolia/keystore/UTC--2024-09-12T14-29-06.549845800Z--9dbf97c71aed31302e07e34236308c97f882f914\n\nThe key is now encrypted; losing the password will result in permanently losing\naccess to the key and all associated funds!\n\nMake sure to backup keystore and passwords in a safe location.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#comandos-finais",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#comandos-finais",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "5.18 Comandos Finais",
    "text": "5.18 Comandos Finais\nA Figura \\(\\ref{fig:terminais:comandos}\\) apresenta os comandos para cada um dos terminais.\n\n\n\n\nTerminais \n\n\nO comando para o console do clef:\n[rogerio@ryzen-nitro clef]$ clef --chainid 11155111 --keystore ~/.ethereum/sepolia/keystore --configdir ~/.ethereum/sepolia/clef --http\nO comando para o console do Geth:\n\n[rogerio@ryzen-nitro sepolia]$ geth --sepolia --syncmode full --http --http.addr 127.0.0.1 --http.port 8559 --http.api \"eth,net,web3,personal,engine,admin\" --keystore ~/.ethereum/sepolia/keystore --authrpc.addr localhost --authrpc.port 8551 --authrpc.vhosts localhost --authrpc.jwtsecret ~/.ethereum/sepolia/geth/jwtsecret --nodiscover --maxpeers 15 --miner.etherbase=0xa9e98368B44b371ceC7d205F9fE2b074b6134C95 --signer=/home/rogerio/.ethereum/sepolia/clef/clef.ipc --verbosity 3\nO comando para o console do prysm:\n[rogerio@ryzen-nitro prysm]$ ./prysm.sh beacon-chain --execution-endpoint=http://localhost:8551 --sepolia --jwt-secret=~/.ethereum/sepolia/geth/jwtsecret --suggested-fee-recipient=0xa9e98368b44b371cec7d205f9fe2b074b6134c95 --genesis-state=genesis.ssz --checkpoint-sync-url=https://checkpoint-sync.sepolia.ethpandaops.io --genesis-beacon-api-url=https://checkpoint-sync.sepolia.ethpandaops.io --clear-db\nO comando para o console do javascript:\n[rogerio@ryzen-nitro ~]$ geth attach /home/rogerio/.ethereum/sepolia/geth.ipc\nWelcome to the Geth JavaScript console!\n\ninstance: Geth/v1.12.2-stable-bed84606/linux-amd64/go1.21.0\ncoinbase: 0xa9e98368b44b371cec7d205f9fe2b074b6134c95\nat block: 0 (Sun Oct 03 2021 10:24:41 GMT-0300 (-03))\n datadir: /home/rogerio/.ethereum/sepolia\n modules: admin:1.0 debug:1.0 engine:1.0 eth:1.0 miner:1.0 net:1.0 rpc:1.0 txpool:1.0 web3:1.0\n\nTo exit, press ctrl-d or type exit\n&gt;",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#leitura-recomendada",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#leitura-recomendada",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "5.19 Leitura Recomendada",
    "text": "5.19 Leitura Recomendada\n[alertblock]{Leitura Recomendada}\nCapítulo 11: Ethereum 101\nLivro: IMRAN BASHIR. Mastering Blockchain : Distributed Ledger Technology, Decentralization, and Smart Contracts Explained, 2nd Edition.\nCapítulo 12: Futher Ethereum\nLivro: IMRAN BASHIR. Mastering Blockchain : Distributed Ledger Technology, Decentralization, and Smart Contracts Explained, 2nd Edition.\n[/alertblock]",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#referências",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#referências",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "6.1 Referências",
    "text": "6.1 Referências",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#footnotes",
    "href": "aula-04-pratica-instalando-cliente-ethereum/aula-04-pratica-instalando-cliente-ethereum.html#footnotes",
    "title": "3  Aula 04 - Instalando o Cliente Ethereum",
    "section": "",
    "text": "Step 2: Install Prysm: https://docs.prylabs.network/docs/install/install-with-script#step-2-install-prysm↩︎\nStep 3: Run an execution client: https://docs.prylabs.network/docs/install/install-with-script#step-3-run-an-execution-client↩︎\nStep 4: Run a beacon node using Prysm: https://docs.prylabs.network/docs/install/install-with-script#step-4-run-a-beacon-node-using-prysm↩︎",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Aula 04 - Instalando o Cliente Ethereum</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "",
    "text": "2 Introdução",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#olá",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#olá",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.1 Olá",
    "text": "2.1 Olá\n[columns]\n[column=0.4]\n\n\n\nRogério Gonçalves (RAG)\n\n\n[column=0.6]\nDoutor em Ciência da Computação, é professor na UTFPR - Campus Campo Mourão. É revisor do journal Springer Computing e de algumas conferências. Interesse em: Computação Paralela, Computação Heterogênea, Compiladores e Runtimes para Computação Paralela e Tecnologias Blockchain.\n[/columns]",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#objetivos",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#objetivos",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.2 Objetivos",
    "text": "2.2 Objetivos\n\nApresentação de uma Visão Geral sobre o Ecossistema de Tecnologias relacionadas a Blockchain. Surgimento e contexto histórico vinculado ao Bitcoin. Mas o foco principal está na rede Ethereum e componentes do seu Ecossistema. Falaremos um pouco sobre a Ethereum Virtual Machine (EVM) e Contratos Inteligentes. Além disso, uma perspectiva do usuário é apresentada, mostrando a estrutura dos blocos do blockchain da Ethereum, Wallets e softwares clientes, nós e mineradores, ferramentas e APIs, protocolos e Linguagens de Programação Suportados.\n\n\n\n\nIdeia Geral da Disciplina",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#interesse-no-termo-blockchain-ao-longo-do-tempo",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#interesse-no-termo-blockchain-ao-longo-do-tempo",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.3 Interesse no termo “blockchain” ao longo do tempo",
    "text": "2.3 Interesse no termo “blockchain” ao longo do tempo\n\n\n\nPesquisas sobre o termo “blockchain” Fonte: Google Trends",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#como-um-blockchain-funciona",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#como-um-blockchain-funciona",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.4 Como um Blockchain funciona",
    "text": "2.4 Como um Blockchain funciona\n\n\n\nFuncionamento de um Blockchain",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#definição-de-blockchain",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#definição-de-blockchain",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.5 Definição de Blockchain",
    "text": "2.5 Definição de Blockchain\n[alertblock]{Definição de Gosh}\nA blockchain is a digital distributed ledger, where transactions are stored in blocks linked to each other with a singly linked list. A block contains a link pointing to its predecessor. New blocks can be appended to the head of a blockchain. Existing blocks cannot be modified or deleted.\n[/alertblock]\n[alertblock]{Definição de Layman}\nBlockchain is an ever-growing, secure, shared recordkeeping system in which each user of the data holds a copy of the records, which can only be updated if all parties involved in a transaction agree to update.\n\n[/alertblock]\n[alertblock]{Definição Técnica}\nBlockchain is a peer-to-peer distributed ledger that is cryptographically-secure, append-only, immutable (extremely hard to change), and updateable only via consensus or agreement among peers.\n\n[/alertblock]\n[framebreak]\n\nPeer-to-peer\nDistributed Ledger (livro-razão distribuído)\nCriptograficamente Seguro\nAppend Only (Permitido somente anexar novos blocos)\nAtualizável via consenso dos pares.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#como-a-tecnologia-blockchain-foi-desenvolvida",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#como-a-tecnologia-blockchain-foi-desenvolvida",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.6 Como a Tecnologia Blockchain foi desenvolvida",
    "text": "2.6 Como a Tecnologia Blockchain foi desenvolvida\n[columns]\n[column=0.5]\n1950s – Hash functions\n1970s – Merkle trees - hashes in a tree structure\n1970s continued – Research in distributed systems, consensus, state machine replication\n1980s – Hash chains for secure logins\n1990s – e-Cash for e-payments\n[column=0.5]\n1991 – Secure timestamping of digital documents.\n1992 – Hashcash idea to combat junk emails\n1994 – S/KEY application for Unix login.\n1997/2002 – Hashcash\n2008/2009 – Bitcoin (the first blockchain)\n[/columns]",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#visão-arquitetural-de-um-blockchain",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#visão-arquitetural-de-um-blockchain",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.7 Visão Arquitetural de um Blockchain",
    "text": "2.7 Visão Arquitetural de um Blockchain",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#estrutura-genérica-de-um-blockchain",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#estrutura-genérica-de-um-blockchain",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.8 Estrutura Genérica de um Blockchain",
    "text": "2.8 Estrutura Genérica de um Blockchain\n\n\n\nEstrutura Genérica de um Blockchain\n\n\n\n\n\nOrganização Blockchain\n\n\n\nPara evitar overhead, os registros são agrupados em blocos. Os registros em um bloco são organizados em uma estrutura de árvore chamada de Merkle tree [Merkle 1989] para acesso mais rápido.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#estrutura-genérica-de-um-bloco",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#estrutura-genérica-de-um-bloco",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.9 Estrutura Genérica de um bloco",
    "text": "2.9 Estrutura Genérica de um bloco\n\n\n\nEstrutura de um Bloco",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#benefícios-e-limitações-de-um-blockchain",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#benefícios-e-limitações-de-um-blockchain",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.10 Benefícios e Limitações de um Blockchain",
    "text": "2.10 Benefícios e Limitações de um Blockchain\n[columns]\n[column=0.5]\nBenefícios\nDescentralização\nTransparência\nConfiança\nImutabilidade\nAlta disponibilidade\nAltamente Seguro\nSimplificação de paradigmas atuais\nTransações rápidas\n\n[column=0.5]\nLimitações\nEscalabilidade\nAdaptabilidade\nRegulação\nTecnologia Relativamente Imatura (Ainda)\nPrivacidade\n[/columns]",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#características-principais",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#características-principais",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "2.11 Características Principais",
    "text": "2.11 Características Principais\n\nConsenso Distribuído\nVerificação de Transações\nPlataforma para smart contracts\nTransferência de valores entre pares\nGeneração de criptomoedas\nProvedor de Segurança\nImutabilidade\nUnicidade ou singularidade (Uniqueness)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#bitcoin-1",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#bitcoin-1",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "3.1 Bitcoin",
    "text": "3.1 Bitcoin\n\nSurgiu em \\(2008/2009\\), sendo a primeira rede Blockchain.\nRede voltada para a Criptomoeda – Bitcoin (BTC).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#bitcoin-na-perspectiva-de-usuário",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#bitcoin-na-perspectiva-de-usuário",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "3.2 Bitcoin na perspectiva de usuário ",
    "text": "3.2 Bitcoin na perspectiva de usuário \n\nPassos de como enviar e receber pagamentos:\n\nA transação começa com um remetente assinando a transação com sua chave privada. \nA transação é serializada para que possa ser transmitida pela rede.\nA transação é transmitida para a rede.\nMineradores que escutam transações pegam a transação.\nA transação é verificada quanto à sua legitimidade pelos mineradores.\nA transação é adicionada ao bloco candidato/proposto para mineração.\nUma vez minerado, o resultado é transmitido para todos os nós da rede Bitcoin.\nNormalmente, neste momento, os usuários aguardam até seis confirmações para serem recebidas antes que uma transação seja considerada final; no entanto, uma transação pode ser considerada final na etapa anterior.\nAs confirmações servem como um mecanismo adicional para garantir que haja probabilidade muito baixa de uma transação ser revertida, mas, caso contrário, uma vez que um bloco minerado seja finalizado e anunciado, as transações dentro desse bloco serão finais nesse ponto.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#chaves-criptográficas",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#chaves-criptográficas",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "3.3 Chaves Criptográficas ",
    "text": "3.3 Chaves Criptográficas \n[columns]\n[column=0.5]\n\nPrivate keys na rede Bitcoin\n\nPrivate keys são usadas para assinar digitalmente transações, comprovando a propriedade dos bitcoins.\n\nPublic keys na rede Bitcoin \n\nAs chaves públicas são usadas pelos nós para verificar se a transação foi realmente assinada com a chave privada correspondente.\n\nEndereços na rede Bitcoin\n\nUm endereço Bitcoin é criado pegando a chave pública correspondente de uma chave privada e fazendo hash duas vezes, primeiro com o algoritmo SHA256 e depois com RIPEMD160.\n\nEndereços Bitcoin são codificados usando Base58Check.\n\n[column=0.5]\n\n[/columns]",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#não-perder-as-chaves-é-importante",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#não-perder-as-chaves-é-importante",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "3.4 Não perder as chaves é importante",
    "text": "3.4 Não perder as chaves é importante\n[columns]\n[column=0.5]\n\n[column=0.5]\n\n[/columns]\nO Bitcoin Enterrado: A Caça ao Tesouro de James Howells na Vida Real",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#script",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#script",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "3.5 Script",
    "text": "3.5 Script\n\nLinguagem simples baseada em pilha usada para descrever como os bitcoins podem ser gastos ou transferidos.\nAvaliada da esquerda para a direita usando uma pilha Last in, First Out (LIFO).\nComposta por dois componentes: elementos e operações.\nScripts usam vários opcodes para definir suas operações.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#opcodes",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#opcodes",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "3.6 Opcodes",
    "text": "3.6 Opcodes\n\nAqui estão alguns exemplos de alguns opcodes úteis usados ​​na linguagem Script no blockchain do Bitcoin.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#uma-visualização-da-blockchain-do-bitcoin",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#uma-visualização-da-blockchain-do-bitcoin",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "3.7 Uma Visualização da Blockchain do Bitcoin",
    "text": "3.7 Uma Visualização da Blockchain do Bitcoin",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#bloco-genesis",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#bloco-genesis",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "3.8 Bloco Genesis",
    "text": "3.8 Bloco Genesis\n[alertblock]{Bloco Genesis}\nO Bloco Genesis ou bloco \\(\\#0\\) foi hardcoded (codificado) por suas características especiais: ele é o único que não aponta para nenhum bloco anterior. No seu hash foi encriptado o bloco junto com a mensagem “The Times 03/Jan/2009 Chancellor on brink of second bailout for banks”, manchete do jornal naquele dia. Além de servir como prova datada, a manchete escolhida representa justamente uma crítica ao sistema bancário.\n[/alertblock]\n[framebreak]\n[columns]\n[column=0.5]\n\n[column=0.5]\n\nFonte: https://github.com/bitcoin/bitcoin/blob/master/src/chainparams.cpp\n[/columns]\n[framebreak]\n/**\n * Build the genesis block. Note that the output of its generation\n * transaction cannot be spent since it did not originally exist in the\n * database.\n *\n * CBlock(hash=000000000019d6, ver=1, hashPrevBlock=00000000000000, hashMerkleRoot=4a5e1e, nTime=1231006505, nBits=1d00ffff, nNonce=2083236893, vtx=1)\n *   CTransaction(hash=4a5e1e, ver=1, vin.size=1, vout.size=1, nLockTime=0)\n *     CTxIn(COutPoint(000000, -1), coinbase 04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73)\n *     CTxOut(nValue=50.00000000, scriptPubKey=0x5F1DF16B2B704C8A578D0B)\n *   vMerkleTree: 4a5e1e\n */\nstatic CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, \nconst CAmount& genesisReward)\n{\n  const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n  const CScript genesisOutputScript = CScript() &lt;&lt; ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") &lt;&lt; OP_CHECKSIG;\n  return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n}\n[framebreak]",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#a-carteira-de-satoshi",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#a-carteira-de-satoshi",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "3.9 A carteira de Satoshi",
    "text": "3.9 A carteira de Satoshi\n\nCarteira: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n\n\n\n\n1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n\n\n\nEssa primeira transação foi incluída no bloco #0, sob o hash 4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b.\n\n\n\n\n4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\n\n\n\n\n\n4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\n\n\n\n\n\n1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n\n\n[framebreak]\n\nDetalhes da Transação:\n\n\n\n\n4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\n\n\n[framebreak]\n\n\n\n\nSaldo em 21/11/2023\n\n\n\n\n\nSaldo em 13/08/2024\n\n\n\n\n\nSaldo em 21/11/2023 Fonte: blockchain.com\n\n\n\n\n\nSaldo em 13/08/2024 Fonte: blockchain.com\n\n\n\n\n\nSaldo em 16/06/2025 Fonte: blockchain.com",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#quem-é-satoshi-nakamoto",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#quem-é-satoshi-nakamoto",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "4.1 Quem é Satoshi Nakamoto?",
    "text": "4.1 Quem é Satoshi Nakamoto?\n\n\n\nElon Musk Fonte: CanalTech\n\n\n\n\n\nDorian Nakamoto Fonte: Livecoins\n\n\n\n\n\nLinus Torvalds Fonte: Livecoins\n\n\n\n\n\nLinus Torvalds Fonte: cointelegraph\n\n\n\n\n\nSteve Jobs Fonte: Exame 10/04/2023\n\n\n\n\n\nCraig Wright Fonte: BBC 19/12/2024\n\n\n[columns]\n[column=0.5]\n\n\n\nVídeo\n\n\n[column=0.5]\n\n\n\nVídeo\n\n\n[/columns]\nLista de suspeitos no decorrer da história: https://www.infomoney.com.br/perfil/satoshi-nakamoto/",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#tamanho-do-blockchain-do-bitcoin",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#tamanho-do-blockchain-do-bitcoin",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "4.2 Tamanho do Blockchain do Bitcoin",
    "text": "4.2 Tamanho do Blockchain do Bitcoin\n\nO Blockchain do Bitcoin tinha em October 29, 2017, aproximadamente: \\(139GB\\)\n\n\n[framebreak]\n\nA figura mostra a evolução de Aug 2017 para Jul 2020. Aproximandamente, \\(286 GB\\).\n\n\n[framebreak]\n\nA figura mostra a evolução de Jan 2009 para Set 2022. Aproximandamente, \\(426.7 GB\\).\n\n\n\nFonte: https://www.blockchain.com/charts/blocks-size\nTamanho em 14/04/2023: \\(472.9 GB\\)\n\n\n\n\nTamanho em 14/04/2023 Fonte: ycharts\n\n\n\nTamanho em 09/08/2023: \\(502.06 GB\\)\n\n\n\n\nTamanho em 09/08/2023 Fonte: ycharts\n\n\n\nTamanho em 21/11/2023: \\(527.47 GB\\)\n\n\n\n\nTamanho em 21/11/2023 Fonte: ycharts\n\n\n\nTamanho em 13/08/2024: \\(592.72 GB\\)\n\n\n\n\nTamanho em 13/08/2024 Fonte: ycharts\n\n\n\nTamanho em 16/12/2024: \\(622.77 GB\\)\n\n\n\n\nTamanho em 16/12/2024 Fonte: ycharts\n\n\n[framebreak]\n\nTamanho em 16/06/2025: \\(665.07 GB\\)\n\n\n\n\nTamanho em 16/06/2025 Fonte: ycharts",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#consumo-de-energia",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#consumo-de-energia",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "4.3 Consumo de Energia",
    "text": "4.3 Consumo de Energia\n\nPico em Janeiro de 2022: \\(204.5~TWh\\) por ano.\n\n\n\n\nConsumo de Energia Fonte: digiconomist\n\n\n\nEm 21/11/2023: \\(137.68~TWh\\) por ano.\n\n\n\n\nConsumo de Energia Fonte: digiconomist\n\n\n[framebreak]\n\nEm 13/08/2024: \\(172.26~TWh\\) por ano.\n\n\n\n\nConsumo de Energia Fonte: digiconomist\n\n\n\nEm 16/12/2024: \\(175.87~TWh\\) por ano.\n\n\n\n\nConsumo de Energia Fonte: digiconomist\n\n\n\nEm 16/06/2025: \\(175.87~TWh\\) por ano.\n\n\n\n\nConsumo de Energia Fonte: digiconomist\n\n\nArtigo: “Cryptocurrencies on the road to sustainability: Ethereum paving the way for Bitcoin” (December 2022); Bitcoin’s biggest competitor, Ethereum, has reduced its electrical energy requirement by at least 99.84% by changing its method of production.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#leitura-recomendada",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#leitura-recomendada",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "4.4 Leitura Recomendada",
    "text": "4.4 Leitura Recomendada\n[alertblock]{Leitura Recomendada}\nCapítulo 5/6: Introduction Bitcoin: IMRAN BASHIR. Mastering Blockchain : Distributed Ledger Technology, Decentralization, and Smart Contracts Explained, 2nd Edition.\n[/alertblock]",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#projetos-de-pesquisa",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#projetos-de-pesquisa",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "4.5 Projetos de Pesquisa",
    "text": "4.5 Projetos de Pesquisa\nTítulo: Estudo Exploratório De Técnicas E Mecanismos Para Paralelização Automática E Offloading De Código Em Sistemas Heterogêneos (Pa-Code-Offload).\n\n\nPesquisa em Computação Paralela.\n\n\nTítulo: Investigação sobre Infraestrutura e Suporte ao Desenvolvimento de Aplicações utilizando Tecnologias Blockchain (PRO-BLOCKCHAIN).\n\n\nPesquisa em Tecnologias Blockchain.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#projetos-de-extensão",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#projetos-de-extensão",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "4.6 Projetos de Extensão",
    "text": "4.6 Projetos de Extensão\nTítulo: Escola de Computação Paralela (ECP 2024).\n\n\nPreparar e ministrar minicursos em temas de Computação Paralela.\n\n\nTítulo: Academia Blockchain.\n\n\nPreparar e ministrar minicursos relacionados às Tecnologias Blockchain.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#grupo-estudos",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#grupo-estudos",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "4.7 Grupo Estudos",
    "text": "4.7 Grupo Estudos\nGEDVAC: Grupo de Estudos sobre Desempenho, máquinas Virtuais, Arquitetura de computadores e Compiladores da UTFPR-CM.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#leitura-recomendada-1",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#leitura-recomendada-1",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "4.8 Leitura Recomendada",
    "text": "4.8 Leitura Recomendada\n[alertblock]{Leitura Recomendada}\nCapítulo 11: Ethereum 101\nLivro: IMRAN BASHIR. Mastering Blockchain : Distributed Ledger Technology, Decentralization, and Smart Contracts Explained, 2nd Edition.\nCapítulo 12: Futher Ethereum\nLivro: IMRAN BASHIR. Mastering Blockchain : Distributed Ledger Technology, Decentralization, and Smart Contracts Explained, 2nd Edition.\n[/alertblock]",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#word-cloud",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#word-cloud",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "4.9 Word Cloud",
    "text": "4.9 Word Cloud",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  },
  {
    "objectID": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#referências-1",
    "href": "aula-01-introducao-visao-geral/aula-01-introducao-visao-geral.html#referências-1",
    "title": "1  Introdução às Tecnologias Blockchain",
    "section": "5.1 Referências",
    "text": "5.1 Referências",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução às Tecnologias Blockchain</span>"
    ]
  }
]